<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KudyStudio</name>
    </assembly>
    <members>
        <member name="T:KudyStudio.Web.UrlRewriting.RewriteMode">
            <summary>
            Specifies the mode when rewriting urls.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UrlRewriting.RewriteMode.Ignore">
            <summary>
            Ignore rewrite.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UrlRewriting.RewriteMode.Normal">
            <summary>
            Normal rewrite.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UrlRewriting.RewriteMode.Domain">
            <summary>
            Domain rewrite.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UrlRewriting.RewriteMode.Redirect">
            <summary>
            Redirect rewrite.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UrlRewriting.RewriteMode.RedirectPermanent">
            <summary>
            Permanent redirect rewrite. 
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.UrlHelper">
            <summary>
            UrlHelper.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.#ctor(KudyStudio.Web.Mtv.ModeContext)">
            <summary>
            Initializes a <see cref="T:UrlHelper"/> instance.
            </summary>
            <param name="modeContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Encode(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Decode(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Content(System.String)">
            <summary>
            
            </summary>
            <param name="contentPath"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Content(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="contentPath"></param>
            <param name="fullUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.GenerateContentUrl(System.String,System.Boolean,System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="contentPath"></param>
            <param name="fullUrl"></param>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.ContentFile(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="directoryNames"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.ThemeFile(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="directoryNames"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.ResourceFile(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String)">
            <summary>
            
            </summary>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String[])">
            <summary>
            
            </summary>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.Object)">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Index(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="mode"></param>
            <param name="action"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.Object,System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="protocol"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="protocol"></param>
            <param name="hostName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Object,System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="protocol"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.Action(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="protocol"></param>
            <param name="hostName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.GenerateActionUrl(KudyStudio.Web.Mtv.ModeContext,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="protocol"></param>
            <param name="hostName"></param>
            <param name="fragment"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.GenerateActionUrl(KudyStudio.Web.Mtv.ModeContext,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String)">
            <summary>
            
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String[])">
            <summary>
            
            </summary>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.Object)">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToIndex(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlHelper.RedirectToAction(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.UrlHelper.ModeContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.UrlHelper.HttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.HtmlHelper`1">
            <summary>
            HtmlHelper.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.HtmlHelper">
            <summary>
            HtmlHelper.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.#ctor(KudyStudio.Web.Mtv.ViewContext,KudyStudio.Web.Mtv.IViewDataContainer)">
            <summary>
            Initializes a <see cref="T:HtmlHelper"/> instance.
            </summary>
            <param name="viewContext"></param>
            <param name="viewDataContainer"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Encode(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Encode(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Decode(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Decode(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.AttributeEncode(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.AttributeEncode(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Partial(System.String)">
            <summary>
            Renders the partial view with the parent's view data.
            </summary>
            <param name="viewName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Partial(System.String,System.Object)">
            <summary>
            Renders the partial view with the parent's view data and the given model.
            </summary>
            <param name="viewName"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Partial(System.String,KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            Renders the partial view with the given view data.
            </summary>
            <param name="viewName"></param>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Partial(System.String,KudyStudio.Web.Mtv.ViewDataDictionary,System.Object)">
            <summary>
            Renders the partial view with a copy of the given view data plus the given model.
            </summary>
            <param name="viewName"></param>
            <param name="viewData"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.RenderPartial(System.String)">
            <summary>
            Renders the partial view with the parent's view data.
            </summary>
            <param name="viewName"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.RenderPartial(System.String,System.Object)">
            <summary>
            Renders the partial view with the parent's view data and the given model.
            </summary>
            <param name="viewName"></param>
            <param name="model"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.RenderPartial(System.String,KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            Renders the partial view with the given view data.
            </summary>
            <param name="viewName"></param>
            <param name="viewData"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.RenderPartial(System.String,KudyStudio.Web.Mtv.ViewDataDictionary,System.Object)">
            <summary>
            Renders the partial view with a copy of the given view data plus the given model.
            </summary>
            <param name="viewName"></param>
            <param name="viewData"></param>
            <param name="model"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.RenderPartial(System.String,KudyStudio.Web.Mtv.ViewDataDictionary,System.Object,System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="viewData"></param>
            <param name="model"></param>
            <param name="writer"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Highlight(System.String,System.String)">
            <summary>
            Highlights the keywords(in ViewData.State) in the text using the tag format string "<font color='red'>{0}</font>",
            ignore Case.
            </summary>
            <param name="text">A text string.</param>
            <param name="stateNameForKeywords">The state name to get keywords from ViewData.State.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Highlight(System.String,System.Boolean,System.String)">
            <summary>
            Highlights the keywords(in ViewData.State) in the text using the tag format string "<font color='red'>{0}</font>".
            </summary>
            <param name="text">A text string.</param>
            <param name="ignoreCase">Whether ignore case or not.</param>
            <param name="stateNameForKeywords">The state name to get keywords from ViewData.State.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Highlight(System.String,System.String[])">
            <summary>
            Highlights the keywords in the text using the tag format string "<font color='red'>{0}</font>",
            ignore Case.
            </summary>
            <param name="text">A text string.</param>
            <param name="keywords">The keywords.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper.Highlight(System.String,System.Boolean,System.String[])">
            <summary>
            Highlights the keywords in the text using the tag format string "<font color='red'>{0}</font>".
            </summary>
            <param name="text">A text string.</param>
            <param name="ignoreCase">Whether ignore case or not.</param>
            <param name="keywords">The keywords.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.HtmlHelper.ViewContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.HtmlHelper.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.HtmlHelper.ViewDataContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.HtmlHelper.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.HtmlHelper`1.#ctor(KudyStudio.Web.Mtv.ViewContext,KudyStudio.Web.Mtv.IViewDataContainer)">
            <summary>
            Initializes a <see cref="T:HtmlHelper"/> instance.
            </summary>
            <param name="viewContext"></param>
            <param name="viewDataContainer"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.HtmlHelper`1.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.FilterAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.FilterAttribute.Order">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.OsDetector">
            <summary>
            Provides information about the current operating system. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.Name">
            <summary>
            The OS name.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.Version">
            <summary>
            The OS version.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.ProcessorArchitecture">
            <summary>
            The OS processor architecture.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.QueryCpuUsage">
            <summary>
            Gets The cpu usage.
            </summary>
            <returns>Cpu usage.</returns>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsUnix">
            <summary>
            Gets a value indicating whether we run under a Unix/Linux operating systems.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindows">
            <summary>
            Gets a value indicating whether we run under a Windows (95,98,ME).
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindowsCE">
            <summary>
            Gets a value indicating whether we run under a Windows CE.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindowsNT">
            <summary>
            Gets a value indicating whether we run under a Windows NT, 2000, 2003 and future versions based on NT technology.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindowsXp">
            <summary>
            Gets a value indicating whether we run under a Windows Xp versions based on NT technology.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindowsVista">
            <summary>
            Gets a value indicating whether we run under a Windows Vista versions based on NT technology.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsWindows7">
            <summary>
            Gets a value indicating whether we run under a Windows 7 and future versions based on NT technology.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.OsDetector.IsRunningOn64Bit">
            <summary>
            Gets a value indicating if the process is running in 64 bit environment.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.OsDetector.RunningOn">
            <summary>
            Provides information about what operating system running on.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.RunningOn.Linux">
            <summary>
            True if running on Linux.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.RunningOn.Windows">
            <summary>
            True if running on Windows.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.RunningOn.SunOS">
            <summary>
            True if running on SunOS.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.OsDetector.CpuUsage">
            <summary>
            Defines an abstract base class for implementations of CPU usage counters.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsage.m_CpuUsage">
            <summary>
            Holds an instance of the CPUUsage class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.CpuUsage.Create">
            <summary>
            Creates and returns a CpuUsage instance that can be used to query the CPU time on this operating system.
            </summary>
            <returns>An instance of the CpuUsage class.</returns>
            <exception cref="T:System.NotSupportedException">This platform is not supported -or- initialization of the CPUUsage object failed.</exception>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.CpuUsage.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="T:KudyStudio.Utility.OsDetector.CpuUsageNt">
            <summary>
            Inherits the CPUUsage class and implements the Query method for Windows NT systems.
            </summary>
            <remarks>
            <p>This class works on Windows NT4, Windows 2000, Windows XP, Windows .NET Server and higher.</p>
            <p>You should not use this class directly in your code. Use the CPUUsage.Create() method to instantiate a CPUUsage object.</p>
            </remarks>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.SYSTEM_BASICINFORMATION">
            <summary>Returns the number of processors in the system in a SYSTEM_BASIC_INFORMATION structure.</summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.SYSTEM_PERFORMANCEINFORMATION">
            <summary>Returns an opaque SYSTEM_PERFORMANCE_INFORMATION structure.</summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.SYSTEM_TIMEINFORMATION">
            <summary>Returns an opaque SYSTEM_TIMEOFDAY_INFORMATION structure.</summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.NO_ERROR">
            <summary>The value returned by NtQuerySystemInformation is no error occurred.</summary>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.CpuUsageNt.NtQuerySystemInformation(System.Int32,System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            NtQuerySystemInformation is an internal Windows function that retrieves various kinds of system information.
            </summary>
            <param name="dwInfoType">One of the values enumerated in SYSTEM_INFORMATION_CLASS, indicating the kind of system information to be retrieved.</param>
            <param name="lpStructure">Points to a buffer where the requested information is to be returned. The size and structure of this information varies depending on the value of the SystemInformationClass parameter.</param>
            <param name="dwSize">Length of the buffer pointed to by the SystemInformation parameter.</param>
            <param name="returnLength">Optional pointer to a location where the function writes the actual size of the information requested.</param>
            <returns>Returns a success NTSTATUS if successful, and an NTSTATUS error code otherwise.</returns>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.oldIdleTime">
            <summary>Holds the old idle time.</summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.oldSystemTime">
            <summary>Holds the old system time.</summary>
        </member>
        <member name="F:KudyStudio.Utility.OsDetector.CpuUsageNt.processorCount">
            <summary>Holds the number of processors in the system.</summary>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.CpuUsageNt.#ctor">
            <summary>
            Initializes a new CpuUsageNt instance.
            </summary>
            <exception cref="T:System.NotSupportedException">One of the system calls fails.</exception>
        </member>
        <member name="M:KudyStudio.Utility.OsDetector.CpuUsageNt.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ValidateInputAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.IAuthorizationFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.IAuthorizationFilter.OnAuthorization(KudyStudio.Web.Mtv.AuthorizationContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ValidateInputAttribute.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="enableValidation"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ValidateInputAttribute.OnAuthorization(KudyStudio.Web.Mtv.AuthorizationContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ValidateInputAttribute.EnableValidation">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.PagedList`1">
            <summary>
            This class contains the datas and other informations of a pager. 
            </summary>
            <typeparam name="T">The type of data to contain.</typeparam>
        </member>
        <member name="T:KudyStudio.IPagedList`1">
            <summary>
            
            </summary>
            <typeparam name="T">The type of data to contain.</typeparam>
        </member>
        <member name="M:KudyStudio.IPagedList`1.IndexOf(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.IPagedList`1.Contains(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.IPagedList`1.CopyTo(`0[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:KudyStudio.IPagedList`1.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.IPagedList`1.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.IPagedList`1.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.IPagedList`1.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.IPagedList`1.RecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.IPagedList`1.PageCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:PagedList`1"/> with all data 
            to auto paginate and takes only the data that in current page index.
            </summary>
            <param name="source">All data to paginate.</param>
            <param name="pageSize">The size of page.</param>
            <param name="pageIndex">The index of page.</param>
        </member>
        <member name="M:KudyStudio.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:PagedList`1"/> with only the 
            data that in current page index.
            </summary>
            <param name="source">The data that in current page index.</param>
            <param name="pageSize">The size of page.</param>
            <param name="pageIndex">The index of page.</param>
            <param name="recordCount">The record count of all data.</param>
        </member>
        <member name="M:KudyStudio.PagedList`1.IndexOf(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.PagedList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the <see cref="T:PagedList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:PagedList`1"/>. The value 
            can be null for reference types.</param>
            <returns>true if item is found in the <see cref="T:PagedList`1"/>; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.PagedList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:PagedList`1"/> to a compatible one-dimensional 
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements 
            copied from <see cref="T:PagedList`1"/>. The System.Array must have 
            zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:KudyStudio.PagedList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:PagedList`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.PagedList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:KudyStudio.PagedList`1.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:PagedList`1"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.PagedList`1.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.PagedList`1.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.PagedList`1.RecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.PagedList`1.PageCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Data.OleDbHelper">
            <summary>
            The OleDbHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of OleDb.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.AttachParameters(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of SqlParameters tho be added to command</param>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.AssignParameterValues(System.Data.OleDb.OleDbParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">array of SqlParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.PrepareCommand(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the SqlCommand to be prepared</param>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteNonQuery(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the provided OleDbConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the specified OleDbConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the specified OleDbConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the provided OleDbTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the specified OleDbTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteDataset(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the specified 
            OleDbTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[],KudyStudio.Data.OleDbHelper.OleDbConnectionOwnership)">
            <summary>
            Create and prepare a OleDbCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid OleDbConnection, on which to execute this command</param>
            <param name="transaction">a valid OleDbTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by OleDbHelper</param>
            <returns>OleDbDataReader containing the results of the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             OleDbDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             OleDbDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OleDbDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the provided OleDbConnection. 
            </summary>
            <remarks>
            e.g.:  
             OleDbDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the specified OleDbConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             OleDbDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the specified OleDbConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OleDbDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a resultset and takes no parameters) against the provided OleDbTransaction. 
            </summary>
            <remarks>
            e.g.:  
             OleDbDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a resultset) against the specified OleDbTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              OleDbDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteReader(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a resultset) against the specified
            OleDbTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OleDbDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OleDbDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset and takes no parameters) against the provided OleDbConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbConnection,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset) against the specified OleDbConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a 1x1 resultset) against the specified OleDbConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset and takes no parameters) against the provided OleDbTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            Execute a OleDbCommand (that returns a 1x1 resultset) against the specified OleDbTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new OleDbParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelper.ExecuteScalar(System.Data.OleDb.OleDbTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OleDbCommand (that returns a 1x1 resultset) against the specified
            OleDbTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid OleDbTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="T:KudyStudio.Data.OleDbHelper.OleDbConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by OleDbHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:KudyStudio.Data.OleDbHelper.OleDbConnectionOwnership.Internal">
            <summary>Connection is owned and managed by OleDbHelper</summary>
        </member>
        <member name="F:KudyStudio.Data.OleDbHelper.OleDbConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:KudyStudio.Data.OleDbHelperParameterCache">
            <summary>
            OleDbHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of OleDbParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OleDbParamters to be cached</param>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an array of OleDbParamters</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of OleDbParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of OleDbParameters</returns>
        </member>
        <member name="M:KudyStudio.Data.OleDbHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of OleDbParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a OleDbConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of OleDbParameters</returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemsQueue">
            <summary>
            WorkItemsQueue class.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue._headWaiterEntry">
            <summary>
            Waiters queue (implemented as stack).
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue._waitersCount">
            <summary>
            Waiters count
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue._workItems">
            <summary>
            Work items queue
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue._isWorkItemsQueueActive">
            <summary>
            Indicate that work items are allowed to be queued
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue._isDisposed">
            <summary>
            A flag that indicates if the WorkItemsQueue has been disposed.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.EnqueueWorkItem(KudyStudio.Utility.Threading.Internal.WorkItem)">
            <summary>
            Enqueue a work item to the queue.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.DequeueWorkItem(System.Int32,System.Threading.WaitHandle)">
            <summary>
            Waits for a work item or exits on timeout or cancel
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds</param>
            <param name="cancelEvent">Cancel wait handle</param>
            <returns>Returns true if the resource was granted</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.Cleanup">
            <summary>
            Cleanup the work items queue, hence no more work 
            items are allowed to be queue
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.GetThreadWaiterEntry">
            <summary>
            Returns the WaiterEntry of the current thread
            </summary>
            <returns></returns>
            In order to avoid creation and destuction of WaiterEntry
            objects each thread has its own WaiterEntry object.
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.PushWaiter(KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry)">
            <summary>
            Push a new waiter into the waiter's stack
            </summary>
            <param name="newWaiterEntry">A waiter to put in the stack</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.PopWaiter">
            <summary>
            Pop a waiter from the waiter's stack
            </summary>
            <returns>Returns the first waiter in the stack</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.RemoveWaiter(KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry,System.Boolean)">
            <summary>
            Remove a waiter from the stack
            </summary>
            <param name="waiterEntry">A waiter entry to remove</param>
            <param name="popDecrement">If true the waiter count is always decremented</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.CurrentWaiterEntry">
            <summary>
            Each thread in the thread pool keeps its own waiter entry.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.Count">
            <summary>
            Returns the current number of work items in the queue
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaitersCount">
            <summary>
            Returns the current number of waiters
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry">
            <summary>
            A waiter entry in the _waiters queue.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry._waitHandle">
            <summary>
            Event to signal the waiter that it got the work item.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry._isTimedout">
            <summary>
            Flag to know if this waiter already quited from the queue 
            because of a timeout.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry._isSignaled">
            <summary>
            Flag to know if the waiter was signaled and got a work item. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry._workItem">
            <summary>
            A work item that passed directly to the waiter withou going 
            through the queue
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.Signal(KudyStudio.Utility.Threading.Internal.WorkItem)">
            <summary>
            Signal the waiter that it got a work item.
            </summary>
            <returns>Return true on success</returns>
            The method fails if Timeout() preceded its call
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.Timeout">
            <summary>
            Mark the wait entry that it has been timed out
            </summary>
            <returns>Return true on success</returns>
            The method fails if Signal() preceded its call
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.Reset">
            <summary>
            Reset the wait entry so it can be used again
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.Close">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.WaitHandle">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsQueue.WaiterEntry.WorkItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemCancelException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been canceled
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been canceled
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemCancelException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemCancelException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemCancelException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemCancelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemTimeoutException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemTimeoutException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemTimeoutException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemResultException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemResultException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemResultException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemResultException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedClient">
            <summary>
            Memcached client class. It provides static methods <see cref="M:CreateClient"/> and 
            <see cref="M:FetchClient"/> to create and fetch an instance of the client for use. 
            If any memcached client configurations are set in the KudyStudio config file, just 
            use <see cref="M:FetchClient"/> to get the client instances by the names specified in 
            the configuration.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.MemcachedClient.Infinite">
            <summary>
            Represents a value which indicates that an entry should never expire.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Contains(System.String)">
            <summary>
            Checks whether the specified item in the cache.
            </summary>
            <param name="key">The identifier for the item to check.</param>
            <returns>True if the item was in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Delete(System.String)">
            <summary>
            Deletes the specified item immediately from the cache.
            </summary>
            <param name="key">The identifier for the item to delete.</param>
            <returns>True if the item was successfully deleted from the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Delete(System.String,System.TimeSpan)">
            <summary>
            Deletes the specified item from the cache, using an delay time relative 
            as a <see cref="T:System.TimeSpan"/> the item should be in the delete queue on 
            the server.
            </summary>
            <param name="key">The identifier for the item to delete.</param>
            <param name="delay">An amount of time the item should be in the delete queue on the server</param>
            <returns>True if the item was successfully deleted from the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Delete(System.String,System.DateTime)">
            <summary>
            Deletes the specified item from the cache, using an delay time absolute 
            as a <see cref="T:System.DateTime"/> the item should be in the delete queue on 
            the server.
            </summary>
            <param name="key">The identifier for the item to delete.</param>
            <param name="delay">An amount of time the item should be in the delete queue on the server</param>
            <returns>True if the item was successfully deleted from the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Get``1(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <typeparam name="T">The type of the specified item from the cache.</typeparam>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>The retrieved item, or <c>null</c>/<c>default(T)</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Get(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>The retrieved item, or <c>null</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Get``1(System.String,System.UInt64@)">
            <summary>
            Retrieves the specified item from the cache and return the cas unique value 
            for the item. The cas unique value returns 0 if the key was not found.
            </summary>
            <typeparam name="T">The type of the specified item from the cache.</typeparam>
            <param name="key">The identifier for the item to retrieve.</param>
            <param name="casUnique">The cas unique value for the key.</param>
            <returns>The retrieved item, or <c>null</c>/<c>default(T)</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Get(System.String,System.UInt64@)">
            <summary>
            Retrieves the specified item from the cache and return the cas unique value 
            for the item. The cas unique value returns 0 if the key was not found.
            </summary>
            <param name="key">The identifier for the item to retrieve.</param>
            <param name="casUnique">The cas unique value for the key.</param>
            <returns>The retrieved item, or <c>null</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves multiple items from the cache. This is recommended over repeated 
            calls to <see cref="M:Get"/>, since it is more efficient.
            </summary>
            <param name="keys">The list of identifiers for the items to retrieve.</param>
            <returns>a Dictionary holding all items indexed by their key.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.GetValues(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.UInt64}@)">
            <summary>
            Retrieves multiple items from the cache. This is recommended over repeated 
            calls to <see cref="M:Get"/>, since it is more efficient.
            </summary>
            <param name="keys">The list of identifiers for the items to retrieve.</param>
            <param name="casUniques">The cas unique values for the keys.</param>
            <returns>a Dictionary holding all items indexed by their key.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Increment(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. 
            The operation is atomic and happens on the server.
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="value">The value by which the client wants to increase the item.</param>
            <returns>The new value of the item or -1 if not found.</returns>
            <remarks>
            The item must be inserted into the cache before it can be changed. 
            The item must be inserted as a <see cref="T:String"/>. The 
            operation only works with <see cref="T:System.UInt32"/> values, so -1 
            always indicates that the item was not found.
            </remarks>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Decrement(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. 
            The operation is atomic and happens on the server.
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="value">The value by which the client wants to decrease the item.</param>
            <returns>The new value of the item or -1 if not found.</returns>
            <remarks>
            The item must be inserted into the cache before it can be changed. 
            The item must be inserted as a <see cref="T:String"/>. The 
            operation only works with <see cref="T:System.UInt32"/> values, so -1 
            always indicates that the item was not found.
            </remarks>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.GetCounter(System.String)">
            <summary>
            Retrieves the specified 64-bit counter from the cache.
            </summary>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>The retrieved 64-bit counter, or <c>-1</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.SetCounter(System.String,System.Int64)">
            <summary>
            Unconditionally sets a 64-bit counter into the cache. The item does not expire 
            unless it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The counter to be inserted into the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.SetCounter(System.String,System.Int64,System.TimeSpan)">
            <summary>
            Unconditionally sets a 64-bit counter into the cache using an expiry time relative 
            as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The counter to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.SetCounter(System.String,System.Int64,System.DateTime)">
            <summary>
            Unconditionally sets a 64-bit counter into the cache using an expiry time absolute 
            as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The counter to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Object)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            The item does not expire unless it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>True if the value was successfully added in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, The item does not expire unless it is 
            removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <returns>True if the value was successfully added in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully added in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Object,System.DateTime)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully added in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Byte[],System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Adds a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully added in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Add(System.String,System.Byte[],System.Int32,System.Int32,System.DateTime)">
            <summary>
            Adds a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully added; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Object)">
            <summary>
            Sets an object into the cache unconditionally. The item does not expire unless 
            it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets a range of bytes (usually memory area or serialized data) into the cache 
            unconditionally. The item does not expire unless it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            Sets an object into the cache unconditionally using an expiry time relative as 
            a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Object,System.DateTime)">
            <summary>
            Sets an object into the cache unconditionally using an expiry time absolute as 
            a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Byte[],System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Sets a range of bytes (usually memory area or serialized data) into the cache 
            unconditionally, using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Set(System.String,System.Byte[],System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets a range of bytes (usually memory area or serialized data) into the cache 
            unconditionally, using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully set; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Object)">
            <summary>
            Replaces an object into the cache only if the key does not already exist, 
            The item does not expire unless it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Replaces a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, The item does not expire unless it is 
            removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Object,System.TimeSpan)">
            <summary>
            Replaces an object into the cache only if the key does not already exist, 
            using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Object,System.DateTime)">
            <summary>
            Replaces an object into the cache only if the key does not already exist, 
            using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Byte[],System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Replaces a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Replace(System.String,System.Byte[],System.Int32,System.Int32,System.DateTime)">
            <summary>
            Replaces a range of bytes (usually memory area or serialized data) into the cache 
            only if the key does not already exist, using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
            <returns>True if the value was successfully replaced; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Object,System.UInt64)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Byte[],System.Int32,System.Int32,System.UInt64)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Object,System.UInt64,System.TimeSpan)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Object,System.UInt64,System.DateTime)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Byte[],System.Int32,System.Int32,System.UInt64,System.TimeSpan)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CheckAndSet(System.String,System.Byte[],System.Int32,System.Int32,System.UInt64,System.DateTime)">
            <summary>
            Updates an item in the cache with a cache key to reference its location, 
            but only if it has not been changed since the last retrieval. The invoker 
            must pass in the value returned by <see cref="M:Gets"/> called "cas" value. 
            If this value matches the server's value, the item will be updated; otherwise the update fails.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be stored.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to store.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to store.</param>
            <param name="casUnique">The unique value returned by <see cref="M:Gets"/>.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Append(System.String,System.Object)">
            <summary>
            Appends the given data to the given key, if the key already exists.
            Modifying a key with this call will not change its expiry time.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The value to be stored.</param>
            <returns>True if the data was successfully appended; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Append(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Appends a range of bytes (usually memory area or serialized data) to the 
            given key, if the key already exists. Modifying a key with this call will 
            not change its expiry time.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be appended.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to append.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to append.</param>
            <returns>True if the value was successfully appended in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Prepend(System.String,System.Object)">
            <summary>
            Prepends the given data to the given key, if the key already exists.
            Modifying a key with this call will not change its expiry time.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The value to be stored.</param>
            <returns>True if the data was successfully stored; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Prepend(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Prepends a range of bytes (usually memory area or serialized data) to the 
            given key, if the key already exists. Modifying a key with this call will 
            not change its expiry time.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The data to be prepended.</param>
            <param name="offset">A 32 bit integer that represents the index of the first byte to prepend.</param>
            <param name="count">A 32 bit integer that represents the number of bytes to prepend.</param>
            <returns>True if the value was successfully prepended; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FlushAll">
            <summary>
            Send the flush command to all servers, thereby deleting
            all items on all servers.
            </summary>
            <summary>
            Returns true only if succeeds in clearing all servers.
            </summary>
            <returns>true only if succeeds in clearing all servers, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FlushAll(System.TimeSpan,System.Boolean)">
            <summary>
            Send the flush command to all servers, thereby deleting
            all items on all servers using delay.
            </summary>
            <param name="delay">The delay for flush action.</param>
            <param name="staggered">
            If set staggered true, the client will increase the delay for each server, i.e. 
            the first will flush after delay*0, the second after delay*1, the third after 
            delay*2, etc. If set to false, all servers will flush after the same delay.
            </param>
            <returns>true only if succeeds in clearing all servers, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FlushAll(System.String[])">
            <summary>
            Send the flush command to all servers, thereby deleting
            all items on the specified servers.
            </summary>
            <param name="servers">The servers to flush or set it <c>null</c> to flush all servers.</param>
            <returns>true only if succeeds in clearing all servers, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FlushAll(System.String[],System.TimeSpan,System.Boolean)">
            <summary>
            Send the flush command to all servers, thereby deleting
            all items on the specified servers using delay.
            </summary>
            <param name="servers">The servers to flush or set it <c>null</c> to flush all servers.</param>
            <param name="delay">The delay for flush action.</param>
            <param name="staggered">
            If set staggered true, the client will increase the delay for each server, i.e. 
            the first will flush after delay*0, the second after delay*1, the third after 
            delay*2, etc. If set to false, all servers will flush after the same delay.
            </param>
            <returns>true only if succeeds in clearing all servers, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.StatsFormated">
            <summary>
            Returns a <see cref="T:ServerStats"/> that contains statistics about the servers.
            </summary>
            <returns>A <see cref="T:ServerStats"/> contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.StatsFormated(System.String[])">
            <summary>
            Returns a <see cref="T:ServerStats"/> that contains statistics about the servers.
            </summary>
            <param name="servers">
            The servers to get stats from.
            A list of memcached servers to get stats from, in standard notation: address:port. 
            If port is omitted, the default value of 11211 is used.
            </param>
            <returns>A <see cref="T:ServerStats"/> contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.StatsFormated(System.Net.IPEndPoint[])">
            <summary>
            Returns a <see cref="T:ServerStats"/> that contains statistics about the servers.
            </summary>
            <param name="servers">The servers to get stats from.</param>
            <returns>A <see cref="T:ServerStats"/> contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Stats">
            <summary>
            Returns a dictionary that contains statistics about the servers.
            </summary>
            <returns>A dictionary contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Stats(System.String[])">
            <summary>
            Returns a dictionary that contains statistics about the servers.
            </summary>
            <param name="servers">
            The servers to get stats from.
            A list of memcached servers to get stats from, in standard notation: address:port. 
            If port is omitted, the default value of 11211 is used.
            </param>
            <returns>A dictionary contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.Stats(System.Net.IPEndPoint[])">
            <summary>
            Returns a dictionary that contains statistics about the servers.
            </summary>
            <param name="servers">The servers to get stats from.</param>
            <returns>A dictionary contains the stats.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.ContainsClient(System.String)">
            <summary>
            Checks if a given named <see cref="T:MemcachedClient"/> instance exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <returns>True if the given named MemcachedClient instance exists, otherwise false.</returns>
            <exception cref="T:ArgumentException">The name is null or empty.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FetchClient">
            <summary>
            Fetch the instance using the client configuration named <seealso cref="F:MemcachedConfigElement.DefaultClient"/> value.
            </summary>
            <returns>The default instance.</returns>
            <exception cref="T:MemcachedClientException">The configuration named the <seealso cref="F:MemcachedConfigElement.DefaultClient"/> has not been set.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.FetchClient(System.String)">
            <summary>
            Fetch the instance using the given name.
            This method will first check for named instances that has been created programmatically.
            If no such instance exists, it will check the "kudyNet/caching/memcached/client" sections 
            for the named configuration. If that also fails, an exception is thrown.
            </summary>
            <param name="name">The name of the instance.</param>
            <returns>The named instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty.</exception>
            <exception cref="T:MemcachedClientException">The given named <see cref="T:MemcachedClient"/> instance has not been created.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="servers">
            A list of memcached servers in standard notation: address:port. 
            If port is omitted, the default value of 11211 is used. 
            Both IP addresses and host names are accepted, for example:
            "127.0.0.1", "127.0.0.1:11211", "cache01.domain.com:55555", etc.
            </param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.Net.IPEndPoint[])">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="servers">A list of memcached servers in <see cref="T:IPEndPoint"/>.</param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.String,System.Boolean,System.Int32,System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="keyPrefix">The key prefix which will be appended to all keys before they are sent to the memcached server.</param>
            <param name="enableCompression">
            If enabled, data will be stored in compressed form if it is
            longer than the <paramref name="compressionThreshold"/> length.
            </param>
            <param name="compressionThreshold">
            If the length of the data to be stored is not equal or larger than this value, it will
            not be compressed.
            </param>
            <param name="servers">
            A list of memcached servers in standard notation: address:port. 
            If port is omitted, the default value of 11211 is used. 
            Both IP addresses and host names are accepted, for example:
            "127.0.0.1", "127.0.0.1:11211", "cache01.domain.com:55555", etc.
            </param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.String,System.Boolean,System.Int32,System.Net.IPEndPoint[])">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="keyPrefix">The key prefix which will be appended to all keys before they are sent to the memcached server.</param>
            <param name="enableCompression">
            If enabled, data will be stored in compressed form if it is
            longer than the <paramref name="compressionThreshold"/> length.
            </param>
            <param name="compressionThreshold">
            If the length of the data to be stored is not equal or larger than this value, it will
            not be compressed.
            </param>
            <param name="servers">A list of memcached servers in <see cref="T:IPEndPoint"/>.</param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.String,System.Boolean,System.Int32,System.String[],System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="keyPrefix">The key prefix which will be appended to all keys before they are sent to the memcached server.</param>
            <param name="enableCompression">
            If enabled, data will be stored in compressed form if it is
            longer than the <paramref name="compressionThreshold"/> length.
            </param>
            <param name="compressionThreshold">
            If the length of the data to be stored is not equal or larger than this value, it will
            not be compressed.
            </param>
            <param name="servers">
            A list of memcached servers in standard notation: address:port. 
            If port is omitted, the default value of 11211 is used. 
            Both IP addresses and host names are accepted, for example:
            "127.0.0.1", "127.0.0.1:11211", "cache01.domain.com:55555", etc.
            </param>
            <param name="minPoolSize">The minimum amount of sockets per server in the socket pool.</param>
            <param name="maxPoolSize">The maximum amount of sockets per server in the socket pool.</param>
            <param name="connectTimeout">The amount of time after which the connection attempt will fail.</param>
            <param name="sendTimeout">The amount of time after which sending data to the socket fails.</param>
            <param name="receiveTimeout">The amount of time after which receiving data from the socket fails.</param>
            <param name="deadTimeout">The amount of time after which an unresponsive (dead) server will be checked if it is working.</param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(System.String,System.String,System.Boolean,System.Int32,System.Net.IPEndPoint[],System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="keyPrefix">The key prefix which will be appended to all keys before they are sent to the memcached server.</param>
            <param name="enableCompression">
            If enabled, data will be stored in compressed form if it is
            longer than the <paramref name="compressionThreshold"/> length.
            </param>
            <param name="compressionThreshold">
            If the length of the data to be stored is not equal or larger than this value, it will
            not be compressed.
            </param>
            <param name="servers">A list of memcached servers in <see cref="T:IPEndPoint"/>.</param>
            <param name="minPoolSize">The minimum amount of sockets per server in the socket pool.</param>
            <param name="maxPoolSize">The maximum amount of sockets per server in the socket pool.</param>
            <param name="connectTimeout">The amount of time after which the connection attempt will fail.</param>
            <param name="sendTimeout">The amount of time after which sending data to the socket fails.</param>
            <param name="receiveTimeout">The amount of time after which receiving data from the socket fails.</param>
            <param name="deadTimeout">The amount of time after which an unresponsive (dead) server will be checked if it is working.</param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:ArgumentException">The name is null or empty -or- Unable to resolve server strings.</exception>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClient.CreateClient(KudyStudio.Caching.Memcached.Config.ClientConfigElement)">
            <summary>
            Creates a new instance of the <see cref="T:MemcachedClient"/> using the specified configuration.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="configuration">The client configuration.</param>
            <returns>The reated <see cref="T:MemcachedClient"/> instance.</returns>
            <exception cref="T:MemcachedClientException">The MemcachedClient name already exists.</exception>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.Name">
            <summary>
            Gets the name of current instance.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.KeyPrefix">
            <summary>
            If you specify a key prefix, it will be appended to all keys before they are sent 
            to the memcached server.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.EnableCompression">
            <summary>
            Enable storing compressed data, if enabled, data will be stored in compressed form 
            if it is longer than the <see cref="F:CompressionThreshold"/> length. The default is 
            that compression is enabled. Even if compression is disabled, compressed data will 
            be automatically decompressed.
            </summary>
            <value><c>true</c> to enable compuression, <c>false</c> to disable compression</value>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.CompressionThreshold">
            <summary>
            Sets the required length for data to be considered for compression. If the length of 
            the data to be stored is not equal or larger than this value, it will not be compressed.
            This defaults to 10 KB.
            </summary>
            <value>required length of data to consider compression</value>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.Servers">
            <summary>
            Gets a list of <see cref="T:IPEndPoint"/> each representing a memcached server in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.DeadServers">
            <summary>
            Gets a list of <see cref="T:IPEndPoint"/> each representing a memcached server which is dead in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.AliveServers">
            <summary>
            Gets a list of <see cref="T:IPEndPoint"/> each representing a memcached server which is alive in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.MinPoolSize">
            <summary>
            Gets a value indicating the minimum amount of sockets per server in the socket pool.
            </summary>
            <returns>The minimum amount of sockets per server in the socket pool. The default is 10.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.MaxPoolSize">
            <summary>
            Gets a value indicating the maximum amount of sockets per server in the socket pool.
            </summary>
            <returns>The maximum amount of sockets per server in the socket pool. The default is 200.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.ConnectTimeout">
            <summary>
            Gets a value that specifies the amount of time after which the connection attempt will fail.
            </summary>
            <returns>The value of the connection timeout. The default is 10 seconds.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.SendTimeout">
            <summary>
            Gets a value that specifies the amount of time after which sending data to the socket fails.
            </summary>
            <returns>The value of the connection timeout. The default is 10 seconds.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.ReceiveTimeout">
            <summary>
            Gets a value that specifies the amount of time after which receiving data from the socket fails.
            </summary>
            <returns>The value of the receive timeout. The default is 10 seconds.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedClient.DeadTimeout">
            <summary>
            Gets a value that specifies the amount of time after which an unresponsive (dead) server will 
            be checked if it is working.
            </summary>
            <returns>The value of the dead timeout. The default is 5 minutes.</returns>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.IPlugInIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugInIdentifier.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.Parse``1(System.String)">
            <summary>
            Parses the specified enum member name, returning it's value.
            </summary>
            <param name="enumMemberName">Name of the enum member.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.Parse``1(System.String,System.Boolean)">
            <summary>
            Parses the specified enum member name, returning it's value.
            </summary>
            <param name="enumMemberName">Name of the enum member.</param>
            <param name="ignoreCase">If set to <c>true</c> ignore case.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.GetNamesAndValues``1">
            <summary>
            Gets a dictionary of the names and values of an Enum type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.GetNamesAndValues``2">
            <summary>
            Gets a dictionary of the names and values of an Enum type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.GetNamesAndValues``1(System.Type)">
            <summary>
            Gets a dictionary of the names and values of an Enum type.
            </summary>
            <param name="enumType">The enum type to get names and values for.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.EnumUtils.GetMaximumValue``1(System.Type)">
            <summary>
            Gets the maximum valid value of an Enum type. Flags enums are ORed.
            </summary>
            <typeparam name="TEnumType">The type of the returned value. Must be assignable from the enum's underlying value type.</typeparam>
            <param name="enumType">The enum type to get the maximum value for.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.IsNullOrEmpty(System.Collections.ICollection)">
            <summary>
            Determines whether the collection is null or empty.
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if the collection is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether the collection is null or empty.
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if the collection is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.IsNullOrEmptyOrDefault``1(System.Collections.Generic.IList{``0})">
            <summary>
            Determines whether the collection is null, empty or its contents are uninitialized values.
            </summary>
            <param name="list">The list.</param>
            <returns>
            	<c>true</c> if the collection is null or empty or its contents are uninitialized values; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Makes a slice of the specified list in between the start and end indexes.
            </summary>
            <param name="list">The list.</param>
            <param name="start">The start index.</param>
            <param name="end">The end index.</param>
            <returns>A slice of the list.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.Slice``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Makes a slice of the specified list in between the start and end indexes,
            getting every so many items based upon the step.
            </summary>
            <param name="list">The list.</param>
            <param name="start">The start index.</param>
            <param name="end">The end index.</param>
            <param name="step">The step.</param>
            <returns>A slice of the list.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.GroupBy``2(System.Collections.Generic.ICollection{``1},System.Func{``1,``0})">
            <summary>
            Group the collection using a function which returns the key.
            </summary>
            <param name="source">The source collection to group.</param>
            <param name="keySelector">The key selector.</param>
            <returns>A Dictionary with each key relating to a list of objects in a list grouped under it.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.CollectionUtils.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the specified generic IList.
            </summary>
            <param name="initial">The list to add to.</param>
            <param name="collection">The collection of elements to add.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.ValidationEventArgs">
            <summary>
            Returns detailed information related to the <see cref="T:KudyStudio.Utility.Json.Schema.ValidationEventHandler"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.ValidationEventArgs.Exception">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaException"/> associated with the validation event.
            </summary>
            <value>The JsonSchemaException associated with the validation event.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.ValidationEventArgs.Message">
            <summary>
            Gets the text description corresponding to the validation event.
            </summary>
            <value>The text description.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JTokenType">
            <summary>
            Specifies the type of token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.None">
            <summary>
            No token type has been set.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Constructor">
            <summary>
            A JSON constructor.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Property">
            <summary>
            A JSON object property.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Float">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Undefined">
            <summary>
            An undefined value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Date">
            <summary>
            A date value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Raw">
            <summary>
            A raw JSON value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JTokenType.Bytes">
            <summary>
            A collection of bytes value.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonSerializerSettings">
            <summary>
            Specifies the settings on a <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/> class.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.ReferenceLoopHandling">
            <summary>
            Gets or sets how reference loops (e.g. a class referencing itself) is handled.
            </summary>
            <value>Reference loop handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.MissingMemberHandling">
            <summary>
            Gets or sets how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during deserialization.
            </summary>
            <value>Missing member handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.NullValueHandling">
            <summary>
            Gets or sets how null values are handled during serialization and deserialization.
            </summary>
            <value>Null value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.DefaultValueHandling">
            <summary>
            Gets or sets how null default are handled during serialization and deserialization.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.Converters">
            <summary>
            Gets or sets a collection <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> that will be used during serialization.
            </summary>
            <value>The converters.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            </summary>
            <value>The preserve references handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Serialization.IReferenceResolver"/> used by the serializer when resolving references.
            </summary>
            <value>The reference resolver.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.Binder">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> used by the serializer when resolving type names.
            </summary>
            <value>The binder.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.Error">
            <summary>
            Gets or sets the error handler called during serialization and deserialization.
            </summary>
            <value>The error handler called during serialization and deserialization.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializerSettings.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext"/> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonReaderException">
            <summary>
            The exception thrown when an error occurs while reading Json text.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonReaderException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonReaderException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonReaderException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReaderException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReaderException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonObjectAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> how to serialize the object.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonContainerAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> how to serialize the object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonContainerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonContainerAttribute"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonContainerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonContainerAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonContainerAttribute.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonContainerAttribute.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonContainerAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonContainerAttribute.IsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve object reference data.
            </summary>
            <value>
            	<c>true</c> to keep object reference; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonObjectAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonObjectAttribute"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonObjectAttribute.#ctor(KudyStudio.Utility.Json.MemberSerialization)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonObjectAttribute"/> class with the specified member serialization.
            </summary>
            <param name="memberSerialization">The member serialization.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonObjectAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonObjectAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonObjectAttribute.MemberSerialization">
            <summary>
            Gets or sets the member serialization.
            </summary>
            <value>The member serialization.</value>
        </member>
        <member name="T:KudyStudio.EnumExtensions">
            <summary>
            Provides a set of static method extensions for <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.EnumExtensions.IsDefined(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.HasFlagsAttribute(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToByte(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToSByte(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToInt16(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToUInt16(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToInt32(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToUInt32(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToInt64(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToUInt64(System.Enum)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToEnum``1(System.ValueType)">
            <summary>
            Converts the object representation of the name or numeric value of one or 
            more enumerated constants to an equivalent enumerated value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A value to convert.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToEnum``1(System.String)">
            <summary>
            Converts the string representation of the name or numeric value of one or 
            more enumerated constants to an equivalent enumerated value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A string containing the name or value to convert.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.ToEnum``1(System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or 
            more enumerated constants to an equivalent enumerated value. A parameter 
            specifies whether the operation is case-sensitive.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A string containing the name or value to convert.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.Has``1(System.Enum,``0)">
            <summary>
            Checks if the current enumerated value contains an enumerated value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A string containing the name or value to convert.</param>
            <param name="value">The enumerated value to be checked.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.Include``1(System.Enum,``0)">
            <summary>
            Includes an enumerated e from the current enumerated value 
            and returns the new enumerated value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A string containing the name or value to convert.</param>
            <param name="value">The enumerated value to be included.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="M:KudyStudio.EnumExtensions.Exclude``1(System.Enum,``0)">
            <summary>
            Excludes an enumerated e from the current enumerated value 
            and returns the new enumerated value.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="e">A string containing the name or value to convert.</param>
            <param name="value">The enumerated value to be excluded.</param>
            <returns>An enumerated value of T.</returns>
        </member>
        <member name="T:KudyStudio.Caching.WebCacheHelper">
            <summary>
            Simply wraps <see cref="T:System.Web.Caching.Cache"/> for convenience.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.WebCacheHelper.Infinite">
            <summary>
            Represents a value which indicates that an entry should never expire.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Exists(System.String)">
            <summary>
            Checks to see if an item exists in the cache. 
            </summary>
            <param name="key">The key to look for.</param>
            <returns><c>true</c> if key found in cache, <c>false</c> if not.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object)">
            <summary>
            Sets an item into the cache with the expiration of <see cref="F:KudyStudio.Caching.WebCacheHelper.Infinite"/>.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Sets an object into the cache with dependencies and the expiration of <see cref="F:KudyStudio.Caching.WebCacheHelper.Infinite"/>.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            Sets an object into the cache with expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.DateTime)">
            <summary>
            Sets an object into the cache with expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Sets an object into the cache with expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.DateTime,System.Web.Caching.CacheItemPriority)">
            <summary>
            Sets an object into the cache with expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            Sets an object into the cache with dependencies and expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime)">
            <summary>
            Sets an object into the cache with dependencies and expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Sets an object into the cache with dependencies,
            expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.Web.Caching.CacheItemPriority)">
            <summary>
            Sets an object into the cache with dependencies,
            expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Sets an object into the cache with dependencies,
            expiration and priority policies, and a delegate you can use to notify your
            application when the inserted item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Sets an object into the cache with dependencies,
            expiration and priority policies, and a delegate you can use to notify your
            application when the inserted item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Set(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.DateTime,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Sets an object into the cache with dependencies, expiration and priority 
            policies, and a delegate you can use to notify your application when the inserted 
            item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="validFor">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="expiresAt">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object)">
            <summary>
            Adds an item into the cache with the expiration of <see cref="F:KudyStudio.Caching.WebCacheHelper.Infinite"/>.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds an object into the cache with dependencies and the expiration of <see cref="F:KudyStudio.Caching.WebCacheHelper.Infinite"/>.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an object into the cache with expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.DateTime)">
            <summary>
            Adds an object into the cache with expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Adds an object into the cache with expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.DateTime,System.Web.Caching.CacheItemPriority)">
            <summary>
            Adds an object into the cache with expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan)">
            <summary>
            Adds an object into the cache with dependencies and expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime)">
            <summary>
            Adds an object into the cache with dependencies and expiration.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            Adds an object into the cache with dependencies,
            expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.Web.Caching.CacheItemPriority)">
            <summary>
            Adds an object into the cache with dependencies,
            expiration and priority policies.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Adds an object into the cache with dependencies,
            expiration and priority policies, and a delegate you can use to notify your
            application when the added item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Adds an object into the cache with dependencies,
            expiration and priority policies, and a delegate you can use to notify your
            application when the added item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be inserted in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="expiration">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.TimeSpan,System.DateTime,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Adds an object into the cache with dependencies, expiration and priority 
            policies, and a delegate you can use to notify your application when the inserted 
            item is removed from the Cache.
            </summary>
            <param name="key">The cache key used to reference the object.</param>
            <param name="value">The object to be added in the cache.</param>
            <param name="dependency">
            The file or cache key dependencies for the item. When any dependency changes, 
            the object becomes invalid and is removed from the cache. If there are no 
            dependencies, this parameter contains null.
            </param>
            <param name="validFor">The interval in which the inserted object expires and is removed from the cache.</param>
            <param name="expiresAt">The time at which the inserted object expires and is removed from the cache.</param>
            <param name="priority">
            The cost of the object relative to other items stored in the cache, as expressed 
            by the System.Web.Caching.CacheItemPriority enumeration. This value is used 
            by the cache when it evicts objects; objects with a lower cost are removed 
            from the cache before objects with a higher cost.
            </param>
            <param name="onRemovedCallback">
            A delegate that, if provided, will be called when an object is removed from 
            the cache. You can use this to notify applications when their objects are 
            deleted from the cache.
            </param>
            <returns>Object if the object is cached before, null otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Get``1(System.String)">
            <summary>
            Gets an object from the cache.
            </summary>
            <typeparam name="T">The type of the object from the cache.</typeparam>
            <param name="key">The cache key references the object.</param>
            <returns>The retrieved object, or <c>null</c>/<c>default(T)</c> if not exists.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Get(System.String)">
            <summary>
            Gets an object from the cache.
            </summary>
            <param name="key">The cache key references the object.</param>
            <returns>The cache item, <c>null</c> if not exists.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets multiple objects from the cache.
            </summary>
            <param name="keys">The cache keys references the objects.</param>
            <returns>
            A dictionary with entries for each key is found by the cache.
            </returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Remove(System.String)">
            <summary>
            Removes an object from the cache.
            </summary>
            <param name="key">The cache key references the object.</param>
            <returns>true if the cache item removed successfully, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.Clear">
            <summary>
            Removes all cache items from the cache.
            </summary>
            <returns>The count of cache items removed successfully.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.ClearByMatchedKey(System.String)">
            <summary>
            Removes multiple cache items from the cache by the specified pattern key.
            </summary>
            <param name="patternKey">The pattern key to match with.</param>
            <returns>The count of cache items removed successfully.</returns>
        </member>
        <member name="M:KudyStudio.Caching.WebCacheHelper.ClearByIncludedKey(System.String)">
            <summary>
            Removes multiple cache items from the cache by the specified included key.
            </summary>
            <param name="includedKey">The key may be included.</param>
            <returns>The count of cache items removed successfully.</returns>
        </member>
        <member name="P:KudyStudio.Caching.WebCacheHelper.Cache">
            <summary>
            Gets the underlying <see cref="T:System.Web.Caching.Cache"/> instance.
            </summary>
        </member>
        <member name="T:KudyStudio.CaptchaImage">
            <summary>
            Represents the informations of captcha image.
            </summary>
        </member>
        <member name="M:KudyStudio.CaptchaImage.#ctor">
            <summary>
            Creates an instance of <see cref="T:CaptchaImage"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.CaptchaImage.Create(KudyStudio.CaptchaOptions)">
            <summary>
            Creates the captcha image using CaptchaText.Number.
            </summary>
            <param name="options">The options for captcha image.</param>
            <returns>A new instance of <see cref="T:CaptchaImage"/>.</returns>
        </member>
        <member name="M:KudyStudio.CaptchaImage.Create(KudyStudio.CaptchaText,KudyStudio.CaptchaOptions)">
            <summary>
            Creates the captcha image.
            </summary>
            <param name="text">The text for generating captcha image.</param>
            <param name="options">The options for captcha image.</param>
            <returns>A new instance of <see cref="T:CaptchaImage"/>.</returns>
        </member>
        <member name="M:KudyStudio.CaptchaImage.Create(KudyStudio.CaptchaText,KudyStudio.CaptchaOptions,System.String)">
            <summary>
            Creates the captcha image.
            </summary>
            <param name="text">The text for generating captcha image.</param>
            <param name="options">The options for captcha image.</param>
            <param name="customText">The custom text for captcha image.</param>
            <returns>A new instance of <see cref="T:CaptchaImage"/>.</returns>
        </member>
        <member name="P:KudyStudio.CaptchaImage.Data">
            <summary>
            Gets or sets the bytes data of the captcha image.
            </summary>
        </member>
        <member name="P:KudyStudio.CaptchaImage.Text">
            <summary>
            Gets or sets the captcha text string.
            </summary>
        </member>
        <member name="P:KudyStudio.CaptchaImage.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="T:KudyStudio.CaptchaImage.CaptchaImageCreator.BackgroundGroup">
            <summary>
            This is an entity class to be used in case background for <see cref="T:KudyStudio.CaptchaImage.CaptchaImageCreator"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.CaptchaImage.CaptchaImageCreator.BackgroundGroup.#ctor">
            <summary>
            Initializes an instance of <see cref="T:BackgroundGroup"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.CaptchaImage.CaptchaImageCreator.BackgroundGroup.GroupName">
            <summary>
            Gets or sets the group name.
            </summary>
        </member>
        <member name="P:KudyStudio.CaptchaImage.CaptchaImageCreator.BackgroundGroup.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:KudyStudio.CaptchaImage.CaptchaImageCreator.BackgroundGroup.FontColorList">
            <summary>
            Gets or sets the font color list.
            </summary>
        </member>
        <member name="T:KudyStudio.IKeywordSearch">
            <summary>
            Interface containing all methods to be implemented
            by string search algorithm
            </summary>
        </member>
        <member name="M:KudyStudio.IKeywordSearch.ContainsAny(System.String)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.IKeywordSearch.FindFirst(System.String)">
            <summary>
            Searches passed text and returns first occurrence of any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>First occurrence of any keyword (or KeywordSearchResult.Empty if text doesn't contain any keyword)</returns>
        </member>
        <member name="M:KudyStudio.IKeywordSearch.FindAll(System.String)">
            <summary>
            Searches passed text and returns all occurrences of any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>Array of occurrences</returns>
        </member>
        <member name="P:KudyStudio.IKeywordSearch.Keywords">
            <summary>
            List of keywords to search for
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordSearchResult">
            <summary>
            Structure containing results of search 
            (keyword and position in original text)
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordSearchResult.Empty">
            <summary>
            Returns empty search result
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordSearchResult.#ctor(System.Int32,System.String)">
            <summary>
            Initialize string search result
            </summary>
            <param name="index">Index in text</param>
            <param name="keyword">Found keyword</param>
        </member>
        <member name="P:KudyStudio.KeywordSearchResult.Index">
            <summary>
            Returns index of found keyword in original text
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordSearchResult.Keyword">
            <summary>
            Returns keyword found by this result
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordSearch">
            <summary>
            Class for searching string for one or multiple 
            keywords using efficient Aho-Corasick search algorithm
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordSearch._root">
            <summary>
            Root of keyword tree
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordSearch._keywords">
            <summary>
            Keywords to search for
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordSearch.#ctor(System.String[])">
            <summary>
            Initialize search algorithm (Build keyword tree)
            </summary>
            <param name="keywords">Keywords to search for</param>
        </member>
        <member name="M:KudyStudio.KeywordSearch.#ctor">
            <summary>
            Initialize search algorithm with no keywords
            (Use Keywords property)
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordSearch.BuildTree">
            <summary>
            Build tree from specified keywords
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordSearch.ContainsAny(System.String)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.KeywordSearch.FindFirst(System.String)">
            <summary>
            Searches passed text and returns first occurrence of any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>First occurrence of any keyword (or KeywordSearchResult.Empty if text doesn't contain any keyword)</returns>
        </member>
        <member name="M:KudyStudio.KeywordSearch.FindAll(System.String)">
            <summary>
            Searches passed text and returns all occurrences of any keyword
            </summary>
            <param name="text">Text to search</param>
            <returns>Array of occurrences</returns>
        </member>
        <member name="P:KudyStudio.KeywordSearch.Keywords">
            <summary>
            Keywords to search for (setting this property is slow, because
            it requieres rebuilding of keyword tree)
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordSearch.TreeNode">
            <summary>
            Tree node representing character and its 
            transition and failure function
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordSearch.TreeNode.#ctor(KudyStudio.KeywordSearch.TreeNode,System.Char)">
            <summary>
            Initialize tree node with specified character
            </summary>
            <param name="parent">Parent node</param>
            <param name="c">Character</param>
        </member>
        <member name="M:KudyStudio.KeywordSearch.TreeNode.AddResult(System.String)">
            <summary>
            Adds pattern ending in this node
            </summary>
            <param name="result">Pattern</param>
        </member>
        <member name="M:KudyStudio.KeywordSearch.TreeNode.AddTransition(KudyStudio.KeywordSearch.TreeNode)">
            <summary>
            Adds trabsition node
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:KudyStudio.KeywordSearch.TreeNode.GetTransition(System.Char)">
            <summary>
            Returns transition to specified character (if exists)
            </summary>
            <param name="c">Character</param>
            <returns>Returns TreeNode or null</returns>
        </member>
        <member name="M:KudyStudio.KeywordSearch.TreeNode.ContainsTransition(System.Char)">
            <summary>
            Returns true if node contains transition to specified character
            </summary>
            <param name="c">Character</param>
            <returns>True if transition exists</returns>
        </member>
        <member name="P:KudyStudio.KeywordSearch.TreeNode.Char">
            <summary>
            Character
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordSearch.TreeNode.Parent">
            <summary>
            Parent tree node
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordSearch.TreeNode.Failure">
            <summary>
            Failure function - descendant node
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordSearch.TreeNode.Transitions">
            <summary>
            Transition function - list of descendant nodes
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordSearch.TreeNode.Results">
            <summary>
            Returns list of patterns ending by this letter
            </summary>
        </member>
        <member name="T:KudyStudio.DisposableObject">
            <summary>
            Disposable acts as a base class for deriving a disposable class. 
            Represents an implementation of the IDisposable interface.
            </summary>
            <remarks>
            Override Dispose(disposing) in derived classes. When this method is called, always 
            release unmanaged resources, and dispose of managed resources only if the 
            disposing parameter is true.
            </remarks>
        </member>
        <member name="T:KudyStudio.IDisposableObject">
            <summary>
            An object that can report whether or not it is synchronized.
            </summary>
        </member>
        <member name="P:KudyStudio.IDisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="M:KudyStudio.DisposableObject.Finalize">
            <summary>
            Finalizes current instance.
            </summary>
        </member>
        <member name="M:KudyStudio.DisposableObject.Dispose">
            <summary>
            Performs application-defined tasks associated with disposing of resources.
            </summary>
        </member>
        <member name="M:KudyStudio.DisposableObject.Dispose(System.Boolean)">
            <summary>
            Dispose resources. Override this method in derived classes. Unmanaged resources should always be released
            when this method is called. Managed resources may only be disposed of if disposing is true.
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="P:KudyStudio.DisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="T:KudyStudio.IFileConfigManager`1">
            <summary>
            Interface containing all properties and methods to be implemented
            by file configuration manager.
            </summary>
            <typeparam name="T">The type of config entity.</typeparam>
        </member>
        <member name="M:KudyStudio.IFileConfigManager`1.GetConfig">
            <summary>
            Gets the current config entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.IFileConfigManager`1.SaveConfig">
            <summary>
            Saves the current config entity to file.
            </summary>
        </member>
        <member name="M:KudyStudio.IFileConfigManager`1.SaveConfig(`0)">
            <summary>
            Saves a specified config entity to file.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:KudyStudio.IFileConfigManager`1.BackupConfig(System.String)">
            <summary>
            Backups the current config entity to a specified path.
            </summary>
            <param name="backupPath"></param>
        </member>
        <member name="M:KudyStudio.IFileConfigManager`1.RestoreConfig(System.String)">
            <summary>
            Restores config entity from a specified path and saves to the current path.
            </summary>
            <param name="restorePath"></param>
        </member>
        <member name="P:KudyStudio.IFileConfigManager`1.Path">
            <summary>
            Gets the path of the config file.
            </summary>
        </member>
        <member name="P:KudyStudio.IFileConfigManager`1.Serializer">
            <summary>
            Gets the serializer of the config manager for loading or saving the config file.
            </summary>
        </member>
        <member name="T:KudyStudio.DeflateCompressor">
            <summary>
            Provides methods for compressing and decompressing bytes using the Deflate algorithm.
            </summary>
        </member>
        <member name="T:KudyStudio.Compressor">
            <summary>
            Provides methods for compressing and decompressing bytes.
            </summary>
        </member>
        <member name="F:KudyStudio.Compressor.GZip">
            <summary>
            The GZip compressor instance. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Compressor.Deflate">
            <summary>
            The deflate compressor instance. This field is read-only.
            </summary>
        </member>
        <member name="M:KudyStudio.Compressor.Compress(System.Byte[])">
            <summary>
            Compresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <returns>A byte array Compressed.</returns>
        </member>
        <member name="M:KudyStudio.Compressor.Compress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Compresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array compressed.</returns>
        </member>
        <member name="M:KudyStudio.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <returns>A byte array decompressed.</returns>
        </member>
        <member name="M:KudyStudio.Compressor.Decompress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array decompressed.</returns>
        </member>
        <member name="M:KudyStudio.DeflateCompressor.Compress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Compresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array compressed.</returns>
        </member>
        <member name="M:KudyStudio.DeflateCompressor.Decompress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array decompressed.</returns>
        </member>
        <member name="T:KudyStudio.WinForms.LoadingCircle">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.LoadingCircle.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.LoadingCircle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.WinForms.LoadingCircle.GetPreferredSize(System.Drawing.Size)">
            <summary>
            获取适合控件区域的矩形大小。
            </summary>
            <param name="proposedSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
        </member>
        <member name="M:KudyStudio.WinForms.LoadingCircle.SetCircleAppearance(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置控件的外观
            </summary>
            <param name="numberSpoke">条数</param>
            <param name="spokeThickness">粗细</param>
            <param name="innerCircleRadius">内圆半径</param>
            <param name="outerCircleRadius">外圆半径</param>
        </member>
        <member name="F:KudyStudio.WinForms.LoadingCircle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.LoadingCircle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.Color">
            <summary>
            获取和设置控件高亮色
            </summary>
            <value>高亮色</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.OuterCircleRadius">
            <summary>
            获取和设置外围半径
            </summary>
            <value>外围半径</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.InnerCircleRadius">
            <summary>
            获取和设置内圆半径
            </summary>
            <value>内圆半径</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.NumberSpoke">
            <summary>
            获取和设置辐条数量
            </summary>
            <value>辐条数量</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.Active">
            <summary>
            获取和设置一个布尔值，表示当前控件<see cref="T:LoadingCircle"/>是否激活。
            </summary>
            <value><c>true</c> 表示激活；否则，为<c>false</c>。</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.SpokeThickness">
            <summary>
            获取和设置辐条粗细程度。
            </summary>
            <value>辐条粗细值</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.RotationSpeed">
            <summary>
            获取和设置旋转速度。
            </summary>
            <value>旋转速度</value>
        </member>
        <member name="P:KudyStudio.WinForms.LoadingCircle.StylePreset">
            <summary>
            快速设置预定义风格。
            </summary>
            <value>风格的值</value>
        </member>
        <member name="T:KudyStudio.WinForms.LoadingCircle.StylePresets">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.WinForms.LoadingCircle.StylePresets.IE7">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.WinForms.LoadingCircle.StylePresets.MacOSX">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.WinForms.LoadingCircle.StylePresets.Firefox">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.WinForms.LoadingCircle.StylePresets.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Head">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Head.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Head.ContentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Head.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Head.Keywords">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Head.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.ScriptExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ScriptExtensions.Script(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ScriptExtensions.Script(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ScriptExtensions.Script(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.MailPoolFileManager">
            <summary>
            发送邮件池保存文件管理类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPoolFileManager.mailPoolFilePath">
            <summary>
            发送邮件池保存文件所在路径。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPoolFileManager.#cctor">
            <summary>
            静态构造函数。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPoolFileManager.LoadMailPoolFromFile">
            <summary>
            从文件中加载发送邮件池。
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPoolFileManager.SaveMailPoolToFile(KudyStudio.Utility.Net.Mail.MailPool)">
            <summary>
            将发送邮件池保存到文件中。
            </summary>
            <param name="pool">邮件发送缓冲池</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPoolFileManager.DeleteMailPoolFile">
            <summary>
            删除发送邮件池文件。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPoolFileManager.MailPoolFilePath">
            <summary>
            获取或设置 发送邮件池保存文件所在路径。
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.SelectExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ListBox(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ListBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ListBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ListBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="optionLabel"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="optionLabel"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="optionLabel"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="optionLabel"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="optionLabel"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.DropDownList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="optionLabel"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.IEnumerable,System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.IEnumerable,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <param name="selectedValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Config.LanguageConfigElement})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Config.LanguageConfigElement},System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValues"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <param name="selectedValues"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectExtensions.ToMultipleSelectList(System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValues"></param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ActionContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ModeContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeContext.#ctor(KudyStudio.Web.Mtv.ModeContext)">
            <summary>
            Initializes a <see cref="T:ModeContext"/> instance.
            </summary>
            <param name="modeContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeContext.#ctor(KudyStudio.Web.Mtv.Mode,System.Web.HttpContext)">
            <summary>
            Initializes a <see cref="T:ModeContext"/> instance.
            </summary>
            <param name="mode"></param>
            <param name="httpContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeContext.#ctor(KudyStudio.Web.Mtv.Mode,System.Web.HttpContext,System.String,System.String)">
            <summary>
            Initializes a <see cref="T:ModeContext"/> instance.
            </summary>
            <param name="mode"></param>
            <param name="httpContext"></param>
            <param name="theme"></param>
            <param name="language"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeContext.Theme">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeContext.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeContext.MtvParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeContext.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeContext.HttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionContext.#ctor(KudyStudio.Web.Mtv.ModeContext,System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="actionMethod"></param>
            <param name="actionParameters"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionContext.ActionMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionContext.ActionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.CollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.Count(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs the specified action on each element of the enumerable list.
            </summary>
            <typeparam name="T">The type of elements in the source.</typeparam>
            <param name="source">A enumerable list.</param>
            <param name="action">The System.Action&lt;T&gt; delegate to perform on each element of the source.</param>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Performs the specified action on each element of the enumerable list, 
            with the int variable auto-increment in action. 
            </summary>
            <typeparam name="T">The type of elements in the source.</typeparam>
            <param name="source">A enumerable list.</param>
            <param name="action">The System.Action&lt;T, int&gt; delegate to perform on each element of the source.</param>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Given a sequence, combine it with another sequence, passing the corresponding
            elements of each sequence to the <paramref name="zipper"/> action to create
            a new single value from the two sequence elements. "Zip" here refers to a zipper,
            not the compression algorithm. The resulting sequence will have the same number
            of elements as the shorter of sequence1 and sequence2.
            </summary>
            <typeparam name="T1">Type of the elments in the first sequence.</typeparam>
            <typeparam name="T2">Type of the elements in the second sequence.</typeparam>
            <typeparam name="TResult">Type of the resulting sequence elements.</typeparam>
            <param name="sequence1">The first sequence to combine.</param>
            <param name="sequence2">The second sequence to combine.</param>
            <param name="zipper">Func used to calculate the resulting values.</param>
            <returns>The result sequence.</returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.Zip``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Take two sequences and return a new sequence of <see cref="T:System.Collections.Generic.KeyValuePair`2"/> objects.
            </summary>
            <typeparam name="T1">Type of objects in sequence1.</typeparam>
            <typeparam name="T2">Type of objects in sequence2.</typeparam>
            <param name="sequence1">First sequence.</param>
            <param name="sequence2">Second sequence.</param>
            <returns>The sequence of <see cref="T:System.Collections.Generic.KeyValuePair`2"/> objects.</returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Take two sequences and return a <see cref="T:System.Collections.Generic.IDictionary`2"/> with the first sequence
            holding the keys and the corresponding elements of the second sequence containing the values.
            </summary>
            <typeparam name="TKey">Type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">Type of values in the dictionary.</typeparam>
            <param name="keys">Sequence of dictionary keys.</param>
            <param name="values">Sequence of dictionary values.</param>
            <returns>The constructed dictionary.</returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ToPagedList``1(KudyStudio.IPagedList{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="recordCount"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="source"></param>
            <param name="propertySelector"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.CollectionExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="source"></param>
            <param name="propertySelector"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Config.KudyConfigSection">
            <summary>
            Represents a configuration element(section) for KudyStudio in a xml file or app config file.
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigSection.Reload">
            <summary>
            Called by <see cref="T:KudyStudio.Config.KudyConfigSectionHandler"/> when the configuration file changes.
            </summary>
            <returns>A new instance of <see cref="T:KudyStudio.Config.KudyConfigSection"/> that represents the updated configuration.</returns>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.ConfigPath">
            <summary>
            Gets the config file path which should be watched for changes.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.ReloadOnChange">
            <summary>
            Gets the value indicating whether the configuration file
            should be watched for changes and reloaded automatically when changed.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.Variable">
            <summary>
            Gets the variable collection of the <see cref="T:KudyStudio.Config.KudyConfigSection"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.Caching">
            <summary>
            Gets the KudyStudio.Caching namespace configuration.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.Frameworks">
            <summary>
            Gets the KudyStudio.Frameworks namespace configuration.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.Logging">
            <summary>
            Gets the KudyStudio.Logging namespace configuration.
            </summary>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSection.Web">
            <summary>
            Gets the KudyStudio.Web namespace configuration.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.TigerHash">
            <summary>
            Tiger hash.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.TigerHash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Algorithms.TigerHash"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.TigerHash.Initialize">
            <summary>
            Initializes an instance of <see cref="T:KudyStudio.Utility.Algorithms.TigerHash"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.TigerHash.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the <see cref="T:KudyStudio.Utility.Algorithms.TigerHash"/> hash algorithm for computing the hash.</summary>
            <param name="buffer">The input data.</param>
            <param name="offset">The offset into the byte array from which to begin using data. </param>
            <param name="count">The number of bytes in the array to use as data. </param>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.TigerHash.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.TigerHash"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemsGroup">
            <summary>
            Summary description for WorkItemsGroup.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.IWorkItemsGroup">
            <summary>
            IWorkItemsGroup interface
            Created by SmartThreadPool.CreateWorkItemsGroup()
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.GetStates">
            <summary>
            Get an array with all the state objects of the currently running items.
            The array represents a snap shot and impact performance.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.Start">
            <summary>
            Starts to execute work items
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.Cancel">
            <summary>
            Cancel all the work items.
            Same as Cancel(false)
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.Cancel(System.Boolean)">
            <summary>
            Cancel all work items using thread abortion
            </summary>
            <param name="abortExecution">True to stop work items by raising ThreadAbortException</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.WaitForIdle">
            <summary>
            Wait for all work item to complete.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.WaitForIdle(System.TimeSpan)">
            <summary>
            Wait for all work item to complete, until timeout expired
            </summary>
            <param name="timeout">How long to wait for the work items to complete</param>
            <returns>Returns true if work items completed within the timeout, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.WaitForIdle(System.Int32)">
            <summary>
            Wait for all work item to complete, until timeout expired
            </summary>
            <param name="millisecondsTimeout">How long to wait for the work items to complete in milliseconds</param>
            <returns>Returns true if work items completed within the timeout, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>        
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem(System.Action)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``1(System.Action{``0},``0)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``2(System.Action{``0,``1},``0,``1)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``3(System.Action{``0,``1,``2},``0,``1,``2)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``1(System.Func{``0})">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a <see cref="T:IWorkItemResult`1"/> object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``2(System.Func{``0,``1},``0)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a <see cref="T:IWorkItemResult`1"/> object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``3(System.Func{``0,``1,``2},``0,``1)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a <see cref="T:IWorkItemResult`1"/> object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a <see cref="T:IWorkItemResult`1"/> object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemsGroup.QueueWorkItem``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a <see cref="T:IWorkItemResult`1"/> object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemsGroup.Name">
            <summary>
            Get/Set the name of the WorkItemsGroup
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemsGroup.Concurrency">
            <summary>
            Get/Set the maximum number of workitem that execute cocurrency on the thread pool
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemsGroup.WaitingCallbacks">
            <summary>
            Get the number of work items waiting in the queue.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemsGroup.WIGStartInfo">
            <summary>
            Get the WorkItemsGroup start information
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemsGroup.IsIdle">
            <summary>
            IsIdle is true when there are no work items running or queued.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.IWorkItemsGroup.OnIdle">
            <summary>
            This event is fired when all work items are completed.
            (When IsIdle changes to true)
            This event only work on WorkItemsGroup. On SmartThreadPool
            it throws the NotImplementedException.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase._name">
            <summary>
            Contains the name of this instance of SmartThreadPool.
            Can be changed by the user.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.Cancel(System.Boolean)">
            <summary>
            
            </summary>
            <param name="abortExecution"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.WaitForIdle(System.Int32)">
            <summary>
            
            </summary>
            <param name="millisecondsTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.Cancel">
            <summary>
            Cancel all the work items.
            Same as Cancel(false)
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.WaitForIdle">
            <summary>
            Wait for the SmartThreadPool/WorkItemsGroup to be idle
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.WaitForIdle(System.TimeSpan)">
            <summary>
            Wait for the SmartThreadPool/WorkItemsGroup to be idle
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(System.Action)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``1(System.Action{``0},``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``2(System.Action{``0,``1},``0,``1)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``3(System.Action{``0,``1,``2},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``1(System.Func{``0})">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``2(System.Func{``0,``1},``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``3(System.Func{``0,``1,``2},``0,``1)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.Name">
            <summary>
            Get/Set the name of the SmartThreadPool/WorkItemsGroup instance
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.WaitingCallbacks">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.WIGStartInfo">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.OnIdle">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroupBase.IsIdle">
            <summary>
            IsIdle is true when there are no work items running or queued.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._stp">
            <summary>
            A reference to the SmartThreadPool instance that created this 
            WorkItemsGroup.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._isSuspended">
            <summary>
            A flag to indicate if the Work Items Group is now suspended.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._concurrency">
            <summary>
            Defines how many work items of this WorkItemsGroup can run at once.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._workItemsQueue">
            <summary>
            Priority queue to hold work items before they are passed 
            to the SmartThreadPool.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._workItemsInStpQueue">
            <summary>
            Indicate how many work items are waiting in the SmartThreadPool
            queue.
            This value is used to apply the concurrency.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._workItemsExecutingInStp">
            <summary>
            Indicate how many work items are currently running in the SmartThreadPool.
            This value is used with the Cancel, to calculate if we can send new 
            work items to the STP.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._workItemsGroupStartInfo">
            <summary>
            WorkItemsGroup start information
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._isIdleWaitHandle">
            <summary>
            Signaled when all of the WorkItemsGroup's work item completed.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._canceledWorkItemsGroup">
            <summary>
            A common object for all the work items that this work items group
            generate so we can mark them to cancel in O(1)
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.#ctor(KudyStudio.Utility.Threading.SmartThreadPool,System.Int32,KudyStudio.Utility.Threading.WIGStartInfo)">
            <summary>
            
            </summary>
            <param name="stp"></param>
            <param name="concurrency"></param>
            <param name="wigStartInfo"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.Start">
            <summary>
            Start the Work Items Group if it was started suspended
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.Cancel(System.Boolean)">
            <summary>
            
            </summary>
            <param name="abortExecution"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.WaitForIdle(System.Int32)">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.OnSTPIsStarting">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.EnqueueToSTPNextNWorkItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="E:KudyStudio.Utility.Threading.Internal.WorkItemsGroup._onIdle">
            <summary>
            The OnIdle event
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.WaitingCallbacks">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.WIGStartInfo">
            <summary>
            WorkItemsGroup start information
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.Internal.WorkItemsGroup.OnIdle">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.ISTPPerformanceCountersReader">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ISTPPerformanceCountersReader.InUseThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ISTPPerformanceCountersReader.ActiveThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ISTPPerformanceCountersReader.WorkItemsQueued">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ISTPPerformanceCountersReader.WorkItemsProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.STPPerformanceCounter">
            <summary>
            Summary description for STPPerformanceCounter.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.CallerThreadContext">
            <summary>
            This class stores the caller call context in order to restore
            it when the work item is executed in the thread pool environment. 
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.CallerThreadContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.CallerThreadContext.Capture(System.Boolean,System.Boolean)">
            <summary>
            Captures the current thread context
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.CallerThreadContext.Apply(KudyStudio.Utility.Threading.Internal.CallerThreadContext)">
            <summary>
            Applies the thread context stored earlier
            </summary>
            <param name="callerThreadContext"></param>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInCollection.#ctor(System.Collections.Generic.IDictionary{System.String,KudyStudio.Frameworks.PlugInFramework.IPlugIn})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TaskFlags">
            <summary>
            Options for a task, used for the Flags property of a Task. Uses the
            "Flags" attribute, so these values are combined with |. 
            Some flags are documented as Windows 95 only, but they have a
            user interface in Windows XP so that may not be true.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.Interactive">
            <summary>
            The precise meaning of this flag is elusive.  The MSDN documentation describes it
            only for use in converting jobs from the Windows NT "AT" service to the newer
            Task Scheduler.  No other use for the flag is documented.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.DeleteWhenDone">
            <summary>
            The task will be deleted when there are no more scheduled run times.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.Disabled">
            <summary>
            The task is disabled.  Used to temporarily prevent a task from being triggered normally.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.StartOnlyIfIdle">
            <summary>
            The task begins only if the computer is idle at the scheduled start time. 
            The computer is not considered idle until the task's <see cref="P:KudyStudio.Utility.TaskScheduler.Task.IdleWaitMinutes"/> time
            elapses with no user input.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.KillOnIdleEnd">
            <summary>
            The task terminates if the computer makes an idle to non-idle transition while the task is running.
            For information regarding idle triggers, see <see cref="T:KudyStudio.Utility.TaskScheduler.OnIdleTrigger"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.DontStartIfOnBatteries">
            <summary>
            The task does not start if the computer is running on battery power.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.KillIfGoingOnBatteries">
            <summary>
            The task ends, and the associated application quits if the computer switches
            to battery power.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.RunOnlyIfDocked">
            <summary>
            The task runs only if the system is docked.  
            (Not mentioned in current MSDN documentation; probably obsolete.)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.Hidden">
            <summary>
            The task item is hidden.  
            
            This is implemented by setting the job file's hidden attribute.  Testing revealed that clearing
            this flag doesn't clear the file attribute, so the library sets the file attribute directly.  This
            flag is kept in sync with the task's Hidden property, so they function equivalently.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.RunIfConnectedToInternet">
            <summary>
            The task runs only if there is currently a valid Internet connection.
            Not currently implemented. (Check current MSDN documentation for updates.)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.RestartOnIdleResume">
            <summary>
            The task starts again if the computer makes a non-idle to idle transition before all the
            task's task_triggers elapse. (Use this flag in conjunction with KillOnIdleEnd.)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.SystemRequired">
            <summary>
            Wake the computer to run this task.  Seems to be misnamed, but the name is taken from
            the low-level interface.
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskFlags.RunOnlyIfLoggedOn">
            <summary>
            The task runs only if the user specified in SetAccountInformation() is
            logged on interactively.  This flag has no effect on tasks set to run in
            the local SYSTEM account.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonLinqContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.UnderlyingType">
            <summary>
            Gets the underlying type for the contract.
            </summary>
            <value>The underlying type for the contract.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.CreatedType">
            <summary>
            Gets or sets the type created during deserialization.
            </summary>
            <value>The type created during deserialization.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.IsReference">
            <summary>
            Gets or sets whether this type contract is serialized as a reference.
            </summary>
            <value>Whether this type contract is serialized as a reference.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.Converter">
            <summary>
            Gets or sets the default <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> for this contract.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.OnDeserialized">
            <summary>
            Gets or sets the method called immediately after deserialization of the object.
            </summary>
            <value>The method called immediately after deserialization of the object.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.OnDeserializing">
            <summary>
            Gets or sets the method called during deserialization of the object.
            </summary>
            <value>The method called during deserialization of the object.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.OnSerialized">
            <summary>
            Gets or sets the method called after serialization of the object graph.
            </summary>
            <value>The method called after serialization of the object graph.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.OnSerializing">
            <summary>
            Gets or sets the method called before serialization of the object.
            </summary>
            <value>The method called before serialization of the object.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.DefaultCreator">
            <summary>
            Gets or sets the default creator method used to create the object.
            </summary>
            <value>The default creator method used to create the object.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.DefaultCreatorNonPublic">
            <summary>
            Gets or sets a value indicating whether [default creator non public].
            </summary>
            <value><c>true</c> if the default object creator is non-public; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonContract.OnError">
            <summary>
            Gets or sets the method called when an error is thrown during the serialization of the object.
            </summary>
            <value>The method called when an error is thrown during the serialization of the object.</value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonLinqContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonLinqContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.IValueProvider">
            <summary>
            Provides methods to get and set values.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Represents an abstract JSON token.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> objects.
            </summary>
            <typeparam name="T">The type of token</typeparam>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.IJEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:KudyStudio.Utility.Json.IJsonLineInfo">
            <summary>
            Provides an interface to enable a class to return line and position information.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.IJsonLineInfo.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if LineNumber and LinePosition can be provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.IJsonLineInfo.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>The current line number or 0 if no line information is available (for example, HasLineInfo returns false).</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.IJsonLineInfo.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>The current line position or 0 if no line information is available (for example, HasLineInfo returns false).</value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.DeepEquals(KudyStudio.Utility.Json.Linq.JToken,KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Compares the values of two tokens, including the values of all descendant tokens.
            </summary>
            <param name="t1">The first <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to compare.</param>
            <param name="t2">The second <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to compare.</param>
            <returns>true if the tokens are equal; otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.AddAfterSelf(System.Object)">
            <summary>
            Adds the specified content immediately after this token.
            </summary>
            <param name="content">A content object that contains simple content or a collection of content objects to be added after this token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.AddBeforeSelf(System.Object)">
            <summary>
            Adds the specified content immediately before this token.
            </summary>
            <param name="content">A content object that contains simple content or a collection of content objects to be added before this token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Ancestors">
            <summary>
            Returns a collection of the ancestor tokens of this token.
            </summary>
            <returns>A collection of the ancestor tokens of this token.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.AfterSelf">
            <summary>
            Returns a collection of the sibling tokens after this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens after this tokens, in document order.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.BeforeSelf">
            <summary>
            Returns a collection of the sibling tokens before this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens before this token, in document order.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Value``1(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key converted to the specified type.
            </summary>
            <typeparam name="T">The type to convert the token to.</typeparam>
            <param name="key">The token key.</param>
            <returns>The converted token value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the child tokens of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Children``1">
            <summary>
            Returns a collection of the child tokens of this token, in document order, filtered by the specified type.
            </summary>
            <typeparam name="T">The type to filter the child tokens on.</typeparam>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JEnumerable`1"/> containing the child tokens of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the child values of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Remove">
            <summary>
            Removes this token from its parent.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.Replace(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Replaces this token with the specified token.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.ToString">
            <summary>
            Returns the indented JSON for this token.
            </summary>
            <returns>
            The indented JSON for this token.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.ToString(KudyStudio.Utility.Json.Formatting,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Returns the JSON for this token using the given formatting and converters.
            </summary>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>The JSON for this token using the given formatting and converters.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.DateTimeOffset">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Boolean}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Int64">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.DateTime}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Decimal}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Double}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Int32}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.DateTime">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Int64}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.Single}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.UInt32}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Nullable{System.UInt64}">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Double"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.UInt32">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.UInt64">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Explicit(KudyStudio.Utility.Json.Linq.JToken)~System.Byte[]">
            <summary>
            Performs an explicit conversion from <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to <see cref="T:System.Byte[]"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Boolean)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.DateTimeOffset)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTimeOffset"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Boolean})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Int64)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTime})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTimeOffset})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Decimal})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Double})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.UInt16)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt16"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Int32)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int32})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.DateTime)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTime"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int64})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.Single})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Decimal)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Decimal"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt16})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt32})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt64})~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Double)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Single)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.String)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.UInt32)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt32"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.UInt64)~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt64"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.op_Implicit(System.Byte[])~KudyStudio.Utility.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte[]"/> to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.CreateReader">
            <summary>
            Creates an <see cref="T:KudyStudio.Utility.Json.JsonReader"/> for this token.
            </summary>
            <returns>An <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that can be used to read this token and its descendants.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.FromObject(System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> from an object using the specified <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</param>
            <param name="jsonSerializer">The <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> that will be used when reading the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.ReadFrom(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> from a <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:KudyStudio.Utility.Json.JsonReader"/> positioned at the token to read into this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</param>
            <returns>
            An <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.SelectToken(System.String)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that matches the object path or a null reference if no matching token is found.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JToken.SelectToken(System.String,System.Boolean)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <param name="errorWhenNoMatch">A flag to indicate whether an error should be thrown if no token is found.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that matches the object path.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.EqualityComparer">
            <summary>
            Gets a comparer that can compare two tokens for value equality.
            </summary>
            <value>A <see cref="T:KudyStudio.Utility.Json.Linq.JTokenEqualityComparer"/> that can compare two nodes for value equality.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Root">
            <summary>
            Gets the root <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The root <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.HasValues">
            <summary>
            Gets a value indicating whether this token has childen tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Next">
            <summary>
            Gets the next sibling token of this node.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the next sibling token.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Previous">
            <summary>
            Gets the previous sibling token of this node.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the previous sibling token.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the first child token of the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JToken.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the last child token of the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JArray">
            <summary>
            Represents a JSON array.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JContainer">
            <summary>
            Represents a token that can contain other tokens.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            Raises the <see cref="E:KudyStudio.Utility.Json.Linq.JContainer.AddingNew"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.AddingNewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:KudyStudio.Utility.Json.Linq.JContainer.ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the child tokens of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the child values of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.Descendants">
            <summary>
            Returns a collection of the descendant tokens for this token in document order.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the descendant tokens of the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.Add(System.Object)">
            <summary>
            Adds the specified content as children of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.AddFirst(System.Object)">
            <summary>
            Adds the specified content as the first children of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.CreateWriter">
            <summary>
            Creates an <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> that can be used to add tokens to the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <returns>An <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> that is ready to have content written to it.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.ReplaceAll(System.Object)">
            <summary>
            Replaces the children nodes of this token with the specified content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JContainer.RemoveAll">
            <summary>
            Removes the child nodes from this token.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Json.Linq.JContainer.ListChanged">
            <summary>
            Occurs when the list changes or an item in the list changes.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Json.Linq.JContainer.AddingNew">
            <summary>
            Occurs before an item is added to the collection.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JContainer.HasValues">
            <summary>
            Gets a value indicating whether this token has childen tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JContainer.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>
            A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the first child token of the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JContainer.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>
            A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the last child token of the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.#ctor(KudyStudio.Utility.Json.Linq.JArray)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Load(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> from a <see cref="T:KudyStudio.Utility.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that will be read for the content of the <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> that contains the JSON that was read from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Parse(System.String)">
            <summary>
            Load a <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.FromObject(System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/>.</param>
            <param name="jsonSerializer">The <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> that will be used to read the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.IndexOf(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Insert(System.Int32,KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Add(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Contains(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JArray.Remove(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JArray.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JArray.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JArray.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JArray.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor">
            <summary>
            Represents a view of a <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="propertyType">Type of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
            <param name="component">The component to test for reset capability. 
                            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <returns>
            The value of a property for a given component.
            </returns>
            <param name="component">The component with the property for which to retrieve the value. 
                            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value. 
                            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set. 
                            </param><param name="value">The new value. 
                            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
            <param name="component">The component with the property to be examined for persistence. 
                            </param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <returns>
            true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.ComponentModel.JPropertyDescriptor.NameHashCode">
            <summary>
            Gets the hash code for the name of the member.
            </summary>
            <value></value>
            <returns>
            The hash code for the name of the member.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.KeyValuePairConverter">
            <summary>
            Converts a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to and from JSON.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonConverter">
            <summary>
            Converts an object to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConverter.GetSchema">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of the JSON produced by the JsonConverter.
            </summary>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of the JSON produced by the JsonConverter.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can read JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can read JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can write JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.KeyValuePairConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.KeyValuePairConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.KeyValuePairConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.JavaScriptDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from a JavaScript date constructor (e.g. new Date(52231943)).
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.DateTimeConverterBase">
            <summary>
            Provides a base class for converting a <see cref="T:System.DateTime"/> to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.JavaScriptDateTimeConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.JavaScriptDateTimeConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:KudyStudio.Data.PagedDataReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Data.DataReader">
            <summary>
            This is a DataReader that fixes any null values before they are returned to our business code.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.DataReader.#ctor(System.Data.IDataReader)">
            <summary>
            Initializes the DataReader object to use data from the provided DataReader object.
            </summary>
            <param name="dataReader">The source DataReader object containing the data.</param>
        </member>
        <member name="M:KudyStudio.Data.DataReader.Close">
            <summary>
            Closes the System.Data.IDataReader Object.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetSchemaTable">
            <summary>
            Returns a System.Data.DataTable that describes the column metadata of the
            System.Data.IDataReader.
            </summary>
            <returns>A System.Data.DataTable that describes the column metadata.</returns>
            <exception cref="T:System.InvalidOperationException">The System.Data.IDataReader is closed.</exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of
            batch SQL statements.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.Read">
            <summary>
            Advances the System.Data.IDataReader to the next record.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <remarks>Returns false for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The value of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBoolean(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBoolean(System.String)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <remarks>Returns false for null.</remarks>
            <param name="name">The index of the field to find.</param>
            <returns>The value of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBoolean(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetByte(System.Int32,System.Byte)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetByte(System.String)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetByte(System.String,System.Byte)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer
            as an array, starting at the given buffer offset.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetBytes(System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer
            as an array, starting at the given buffer offset.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <remarks>Returns char.MinValue for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The character value of the specified column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetChar(System.String)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <remarks>Returns char.MinValue for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The character value of the specified column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer
            as an array, starting at the given buffer offset.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <param name="fieldOffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferOffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetChars(System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer
            as an array, starting at the given buffer offset.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <param name="fieldOffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferOffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetData(System.Int32)">
            <summary>
            Returns an <see cref="T:System.Data.IDataReader"/> for the specified column ordinal.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/>.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetData(System.String)">
            <summary>
            Returns an <see cref="T:System.Data.IDataReader"/> for the specified column ordinal.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/>.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The data type information for the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDataTypeName(System.String)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The data type information for the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <remarks>Returns DateTime.MinValue for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDateTime(System.Int32,System.DateTime)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDateTime(System.String)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <remarks>Returns DateTime.MinValue for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDateTime(System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The fixed-position numeric value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDecimal(System.Int32,System.Decimal)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDecimal(System.String)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The fixed-position numeric value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDecimal(System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The double-precision floating point number of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDouble(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDouble(System.String)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The double-precision floating point number of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetDouble(System.String,System.Double)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the System.Type information corresponding to the type of <see cref="T:System.Object"/>
            that would be returned from System.Data.IDataRecord.GetValue(<see cref="T:System.Int32"/>).
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The System.Type information corresponding to the type of <see cref="T:System.Object"/> that
            would be returned from System.Data.IDataRecord.GetValue(<see cref="T:System.Int32"/>).
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFieldType(System.String)">
            <summary>
            Gets the System.Type information corresponding to the type of <see cref="T:System.Object"/>
            that would be returned from System.Data.IDataRecord.GetValue(<see cref="T:System.Int32"/>).
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>
            The System.Type information corresponding to the type of <see cref="T:System.Object"/> that
            would be returned from System.Data.IDataRecord.GetValue(<see cref="T:System.Int32"/>).
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The single-precision floating point number of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFloat(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFloat(System.String)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The single-precision floating point number of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <remarks>Returns Guid.Empty for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetGuid(System.Int32,System.Guid)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetGuid(System.String)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <remarks>Returns Guid.Empty for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetGuid(System.String,System.Guid)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The 16-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt16(System.Int32,System.Int16)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt16(System.String)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The 16-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt16(System.String,System.Int16)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The 32-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt32(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt32(System.String)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The 32-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt32(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The 64-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt64(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt64(System.String)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <remarks>Returns 0 for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The 64-bit signed integer value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetInt64(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <remarks>Returns string.Empty for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetString(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetString(System.String)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <remarks>Returns string.Empty for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The string value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <remarks>Returns null for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The System.Object which will contain the field value upon return.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetValue(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetValue(System.String)">
            <summary>
            Return the value of the specified field.
            </summary>
            <remarks>Returns null for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The System.Object which will contain the field value upon return.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetValue(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetValues(System.Object[])">
            <summary>
            Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values">An array of <see cref="T:System.Object"/> to copy the attribute fields into.</param>
            <returns>The number of instances of <see cref="T:System.Object"/> in the array.</returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.IsDBNull(System.String)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.Dispose(System.Boolean)">
            <summary>
            Dispose resources. 
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetTimeSpan(System.Int32)">
            <summary>
            Gets the TimeSpan data value of the specified field.
            </summary>
            <remarks>Returns TimeSpan.Zero for null.</remarks>
            <param name="i">The index of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetTimeSpan(System.Int32,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetTimeSpan(System.String)">
            <summary>
            Gets the TimeSpan data value of the specified field.
            </summary>
            <remarks>Returns TimeSpan.Zero for null.</remarks>
            <param name="name">The name of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.DataReader.GetTimeSpan(System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Data.DataReader.Reader">
            <summary>
            Get a reference to the underlying data reader object that actually 
            contains the data from the data source.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.DataReader.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            <value>The level of nesting.</value>
        </member>
        <member name="P:KudyStudio.Data.DataReader.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            <value>true if the data reader is closed; otherwise, false.</value>
        </member>
        <member name="P:KudyStudio.Data.DataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the
            SQL statement.
            </summary>
            <value>
            The number of rows changed, inserted, or deleted; 0 if no rows were affected
            or the statement failed; and -1 for SELECT statements.
            </value>
        </member>
        <member name="P:KudyStudio.Data.DataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value>
            When not positioned in a valid recordset, 0; otherwise, the number of columns
            in the current record. The default is -1.
            </value>
        </member>
        <member name="P:KudyStudio.Data.DataReader.Item(System.Int32)">
            <summary>
            Gets the column located at the specified index.
            </summary>
            <remarks>Returns null for null.</remarks>
            <param name="i">The zero-based index of the column to get.</param>
            <returns>The column located at the specified index as an System.Object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            The index passed was outside the range of 0 through System.Data.IDataRecord.FieldCount.
            </exception>
        </member>
        <member name="P:KudyStudio.Data.DataReader.Item(System.String)">
            <summary>
            Gets the column with the specified name.
            </summary>
            <remarks>Returns null for null.</remarks>
            <param name="name">The name of the column to find.</param>
            <returns>The column with the specified name as an System.Object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            No column with the specified name was found.
            </exception>
        </member>
        <member name="M:KudyStudio.Data.PagedDataReader.#ctor(System.Data.IDataReader,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the PagedDataReader object to use data from the provided DataReader object.
            </summary>
            <param name="dataReader">The source DataReader object containing the data.</param>
            <param name="pageSize">The size of page.</param>
            <param name="pageIndex">The index of page.</param>
            <param name="recordCount">The record count of all data.</param>
        </member>
        <member name="P:KudyStudio.Data.PagedDataReader.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataReader.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataReader.RecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataReader.PageCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.NullTokenResolver">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.TokenResolverBase`1">
            <summary>
            
            </summary>
            <typeparam name="TResolver"></typeparam>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ITokenResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ITokenResolver.GenerateToken(System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ITokenResolver.VerifyToken(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <param name="tokenToVerify"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.TokenResolverBase`1.GenerateToken(System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.TokenResolverBase`1.VerifyToken(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <param name="tokenToVerify"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.TokenResolverBase`1.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.NullTokenResolver.GenerateToken(System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.NullTokenResolver.VerifyToken(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="serviceName"></param>
            <param name="tokenToVerify"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ChannelVerifierBase`1">
            <summary>
            
            </summary>
            <typeparam name="TVerifier"></typeparam>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.IChannelVerifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IChannelVerifier.VerifyChannel(System.Object,System.ServiceModel.Channels.Message)">
            <summary>
            
            </summary>
            <param name="contextState"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelVerifierBase`1.VerifyChannel(System.Object,System.ServiceModel.Channels.Message)">
            <summary>
            
            </summary>
            <param name="contextState"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelVerifierBase`1.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.ISynchronizableObject">
            <summary>
            An object that can report whether or not it is synchronized.
            </summary>
        </member>
        <member name="P:KudyStudio.ISynchronizableObject.SyncRoot">
            <summary>
            Gets the lock object.
            </summary>
        </member>
        <member name="P:KudyStudio.ISynchronizableObject.IsSynchronized">
            <summary>
            Gets a value indicating whether the object is synchronized.
            </summary>
        </member>
        <member name="T:KudyStudio.SyncDynamicCache`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.Get(`0,System.Func{`0,`1})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.CreateReadFreeCache">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.CreateReadFreeCache(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.CreateReadWriteCache">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.CreateReadWriteCache(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncDynamicCache`2.ReadFreeCache.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.RegexUtil">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.RegexUtil.DefaultAssertionParts">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.RegexUtil.DefaultRegexOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.RegexUtil.Escape(System.String)">
            <summary>
            Escapes a minimal set of metacharacters (\, *, +, ?, |, {, [, (,), ^, $,., 
            #, and white space) by replacing them with their escape codes.
            </summary>
            <param name="str">The input string containing the text to convert.</param>
            <returns>A string of characters with any metacharacters converted to their escaped form.</returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.Unescape(System.String)">
            <summary>
            Unescapes any escaped characters in the input string.
            </summary>
            <param name="str">The input string containing the text to convert.</param>
            <returns>A string of characters with any escaped characters converted to their unescaped form.</returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.IsMatch(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.Split(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchValue(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String,System.Int32,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupIndex"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValue(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupName"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchValueList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchValueList(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="pattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String,System.Int32,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupIndex"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchGroupValueList(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="groupPattern"></param>
            <param name="groupName"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.CreateAssertionRegex(System.String,System.String,KudyStudio.RegexAssertionParts,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="assertionParts"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValue(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValue(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValue(System.String,System.String,System.String,KudyStudio.RegexAssertionParts)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="assertionParts"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValue(System.String,System.String,System.String,KudyStudio.RegexAssertionParts,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="assertionParts"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValueList(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValueList(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValueList(System.String,System.String,System.String,KudyStudio.RegexAssertionParts)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="assertionParts"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.RegexUtil.MatchAssertionValueList(System.String,System.String,System.String,KudyStudio.RegexAssertionParts,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="assertionParts"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utils">
            <summary>
            This is common utility class which contains many usefull members.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Utils.HtmlEncode(System.String)">
            <summary>
            Converts a string to html encode string.
            </summary>
            <param name="str">A string to encode.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.HtmlDecode(System.String)">
            <summary>
            Converts a html encoded string to originally string.
            </summary>
            <param name="str">A string to decode.</param>
            <returns>The decoded string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.HtmlAttributeEncode(System.String)">
            <summary>
            Converts a string to html attribute encode string.
            </summary>
            <param name="str">A string to encode.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.UrlEncode(System.String)">
            <summary>
            Encodes a url string.
            </summary>
            <param name="str">A url string to encode.</param>
            <returns>The encoded url.</returns>
        </member>
        <member name="M:KudyStudio.Utils.UrlDecode(System.String)">
            <summary>
            Decodes a url string.
            </summary>
            <param name="str">A url string to decode.</param>
            <returns>The decoded url.</returns>
        </member>
        <member name="M:KudyStudio.Utils.Base64Encode(System.String)">
            <summary>
            Converts a string to its equivalent string representation encoded with 
            base 64 digits using Encoding.UTF8.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The converted base64 string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.Base64Encode(System.String,System.Text.Encoding)">
            <summary>
            Converts a string to its equivalent string representation encoded with 
            base 64 digits.
            </summary>
            <param name="str">The string to convert.</param>
            <param name="encoding">Encoding of the string to get bytes.</param>
            <returns>The converted base64 string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.Base64Decode(System.String)">
            <summary>
            Converts the specified System.String, which encodes binary data as base 64 
            digits, to an equivalent string using Encoding.UTF8.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.Base64Decode(System.String,System.Text.Encoding)">
            <summary>
            Converts the specified System.String, which encodes binary data as base 64 
            digits, to an equivalent string.
            </summary>
            <param name="str">The string to convert.</param>
            <param name="encoding">Encoding of the string to get bytes.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetTimeString">
            <summary>
            Gets the date time string in format "HH:mm:ss" of 
            DateTime.Now.
            </summary>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetTimeString(System.DateTime)">
            <summary>
            Gets the date time string in format "HH:mm:ss" of 
            a specified date time.
            </summary>
            <param name="dateTime">Date time to get string from.</param>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateString">
            <summary>
            Gets the date time string in format "yyyy-MM-dd" of 
            DateTime.Now.
            </summary>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateString(System.DateTime)">
            <summary>
            Gets the date time string in format "yyyy-MM-dd" of 
            a specified date time.
            </summary>
            <param name="dateTime">Date time to get string from.</param>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateTimeString">
            <summary>
            Gets the date time string in format "yyyy-MM-dd HH:mm:ss" of 
            DateTime.Now.
            </summary>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateTimeString(System.DateTime)">
            <summary>
            Gets the date time string in format "yyyy-MM-dd HH:mm:ss" of 
            a specified date time.
            </summary>
            <param name="dateTime">Date time to get string from.</param>
            <returns>The date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetStandardDateTimeString">
            <summary>
            Gets the standard date time string in format "yyyy-MM-dd HH:mm:ss:fffffff" of 
            DateTime.Now.
            </summary>
            <returns>The standard date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetStandardDateTimeString(System.DateTime)">
            <summary>
            Gets the standard date time string in format "yyyy-MM-dd HH:mm:ss:fffffff" of 
            a specified date time.
            </summary>
            <param name="dateTime">Date time to get string from.</param>
            <returns>The standard date time string</returns>
        </member>
        <member name="M:KudyStudio.Utils.IsShortDate(System.String)">
            <summary>
            Gets a value that indicates whether the specified string is representation 
            of a date using format "yyyy-MM-dd" and "yyyy-M-d".
            </summary>
            <param name="str">A string containing a date and time.</param>
            <returns>True if the str parameter is representation of a date; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.IsDateTime(System.String)">
            <summary>
            Gets a value that indicates whether the specified string is representation 
            of a date and time.
            </summary>
            <param name="str">A string containing a date and time.</param>
            <returns>True if the str parameter is representation of a date and time; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.IsDateTime(System.String,System.String)">
            <summary>
            Gets a value that indicates whether the specified string is representation 
            of a date and time using the specified format.
            </summary>
            <param name="str">A string containing a date and time.</param>
            <param name="format">The required format of str.</param>
            <returns>True if the str parameter is representation of a date and time; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.IsDateTime(System.String,System.String[])">
            <summary>
            Gets a value that indicates whether the specified string is representation 
            of a date and time using the specified array of formats.
            </summary>
            <param name="str">A string containing a date and time.</param>
            <param name="formats">An array of allowable formats of str.</param>
            <returns>True if the str parameter is representation of a date and time; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiff(KudyStudio.Utils.DateInterval,System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of time intervals between two Date values.
            </summary>
            <param name="interval">
            DateInterval enumeration value or String expression representing 
            the time interval you want to use as the unit of difference between Date1 and Date2.
            </param>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of time intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetGmtDateDiffSeconds(System.DateTime)">
            <summary>
            Gets the total seconds of the time span of a specified date time and GMT date time.
            </summary>
            <param name="dateTime">A date time.</param>
            <returns>Total seconds of the time span.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffYears(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of year intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of year intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffMonths(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of month intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of month intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffWeeks(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of week intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of week intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffDays(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of day intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of day intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffHours(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of hour intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of hour intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffMinutes(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of minute intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of minute intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffSeconds(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of second intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of second intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDateDiffMilliseconds(System.DateTime,System.DateTime)">
            <summary>
            Gets a Long value specifying the number of millisecond intervals between two Date values.
            </summary>
            <param name="startDate">The first date/time value you want to use in the calculation.</param>
            <param name="endDate">The second date/time value you want to use in the calculation.</param>
            <returns>Returns a Long value specifying the number of millisecond intervals between two Date values.</returns>
        </member>
        <member name="M:KudyStudio.Utils.EscapeXml(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utils.UnescapeXml(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="F:KudyStudio.Utils.InstalledFontFamily">
            <summary>
            Gets the installed font families.
            </summary>
        </member>
        <member name="M:KudyStudio.Utils.GetBeingCalledMethod">
            <summary>
            Gets the currently-being-called method in currently-being-initialized class.
            </summary>
            <returns>The currently-being-called method in currently-being-initialized class.</returns>
            <remarks>This is a slow-running method. Make sure you're not doing this in a loop.</remarks>
        </member>
        <member name="M:KudyStudio.Utils.GetBeingInitializedClassType">
            <summary>
            Gets the <see cref="T:Type"/> of currently-being-initialized class.
            </summary>
            <returns>The <see cref="T:Type"/> of currently-being-initialized class.</returns>
            <remarks>This is a slow-running method. Make sure you're not doing this in a loop.</remarks>
        </member>
        <member name="M:KudyStudio.Utils.DoRetry(System.Int32,System.Int32,System.Action)">
            <summary>
            A retry mechanism, try to execute an <see cref="T:System.Action"/> using try-catch.
            </summary>
            <param name="retryTimes">The times for retry.</param>
            <param name="retryInterval">The retry interval in milliseconds.</param>
            <param name="tryAction">An <see cref="T:System.Action"/> delegate, encapsulates a method that takes no parameters and does not return a value.</param>
            <exception cref="T:ArgumentNullException">tryAction is null.</exception>
        </member>
        <member name="M:KudyStudio.Utils.DoRetry(System.Int32,System.Int32,System.Action,System.Action{System.Exception})">
            <summary>
            A retry mechanism, try to execute an <see cref="T:System.Action"/> using try-catch.
            </summary>
            <param name="retryTimes">The times for retry.</param>
            <param name="retryInterval">The retry interval in milliseconds.</param>
            <param name="tryAction">An <see cref="T:System.Action"/> delegate, encapsulates a method that takes no parameters and does not return a value.</param>
            <param name="failedAction">An <see cref="T:System.Action"/> delegate, encapsulates a method that takes no parameters and does not return a value.</param>
            <exception cref="T:ArgumentNullException">tryAction is null.</exception>
        </member>
        <member name="M:KudyStudio.Utils.FileExists(System.String)">
            <summary>
            Determines whether the specified file exists.
            </summary>
            <param name="path">The file to check.</param>
            <returns>
            true if the caller has the required permissions and path contains the name 
            of an existing file; otherwise, false. This method also returns false if 
            path is null, an invalid path, or a zero-length string. If the caller does 
            not have sufficient permissions to read the specified file, no exception 
            is thrown and the method returns false regardless of the existence of path.
            </returns>
        </member>
        <member name="M:KudyStudio.Utils.DeleteFile(System.String)">
            <summary>
            Deletes the specified file. An exception is not thrown if the specified file 
            does not exist.
            </summary>
            <param name="path">The name of the file to be deleted.</param>
        </member>
        <member name="M:KudyStudio.Utils.MoveFile(System.String,System.String)">
            <summary>
            Moves a specified file to a new location, providing the option to specify 
            a new file name.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destFileName">The new path for the file. If destFileName exists, it will be deleted before moving.</param>
        </member>
        <member name="M:KudyStudio.Utils.CopyFile(System.String,System.String)">
            <summary>
            Copies an existing file to a new file. Overwriting a file of the same name 
            is not allowed.
            </summary>
            <param name="sourceFileName">The file to copy.</param>
            <param name="destFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
        </member>
        <member name="M:KudyStudio.Utils.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The file to copy.</param>
            <param name="destFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">True if the destination file can be overwritten; otherwise, false.</param>
        </member>
        <member name="M:KudyStudio.Utils.GetFileMd5HashString(System.String)">
            <summary>
            Gets the hash hexadecimal string(binary fingerprint) of a file.
            </summary>
            <param name="path">The file to get hash string from.</param>
            <returns>The hash hexadecimal string of the file.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileMd5HashString(System.IO.FileStream)">
            <summary>
            Gets the md5 hash hexadecimal string(binary fingerprint) of a file stream.
            </summary>
            <param name="stream">The stream of a file.</param>
            <returns>The hash hexadecimal string of the file stream.</returns>
        </member>
        <member name="M:KudyStudio.Utils.IsEqualFiles(System.String,System.String,System.String[])">
            <summary>
            Gets a bool indicates whether the specified files are the same by checking md5 hash string.
            </summary>
            <param name="fileName1">The first file to check.</param>
            <param name="fileName2">The second file to check.</param>
            <param name="otherFileNames">The other files to check.</param>
            <returns>True if the specified files are the same; otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.DirectoryExists(System.String)">
            <summary>
            Determines whether the given path refers to an existing directory on disk.
            </summary>
            <param name="path">The path to test.</param>
            <returns>True if path refers to an existing directory; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utils.CreateDirectory(System.String)">
            <summary>
            Creates all directories and subdirectories as specified by path.
            </summary>
            <param name="path">The directory path to create.</param>
            <returns>A <see cref="T:System.IO.DirectoryInfo"/> as specified by path.</returns>
        </member>
        <member name="M:KudyStudio.Utils.EnsureDirectory(System.String)">
            <summary>
            Ensures that the specified directory exists.
            </summary>
            <param name="path">The directory path.</param>
            <returns>A <see cref="T:System.IO.DirectoryInfo"/> as specified by path.</returns>
        </member>
        <member name="M:KudyStudio.Utils.EnsureDirectoryOfFile(System.String)">
            <summary>
            Ensures that the directory of specified file exists.
            </summary>
            <param name="path">The file path.</param>
            <returns>A <see cref="T:System.IO.DirectoryInfo"/> as specified by path.</returns>
        </member>
        <member name="M:KudyStudio.Utils.DeleteDirectory(System.String)">
            <summary>
            Deletes an empty directory from a specified path.
            </summary>
            <param name="path">The name of the empty directory to remove. This directory must be writable or empty.</param>
        </member>
        <member name="M:KudyStudio.Utils.DeleteDirectory(System.String,System.Boolean)">
            <summary>
            Deletes the specified directory and, if indicated, any subdirectories in the directory.
            </summary>
            <param name="path">The name of the directory to remove.</param>
            <param name="recursive">true to remove directories, subdirectories, and files in path; otherwise, false.</param>
        </member>
        <member name="M:KudyStudio.Utils.MoveDirectory(System.String,System.String)">
            <summary>
            Moves a file or a directory and its contents to a new location.
            </summary>
            <param name="sourceDirName">The path of the file or directory to move.</param>
            <param name="destDirName">The path to the new location for sourceDirName. If sourceDirName is a file, 
            then destDirName must also be a file name.</param>
        </member>
        <member name="M:KudyStudio.Utils.CopyDirectory(System.String,System.String)">
            <summary>
            Copies an existing directory to a new directory. Overwriting a file of the same name 
            is allowed.
            </summary>
            <param name="sourceDirName">The directory to copy.</param>
            <param name="destDirName">The name of the destination directory.</param>
        </member>
        <member name="M:KudyStudio.Utils.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing directory to a new directory.
            </summary>
            <param name="sourceDirName">The directory to copy.</param>
            <param name="destDirName">The name of the destination directory.</param>
            <param name="overwrite">True if the file in destination directory can be overwritten; otherwise, false.</param>
        </member>
        <member name="M:KudyStudio.Utils.CombineDirectory(System.String,System.String)">
            <summary>
            Combines an existing directory to another existing directory.
            </summary>
            <param name="sourceDirName">The directory to combine.</param>
            <param name="destDirName">The name of the destination directory.</param>
        </member>
        <member name="M:KudyStudio.Utils.GetDirectorySize(System.String)">
            <summary>
            Gets the size, in bytes, of the specified directory with subdirectories.
            </summary>
            <param name="dirName">The path of directory to get size from.</param>
            <returns>The size of the directory in bytes.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetDirectorySize(System.String,System.Boolean)">
            <summary>
            Gets the size, in bytes, of the specified directory.
            </summary>
            <param name="dirName">The path of directory to get size from.</param>
            <param name="recursive">True to calculate size of directories, subdirectories, and files in path; otherwise, false.</param>
            <returns>The size of the directory in bytes.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetContentType(System.String)">
            <summary>
            Gets the content type string by a file name.
            </summary>
            <param name="fileName">The file name to get content type from.</param>
            <returns>The content type found.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetTextFileEncoding(System.String)">
            <summary>
            Returns the Encoding of a text file. Returns Encoding.Default if no Unicode BOM (byte order mark) is found.
            </summary>
            <param name="fileName">The file name.</param>
            <returns>The Encoding of the text file, returns Encoding.Default if no Unicode BOM (byte order mark) is found.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileSizeFormated(System.Int32)">
            <summary>
            Gets string expression of file size in format: 
            number + Bytes/KB/MB/GB/TB/EB.
            </summary>
            <param name="bytes">The bytes count of file size.</param>
            <returns>The string expression of file size.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileSizeFormated(System.Int64)">
            <summary>
            Gets string expression of file size in format: 
            number + Bytes/KB/MB/GB/TB/EB.
            </summary>
            <param name="bytes">The bytes count of file size.</param>
            <returns>The string expression of file size.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileSizeFormated(System.Int32,System.Int32)">
            <summary>
            Gets string expression of file size in format: 
            number + Bytes/KB/MB/GB/TB/EB.
            </summary>
            <param name="bytes">The bytes count of file size.</param>
            <param name="round">The decimal fraction to reserve.</param>
            <returns>The string expression of file size.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileSizeFormated(System.Int64,System.Int32)">
            <summary>
            Gets string expression of file size in format: 
            number + Bytes/KB/MB/GB/TB/EB.
            </summary>
            <param name="bytes">The bytes count of file size.</param>
            <param name="round">The decimal fraction to reserve.</param>
            <returns>The string expression of file size.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetFileSizeFromFormated(System.String)">
            <summary>
            Gets the bytes count of a file size string generated by <see cref="M:Utils.GetFileSizeFormated()"/>.
            </summary>
            <param name="sizeString">The file size in format: number + Bytes/KB/MB/GB/TB/EB.</param>
            <returns>The bytes count of the specified file size string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.JoinCollection``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Joins the items in an enumerable collection with a separator.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
            <param name="collection">An enumerable collection.</param>
            <param name="separator">The separator to combine the collection items with.</param>
            <returns>The combined string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.JoinCollection``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String)">
            <summary>
            Joins the items in an enumerable collection with a separator, each item 
            will be fixed with the specified prefix and suffix.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
            <param name="collection">An enumerable collection.</param>
            <param name="separator">The separator to combine the collection items with.</param>
            <param name="prefix">The prefix to fix the collection items with.</param>
            <param name="postfix">The postfix to fix the collection items with.</param>
            <returns>The combined string.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetPastTimeExpression(System.DateTime)">
            <summary>
            Gets a string describing the past time.
            </summary>
            <param name="date">The date time to calculate the past time.</param>
            <returns>A string describing the past time.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetPastTimeExpression(System.DateTime,System.Boolean)">
            <summary>
            Gets a string describing the past time.
            </summary>
            <param name="date">The date time to calculate the past time.</param>
            <param name="brief">True to show briefly, otherwise false.</param>
            <returns>A string describing the past time.</returns>
        </member>
        <member name="M:KudyStudio.Utils.GetConstellation(System.DateTime)">
            <summary>
            Gets the constellation name by a birthday.
            </summary>
            <param name="date">The date to get constellation from.</param>
            <returns>The constellation name.</returns>
        </member>
        <member name="T:KudyStudio.Utils.DateInterval">
            <summary>
            Indicates how to determine and format date intervals when calling date-related functions.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Year">
            <summary>
            Year.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Month">
            <summary>
            Month.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Week">
            <summary>
            Week.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Day">
            <summary>
            Day.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Hour">
            <summary>
            Hour.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Minute">
            <summary>
            Minute.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Second">
            <summary>
            Second.
            </summary>
        </member>
        <member name="F:KudyStudio.Utils.DateInterval.Millisecond">
            <summary>
            Millisecond.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.Config.UrlRewritingConfigElement">
            <summary>
            Represents a configuration element for UrlRewriting. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.UrlRewritingConfigElement.VirtualOnly">
            <summary>
            Gets the VirtualOnly of UrlRewriting configuration.
            The value is <c>true</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.UrlRewritingConfigElement.Rules">
            <summary>
            Gets the Rules of UrlRewriting configuration.
            The value is an empty list by default.
            </summary>
        </member>
        <member name="T:KudyStudio.TopDataContainer`1">
            <summary>
            A helper class to get the top n tiems from a list. The items should be comparable.
            </summary>
            <remarks>No matter how many items are added, only top n items are saved in <see cref="T:TopDataContainer`1"/>.</remarks>
            <typeparam name="T">The type of the items to sort.</typeparam>
        </member>
        <member name="T:KudyStudio.SynchronizableObject`1">
            <summary>
            Synchronizable acts as a base class for deriving a synchronizable class.
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>
            Override GetSynchronized() in derived classes. When this method is called, always 
            returns thread-safe instance.
            </remarks>
        </member>
        <member name="M:KudyStudio.SynchronizableObject`1.Synchronized(`0)">
            <summary>
            Returns a thread-safe instance backed by the specified instance. 
            In order to guarantee thread-safety, all access to the backed instance must
            be accomplished through the returned instance.
            </summary>
            <param name="instance">The instance to get a synchronized instance from.</param>
            <returns>A synchronized instance.</returns>
        </member>
        <member name="M:KudyStudio.SynchronizableObject`1.GetSynchronized">
            <summary>
            Called by <see cref="M:Synchronized"/>. This method returns a synchronized 
            instance that wraps this instance by default and can be overridden to return
            e. g. subclasses of current T or this in case this instance is already synchronized.
            </summary>
            <returns>A synchronized instance.</returns>
        </member>
        <member name="P:KudyStudio.SynchronizableObject`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to current 
            instance.
            </summary>
            <value>An object that can be used to synchronize access to current instance.</value>
        </member>
        <member name="P:KudyStudio.SynchronizableObject`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to current instance is 
            synchronized (thread-safe).
            </summary>
            <value>
            true if access to current instance is synchronized (thread safe); 
            otherwise, false. The default is false.
            </value>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.#ctor(System.Int32,KudyStudio.TopDataContainer{`0}.SortMode)">
            <summary>
            Creates a <see cref="T:TopDataContainer`1"/> with the specified size and sort mode.
            </summary>
            <param name="n">The max top data count.</param>
            <param name="sortMode">The sort mode.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.#ctor(System.Int32,KudyStudio.TopDataContainer{`0}.SortMode,System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates a <see cref="T:TopDataContainer`1"/> with the specified size and sort mode.
            </summary>
            <param name="n">The max top n count.</param>
            <param name="sortMode">The sort mode.</param>
            <param name="comparer">The comparer the use.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0},KudyStudio.TopDataContainer{`0}.SortMode)">
            <summary>
            Creates a <see cref="T:TopDataContainer`1"/> with the specified size, items and sort mode.
            </summary>
            <param name="n">The max top n count.</param>
            <param name="items">The items to sort.</param>
            <param name="sortMode">The sort mode.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0},KudyStudio.TopDataContainer{`0}.SortMode,System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates a <see cref="T:TopDataContainer`1"/> with the specified size, items and sort mode.
            </summary>
            <param name="n">The max top n count.</param>
            <param name="items">The items to sort.</param>
            <param name="sortMode">The sort mode.</param>
            <param name="comparer">The comparer the use.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.Add(`0)">
            <summary>
            Adds an item.
            </summary>
            <param name="item">A T object.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a item list.
            </summary>
            <param name="items">A T object list.</param>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.Clear">
            <summary>
            Clears the data.
            </summary>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.GetTopData">
            <summary>
            Gets the top n items.
            </summary>
            <returns>The top n items</returns>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.GetTopData(`0)">
            <summary>
            Adds a item and returns the top n items.
            </summary>
            <param name="addItem">A T object.</param>
            <returns>The top n items</returns>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.GetTopData(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a item list and returns the top n items.
            </summary>
            <param name="addItems">A T object list.</param>
            <returns>The top n items</returns>
        </member>
        <member name="M:KudyStudio.TopDataContainer`1.GetSynchronized">
            <summary>
            Called by <see cref="M:Synchronized"/>. This method returns a synchronized 
            instance that wraps this instance by default and can be overridden to return
            e. g. subclasses of current T or this in case this instance is already synchronized.
            </summary>
            <returns>A synchronized instance.</returns>
        </member>
        <member name="P:KudyStudio.TopDataContainer`1.N">
            <summary>
            Gets the top n count.
            </summary>
        </member>
        <member name="P:KudyStudio.TopDataContainer`1.Mode">
            <summary>
            Gets the top n count.
            </summary>
        </member>
        <member name="P:KudyStudio.TopDataContainer`1.Comparer">
            <summary>
            Gets the top n count.
            </summary>
        </member>
        <member name="T:KudyStudio.TopDataContainer`1.SortMode">
            <summary>
            Specifies the sort mode used when sortting in <see cref="T:TopDataContainer`1"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.TopDataContainer`1.SortMode.Ascending">
            <summary>
            Ascending mode.
            </summary>
        </member>
        <member name="F:KudyStudio.TopDataContainer`1.SortMode.Descending">
            <summary>
            Descending mode.
            </summary>
        </member>
        <member name="T:KudyStudio.Data.SqlServerHelper">
            <summary>
            The SqlServerHelper class is intended to encapsulate high performance, scalable 
            best practices for common uses of SqlClient. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedReader(System.String,KudyStudio.Data.PagedSqlParameters)">
            <summary>
            Execute PagerReader (that returns a resultset) against the database specified in the connection string 
            using the provided <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="pagedSqlParameters">A <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.</param>
            <returns>A PagedDataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedReader(System.Data.SqlClient.SqlConnection,KudyStudio.Data.PagedSqlParameters)">
            <summary>
            Execute PagerReader (that returns a resultset) against the specified SqlConnection 
            using the provided <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="pagedSqlParameters">A <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.</param>
            <returns>A PagedDataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedReader(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Execute PagerReader (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
            <returns>A PagedDataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedReader(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Execute PagerReader (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
            <returns>A PagedDataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedReader(System.Data.SqlClient.SqlConnection,KudyStudio.Data.SqlServerHelper.SqlConnectionOwnership,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="connectionOwnership">Indicates whether the connection parameter was provided by the caller, or created by SqlServerHelper.</param>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
            <returns>PagedDataReader containing the results of the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedDataTable(System.String,KudyStudio.Data.PagedSqlParameters)">
            <summary>
            ExecutePagedDataTable (that returns a resultset) against the database specified in the connection string 
            using the provided <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="pagedSqlParameters">A <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.</param>
            <returns>A PagedDataTable containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedDataTable(System.Data.SqlClient.SqlConnection,KudyStudio.Data.PagedSqlParameters)">
            <summary>
            ExecutePagedDataTable (that returns a resultset) against the specified SqlConnection 
            using the provided <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="pagedSqlParameters">A <see cref="T:KudyStudio.Data.PagedSqlParameters"/> instance.</param>
            <returns>A PagedDataTable containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedDataTable(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            ExecutePagedDataTable (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
            <returns>A PagedDataTable containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecutePagedDataTable(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            ExecutePagedDataTable (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
            <returns>A PagedDataTable containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">An array of SqlParameters to be added to command</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Data.DataRow)">
            <summary>
            This method assigns dataRow column values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values.</param>
            <param name="parameterValues">Array of objects holding the values to be assigned.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],System.Boolean@)">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">The SqlCommand to be prepared.</param>
            <param name="connection">A valid SqlConnection, on which to execute this command.</param>
            <param name="transaction">A valid SqlTransaction, or 'null'.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required.</param>
            <param name="mustCloseConnection"><c>true</c> if the connection was opened by the method, otherwose is false.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetConnectionStringInfo(System.String)">
            <summary>
            Gets the information from a connection string.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <returns>An <see cref="T:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo"/> object.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.EscapeLike(System.String)">
            <summary>
            Replays ESC chars in sql string while using LIKE as datafield LIKE '%key%'.
            </summary>
            <param name="key">The key string to be handled.</param>
            <returns>A safe sql string.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.EscapeEqual(System.String)">
            <summary>
            Replays the char "'" in sql string while using Equal like datafield='key'.
            </summary>
            <param name="key">The key string to be handled.</param>
            <returns>A safe key string.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ToCommaString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Combines the items of a list which is enumerable with comma char.
            </summary>
            <typeparam name="T">The type of objects in list.</typeparam>
            <param name="items">A list which is enumerable.</param>
            <returns>A string with comma char.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ToCommaString``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Combines the items of a list which is enumerable with comma char.
            </summary>
            <typeparam name="T">The type of objects in list.</typeparam>
            <param name="items">A list which is enumerable.</param>
            <param name="forInExpression"></param>
            <returns>A string with comma char.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.String,System.String,System.Object@)">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified in the connection string 
            using the provided T-SQL command.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="id">The new identity key value.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object@)">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection
            using the provided T-SQL command.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="id">The new identity key value.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object@)">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided T-SQL command.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="id">The new identity key value.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored prcedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connection">A valid SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided T-SQL command and parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlTransaction 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connection">A valid SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided T-SQL command and parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,KudyStudio.Data.SqlServerHelper.SqlConnectionOwnership,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">A valid SqlConnection, on which to execute this command.</param>
            <param name="connectionOwnership">Indicates whether the connection parameter was provided by the caller, or created by SqlServerHelper.</param>
            <param name="transaction">A valid SqlTransaction, or 'null'.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required.</param>
            <returns>DataReader containing the results of the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connection">A valid SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided T-SQL command and parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSet(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided T-SQL command and parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided T-SQL command parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connection">A valid SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided T-SQL command and parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided T-SQL command using "FOR XML AUTO" and parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command using "FOR XML AUTO".</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="connection">A valid SqlConnection.</param>
            <param name="spName">The name of the stored procedure using "FOR XML AUTO".</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO".</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO".</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided T-SQL command using "FOR XML AUTO" and parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="sql">The T-SQL command using "FOR XML AUTO".</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            </remarks>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="spName">The name of the stored procedure using "FOR XML AUTO".</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO".</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="transaction">A valid SqlTransaction.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO".</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <param name="connection">A valid SqlConnection, on which to execute this command.</param>
            <param name="transaction">A valid SqlTransaction, or 'null'.</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.).</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO".</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.String,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, 24);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(conn, "GetOrders", ds, new string[] {"orders"}, 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(trans, "GetOrders", ds, new string[]{"orders"}, 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">
            This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Private helper method that execute a SqlCommand (that returns a resultset) against the specified SqlTransaction and SqlConnection
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.UpdateDataset(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.DataSet,System.String)">
            <summary>
            Executes the respective command for each inserted, updated, or deleted row in the DataSet.
            </summary>
            <remarks>
            e.g.:  
             UpdateDataset(conn, insertCommand, deleteCommand, updateCommand, dataSet, "Order");
            </remarks>
            <param name="insertCommand">A valid transact-SQL statement or stored procedure to insert new records into the data source</param>
            <param name="deleteCommand">A valid transact-SQL statement or stored procedure to delete records from the data source</param>
            <param name="updateCommand">A valid transact-SQL statement or stored procedure used to update records in the data source</param>
            <param name="dataSet">The DataSet used to update the data source</param>
            <param name="tableName">The DataTable used to update the data source.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.String[])">
            <summary>
            Simplify the creation of a Sql command object by allowing
            a stored procedure and optional parameters to be provided
            </summary>
            <remarks>
            e.g.:  
             SqlCommand command = CreateCommand(conn, "AddCustomer", "CustomerID", "CustomerName");
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="sourceColumns">An array of string to be assigned as the source columns of the stored procedure parameters</param>
            <returns>A valid SqlCommand object</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.  
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified
            SqlTransaction using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReaderTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A DataReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSetTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSetTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the store procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteDataSetTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalarTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryWithSplitter(System.String,System.String)">
            <summary>
            Execute multiple SqlCommand (that returns no resultset) against the database specified 
            in the connection string with a default splitter "\r\nGO\r\n".
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="sql">The T-SQL command.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryWithSplitter(System.String,System.String,System.String)">
            <summary>
            Execute multiple SqlCommand (that returns no resultset) against the database specified 
            in the connection string with a splitter that is case-sensitive.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="sql">The T-SQL command.</param>
            <param name="splitter">The splitter in the sql string.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryWithSplitter(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Execute multiple SqlCommand (that returns no resultset and takes no parameters) against 
            the provided SqlConnection with a default splitter "\r\nGO\r\n".
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ExecuteNonQueryWithSplitter(System.Data.SqlClient.SqlConnection,System.String,System.String)">
            <summary>
            Execute multiple SqlCommand (that returns no resultset and takes no parameters) against 
            the provided SqlConnection with a splitter that is case-sensitive.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
            <param name="sql">The T-SQL command.</param>
            <param name="splitter">The splitter in the sql string.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ClearDbLog(System.String)">
            <summary>
            Clears the database log against the database specified in the connection string.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ClearDbLog(System.Data.SqlClient.SqlConnection)">
            <summary>
            Clears the database log against the provided SqlConnection.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateSplitStringFunction(System.String)">
            <summary>
            Creates a SQL table function named SplitString.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateSplitStringFunction(System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates a SQL table function named SplitString.
            </summary>
            <param name="connection">A valid SqlConnection.</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CloneParameters(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Deep copy of cached SqlParameter array.
            </summary>
            <param name="originalParameters">The parameter array to be cloned.</param>
            <returns>The parameter array cloned.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.DiscoverSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of SqlParameters for a stored procedure.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter.</param>
            <returns>The parameter array discovered.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSetInternal(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateInParameter(System.String,System.Data.SqlDbType)">
            <summary>
            Creates a new instance of the SqlParameter of type Input.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateInParameter(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Creates a new instance of the SqlParameter of type Input.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateInParameter(System.String,System.Data.SqlDbType,System.Int32)">
            <summary>
            Creates a new instance of the SqlParameter of type Input.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <param name="size">The length of the parameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateInParameter(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            Creates a new instance of the SqlParameter of type Input.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateOutParameter(System.String,System.Data.SqlDbType)">
            <summary>
            Creates a new instance of the SqlParameter of type Output.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateReturnParameter(System.String,System.Data.SqlDbType)">
            <summary>
            Creates a new instance of the SqlParameter of type ReturnValue.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateParameter(System.String,System.Object)">
            <summary>
            Creates a new instance of the SqlParameter of type Input.
            </summary>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateParameter(System.Data.ParameterDirection,System.String,System.Data.SqlDbType)">
            <summary>
            Creates a new instance of the System.Data.SqlClient.SqlParameter.
            </summary>
            <param name="direction">One of the ParameterDirection values.</param>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateParameter(System.Data.ParameterDirection,System.String,System.Data.SqlDbType,System.Int32)">
            <summary>
            Creates a new instance of the SqlParameter.
            </summary>
            <param name="direction">One of the ParameterDirection values.</param>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <param name="size">The length of the parameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CreateParameter(System.Data.ParameterDirection,System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            Creates a new instance of the SqlParameter.
            </summary>
            <param name="direction">One of the ParameterDirection values.</param>
            <param name="paramName">The name of the parameter to map.</param>
            <param name="dbType">One of the SqlDbType values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new instance of the SqlParameter.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results.</param>
            <param name="parameterValues">The values of the returned SqlParameters.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean,System.Object[])">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure.
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="spName">The name of the stored procedure.</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results.</param>
            <param name="parameterValues">The values of the returned SqlParameters.</param>
            <returns>An array of SqlParameters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Add parameter array to the cache.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.CacheParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Add parameter array to the cache.
            </summary>
            <param name="connection">一个有效的SqlConnection数据库连接</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetCachedParameterSet(System.String,System.String)">
            <summary>
            Retrieve a parameter array from the cache.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection.</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An array of SqlParamters.</returns>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.GetCachedParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Retrieve a parameter array from the cache.
            </summary>
            <param name="connection">A valid SqlConnection object.</param>
            <param name="commandText">The stored procedure name or T-SQL command.</param>
            <returns>An array of SqlParamters.</returns>
        </member>
        <member name="T:KudyStudio.Data.SqlServerHelper.SqlConnectionOwnership">
            <summary>
            This enum is used to indicate whether the connection was provided by the caller, or created by SqlServerHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader().
            </summary>
        </member>
        <member name="F:KudyStudio.Data.SqlServerHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlServerHelper</summary>
        </member>
        <member name="F:KudyStudio.Data.SqlServerHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo">
            <summary>
            This class contains the main properties of MS-SQL connection string.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.#ctor">
            <summary>
            Initializes an instance of class <see cref="T:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes an instance of class <see cref="T:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo"/> with specified values.
            </summary>
            <param name="server">The server(data source) value.</param>
            <param name="database">The initial database(initial catalog) value.</param>
            <param name="userId">The user id(uid) value.</param>
            <param name="password">The password(psw) value.</param>
        </member>
        <member name="P:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.Server">
            <summary>
            Gets ot sets the server(data source) value.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.Database">
            <summary>
            Gets ot sets the initial database(initial catalog) value.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.UserId">
            <summary>
            Gets ot sets the user id(uid) value.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.SqlServerHelper.ConnectionStringInfo.Password">
            <summary>
            Gets ot sets the password(psw) value.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.InputExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.TextBox(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.TextBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.TextBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.TextBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Password(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Password(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Password(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Password(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Hidden(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Hidden(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Hidden(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.Hidden(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="isChecked"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Boolean,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="isChecked"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.CheckBox(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="isChecked"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="isChecked"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="isChecked"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="isChecked"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.RadioButtonList(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{KudyStudio.Web.Mtv.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.FileUpload(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.FileUpload(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.FileUpload(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.InputExtensions.AsString(KudyStudio.Web.Mtv.Html.HtmlInputType)">
            <summary>
            
            </summary>
            <param name="inputType"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.ButtonExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <param name="onClick"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <param name="onClick"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.Button(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.HtmlButtonType,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="buttonType"></param>
            <param name="onClick"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitButton(KudyStudio.Web.Mtv.HtmlHelper)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitButton(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitButton(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="buttonText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitImage(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="imageSrc"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitImage(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="imageSrc"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ButtonExtensions.SubmitImage(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="imageSrc"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Config.LanguageConfigElement">
            <summary>
            Represents a configuration element for Language in MTV. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.LanguageConfigElement.Name">
            <summary>
            Gets the Name of a language in MTV configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.LanguageConfigElement.Text">
            <summary>
            Gets the Text of a language in MTV configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="T:KudyStudio.AssemblyResource">
            <summary>
            Helper class to loads the specified manifest resource from assembly.
            </summary>
        </member>
        <member name="M:KudyStudio.AssemblyResource.#ctor(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:KudyStudio.AssemblyResource.GetStreamByFileName(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.AssemblyResource.GetStreamByFullName(System.String)">
            <summary>
            
            </summary>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.AssemblyResource.GetStreamByFileName(System.Reflection.Assembly,System.String)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.AssemblyResource.GetStreamByFullName(System.Reflection.Assembly,System.String)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.AssemblyResource.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.AssemblyResource.ResourceNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItem">
            <summary>
            Holds a callback delegate and the state for that delegate.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.IHasWorkItemPriority">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.IHasWorkItemPriority.WorkItemPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._callback">
            <summary>
            Callback delegate for the callback.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._state">
            <summary>
            State with which to call the callback delegate.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._callerContext">
            <summary>
            Stores the caller's context
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._result">
            <summary>
            Holds the result of the mehtod
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._exception">
            <summary>
            Hold the exception if the method threw it
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemState">
            <summary>
            Hold the state of the work item
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemCompleted">
            <summary>
            A ManualResetEvent to indicate that the result is ready
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemCompletedRefCount">
            <summary>
            A reference count to the _workItemCompleted. 
            When it reaches to zero _workItemCompleted is Closed
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemResult">
            <summary>
            Represents the result state of the work item
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemInfo">
            <summary>
            Work item info
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._canceledWorkItemsGroup">
            <summary>
            A reference to an object that indicates whatever the 
            WorkItemsGroup has been canceled
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._canceledSmartThreadPool">
            <summary>
            A reference to an object that indicates whatever the 
            SmartThreadPool has been canceled
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._workItemsGroup">
            <summary>
            The work item group this work item belong to.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._executingThread">
            <summary>
            The thread that executes this workitem.
            This field is available for the period when the work item is executed, before and after it is null.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._expirationTime">
            <summary>
            The absulote time when the work item will be timeout
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._waitingOnQueueStopwatch">
            <summary>
            Stores how long the work item waited on the stp queue
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem._processingStopwatch">
            <summary>
            Stores how much time it took the work item to execute after it went out of the queue
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.#ctor(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Initialize the callback holding object.
            </summary>
            <param name="workItemsGroup">The workItemGroup of the workitem</param>
            <param name="workItemInfo">The WorkItemInfo of te workitem</param>
            <param name="callback">Callback delegate for the callback.</param>
            <param name="state">State with which to call the callback delegate.</param>
            
            We assume that the WorkItem object is created within the thread
            that meant to run the callback
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.StartingWorkItem">
            <summary>
            Change the state of the work item to in progress if it wasn't canceled.
            </summary>
            <returns>
            Return true on success or false in case the work item was canceled.
            If the work item needs to run a post execute then the method will return true.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.Execute">
            <summary>
            Execute the work item and the post execute
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.ExecuteWorkItem">
            <summary>
            Execute the work item
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.PostExecute">
            <summary>
            Runs the post execute callback
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.SetResult(System.Object,System.Exception)">
            <summary>
            Set the result of the work item to return
            </summary>
            <param name="result">The result of the work item</param>
            <param name="exception">The exception that was throw while the workitem executed, null
            if there was no exception.</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.GetWorkItemResult">
            <summary>
            Returns the work item result
            </summary>
            <returns>The work item result</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in waitableResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.GetWaitHandles(KudyStudio.Utility.Threading.IWaitableResult[],System.Threading.WaitHandle[])">
            <summary>
            Fill an array of wait handles with the work items wait handles.
            </summary>
            <param name="waitableResults">An array of work item results</param>
            <param name="waitHandles">An array of wait handles to fill</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.ReleaseWaitHandles(KudyStudio.Utility.Threading.IWaitableResult[])">
            <summary>
            Release the work items' wait handles
            </summary>
            <param name="waitableResults">An array of work item results</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.SetWorkItemState(KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemState)">
            <summary>
            Sets the work item's state
            </summary>
            <param name="workItemState">The state to set the work item to</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.SignalComplete(System.Boolean)">
            <summary>
            Signals that work item has been completed or canceled
            </summary>
            <param name="canceled">Indicates that the work item has been canceled</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.Cancel(System.Boolean)">
            <summary>
            Cancel the work item if it didn't start running yet.
            </summary>
            <returns>Returns true on success or false if the work item is in progress or already completed</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits for the result, timeout, or cancel.
            In case of error the method throws and exception
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits for the result, timeout, or cancel.
            In case of error the e argument is filled with the exception
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.GetWaitHandle">
            <summary>
            A wait handle to wait for completion, cancel, or timeout 
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItem.DisposeOfState">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.Internal.WorkItem._workItemStartedEvent">
            <summary>
            Called when the WorkItem starts
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.Internal.WorkItem._workItemCompletedEvent">
            <summary>
            Called when the WorkItem completes
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.WaitingTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.ProcessTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.IsCompleted">
            <summary>
            Returns true when the work item has completed or canceled
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.IsCanceled">
            <summary>
            Returns true when the work item has canceled
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemPriority">
            <summary>
            Returns the priority of the work item
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.IWorkItemResult">
            <summary>
            IWorkItemResult interface.
            Created when a WorkItemCallback work item is queued.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.IWorkItemResult`1">
            <summary>
            Created when a <see cref="M:Func`1"/> work item is queued.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.IWaitableResult">
            <summary>
            The common interface of IWorkItemResult and <see cref="T:IWorkItemResult`1"/>
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWaitableResult.GetWorkItemResult">
            <summary>
            This method intent is for internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWaitableResult.GetWorkItemResultT``1">
            <summary>
            This method intent is for internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits.
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds, or -1 for infinite</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the blocking if needed</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits.
            </summary>
            <param name="e">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <param name="millisecondsTimeout"></param>
            <param name="exitContext"></param>
            <param name="e">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <param name="exitContext"></param>
            <param name="e">Filled with the exception if one was thrown</param>
            <param name="timeout"></param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds, or -1 for infinite</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the blocking if needed</param>
            <param name="e">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <returns>The result of the work item</returns>
            <param name="cancelWaitHandle"></param>
            <param name="e">Filled with the exception if one was thrown</param>
            <param name="timeout"></param>
            <param name="exitContext"></param>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.Cancel">
            <summary>
            Same as Cancel(false).
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IWorkItemResult`1.Cancel(System.Boolean)">
            <summary>
            Cancel the work item execution.
            If the work item is in the queue then it won't execute
            If the work item is completed, it will remain completed
            If the work item is in progress then the user can check the SmartThreadPool.IsWorkItemCanceled
              property to check if the work item has been cancelled. If the abortExecution is set to true then
              the Smart Thread Pool will send an AbortException to the running thread to stop the execution 
              of the work item. When an in progress work item is canceled its GetResult will throw WorkItemCancelException.
            If the work item is already cancelled it will remain cancelled
            </summary>
            <param name="abortExecution">When true send an AbortException to the executing thread.</param>
            <returns>Returns true if the work item was not completed, otherwise false.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.IsCanceled">
            <summary>
            Gets an indication whether the asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.State">
            <summary>
            Gets the user-defined object that contains context data 
            for the work item method.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.WorkItemPriority">
            <summary>
            Get the work item's priority
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.Result">
            <summary>
            Return the result, same as GetResult()
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.IWorkItemResult`1.Exception">
            <summary>
            Returns the exception if occured otherwise returns null.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.IInternalWaitableResult.GetWorkItemResult">
            <summary>
            This method is intent for internal use.
            </summary>   
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemResult._workItem">
            <summary>
            A back reference to the work item
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemResult.Result">
            <summary>
            Return the result, same as GetResult()
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemResult.Exception">
            <summary>
            Returns the exception if occured otherwise returns null.
            This value is valid only after the work item completed,
            before that it is always null.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItem.WorkItemState">
            <summary>
            Indicates the state of the work item in the thread pool
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.Config.ClientConfigElement">
            <summary>
            Represents a configuration element for <see cref="T:MemcachedClient"/>. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.Name">
            <summary>
            Gets the Name of <see cref="T:MemcachedClient"/> configuration.
            The value is <c>default</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.KeyPrefix">
            <summary>
            Gets the KeyPrefix of <see cref="T:MemcachedClient"/> configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.EnableCompression">
            <summary>
            Gets the EnableCompression of <see cref="T:MemcachedClient"/> configuration.
            The value is <c>true</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.CompressionThreshold">
            <summary>
            Gets the CompressionThreshold of <see cref="T:MemcachedClient"/> configuration.
            The value is <c>10240</c>(10KB) by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.Servers">
            <summary>
            Gets the Servers of <see cref="T:MemcachedClient"/> configuration.
            The value is an empty list by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ClientConfigElement.SocketPool">
            <summary>
            Gets the SocketPool of <see cref="T:MemcachedClient"/> configuration.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.Config.ServerConfigElement">
            <summary>
            Represents a configuration element that contains a Memcached node address. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ServerConfigElement.Address">
            <summary>
            Gets the Address of the server configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ServerConfigElement.Port">
            <summary>
            Gets the Port of the server configuration.
            The value is <c>11211</c> by default and must in range [0,65535].
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.ServerConfigElement.EndPoint">
            <summary>
            Gets the <see cref="T:System.Net.IPEndPoint"/> representation of this instance.
            </summary>
        </member>
        <member name="T:KudyStudio.Config.KudyConfigSectionChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigSectionChangedEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigSectionChangedEventArgs.#ctor(KudyStudio.Config.KudyConfigSection)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSectionChangedEventArgs.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.StartableTrigger">
            <summary>
            Generalization of all triggers that have a start time.
            </summary>
            <remarks>StartableTrigger serves as a base class for triggers with a
            start time, but it has little use to clients.</remarks>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.Trigger">
            <summary>
            Trigger is a generalization of all the concrete trigger classes, and any actual
            Trigger object is one of those types.  When included in the TriggerList of a
            Task, a Trigger determines when a scheduled task will be run.
            </summary>
            <remarks>
            <para>
            Create a concrete trigger for a specific start condition and then call TriggerList.Add
            to include it in a task's TriggerList.</para>
            <para>
            A Trigger that is not yet in a Task's TriggerList is said to be unbound and it holds
            no resources (i.e. COM interfaces).  Once it is added to a TriggerList, it is bound and
            holds a COM interface that is only released when the Trigger is removed from the list or
            the corresponding Task is closed.</para>  
            <para>
            A Trigger that is already bound cannot be added to a TriggerList.  To copy a Trigger from
            one list to another, use <see cref="M:KudyStudio.Utility.TaskScheduler.Trigger.Clone"/> to create an unbound copy and then add the
            copy to the new list.  To move a Trigger from one list to another, use <see cref="M:KudyStudio.Utility.TaskScheduler.TriggerList.Remove(KudyStudio.Utility.TaskScheduler.Trigger)"/>
            to extract the Trigger from the first list before adding it to the second.</para>
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.#ctor">
            <summary>
            Internal base constructor for an unbound Trigger.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor which initializes itself from
            from an ITaskTrigger interface.
            </summary>
            <param name="iTrigger">Instance of ITaskTrigger from system task scheduler.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.Clone">
            <summary>
            Clone returns an unbound copy of the Trigger object.  It can be use
            on either bound or unbound original.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.CreateTrigger(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Creates a new, bound Trigger object from an ITaskTrigger interface.  The type of the
            concrete object created is determined by the type of ITaskTrigger.
            </summary>
            <param name="iTaskTrigger">Instance of ITaskTrigger.</param>
            <returns>One of the concrete classes derived from Trigger.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException">Unable to recognize trigger type.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.SyncTrigger">
            <summary>
            When a bound Trigger is changed, the corresponding trigger in the system
            Task Scheduler is updated to stay in sync with the local structure.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.Bind(KudyStudio.Utility.TaskScheduler.Trigger)">
            <summary>
            Bind a Trigger to the same interface the argument trigger is bound to.  
            </summary>
            <param name="trigger">A bound Trigger. </param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.Bind(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Bind a Trigger object to an ITaskTrigger interface.  This causes the Trigger to
            sync itself with the interface and remain in sync whenever it is modified in the future.
            If the Trigger is already bound, an ArgumentException is thrown.
            </summary>
            <param name="iTaskTrigger">An interface representing a trigger in Task Scheduler.</param>
            <exception cref="T:System.ArgumentException">Attempt to bind and already bound trigger.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.Unbind">
            <summary>
            Break the connection between this Trigger and the system Task Scheduler.  This
            releases COM resources used in bound Triggers.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.ToString">
            <summary>
            Gets a string, supplied by the WindowsTask Scheduler, of a bound Trigger. 
            For an unbound trigger, returns "Unbound Trigger".
            </summary>
            <returns>String representation of the trigger.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.Equals(System.Object)">
            <summary>
            Determines if two triggers are internally equal.  Does not consider whether
            the Triggers are bound or not.
            </summary>
            <param name="obj">Value of trigger to compare.</param>
            <returns>true if triggers are equivalent.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Trigger.GetHashCode">
            <summary>
            Gets a hash code for the current trigger.  A Trigger has the same hash
            code whether it is bound or not.
            </summary>
            <returns>Hash code value.</returns>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.Bound">
            <summary>
            Get whether the Trigger is currently bound
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.BeginDate">
            <summary>
            Gets or sets the beginning year, month, and day for the trigger.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.HasEndDate">
            <summary>
            Gets or sets indication that the task uses an EndDate.  Returns true if a value has been
            set for the EndDate property.  Set can only be used to turn indication off.  
            </summary>
            <exception cref="T:System.ArgumentException">Has EndDate becomes true only by setting the EndDate
            property.</exception>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.EndDate">
            <summary>
            Gets or sets the ending year, month, and day for the trigger.  After a value has been set
            with EndDate, HasEndDate becomes true.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.DurationMinutes">
            <summary>
            Gets or sets the number of minutes after the trigger fires that it remains active.  Used
            in conjunction with <see cref="P:KudyStudio.Utility.TaskScheduler.Trigger.IntervalMinutes"/> to run a task repeatedly for a period of time.
            For example, if you want to start a task at 8:00 A.M. repeatedly restart it until 5:00 P.M.,
            there would be 540 minutes (9 hours) in the duration.
            Can also be used to terminate a task that is running when the DurationMinutes expire.  Use
            <see cref="P:KudyStudio.Utility.TaskScheduler.Trigger.KillAtDurationEnd"/> to specify that task should be terminated at that time.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Setting must be greater than or equal
            to the IntervalMinutes setting.</exception>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.IntervalMinutes">
            <summary>
            Gets or sets the number of minutes between executions for a task that is to be run repeatedly.
            Repetition continues until the interval specified in <see cref="P:KudyStudio.Utility.TaskScheduler.Trigger.DurationMinutes"/> expires.
            IntervalMinutes are counted from the start of the previous execution.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Setting must be less than
            to the DurationMinutes setting.</exception>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.KillAtDurationEnd">
            <summary>
            Gets or sets whether task will be killed (terminated) when DurationMinutes expires. 
            See <see cref="P:KudyStudio.Utility.TaskScheduler.Trigger.DurationMinutes"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Trigger.Disabled">
            <summary>
            Gets or sets whether trigger is disabled.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.Trigger.TaskTriggerFlags">
            <summary>
            Flags for triggers
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.StartableTrigger.#ctor">
            <summary>
            Internal constructor, same as base.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.StartableTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor from ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from system Task Scheduler.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.StartableTrigger.SetStartTime(System.UInt16,System.UInt16)">
            <summary>
            Sets the start time of the trigger.
            </summary>
            <param name="hour">Hour of the day that the trigger will fire.</param>
            <param name="minute">Minute of the hour.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The hour is not between 0 and 23 or the minute is not between 0 and 59.</exception>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.StartableTrigger.StartHour">
            <summary>
            Gets or sets hour of the day that trigger will fire (24 hour clock).
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.StartableTrigger.StartMinute">
            <summary>
            Gets or sets minute of the hour (specified in <see cref="P:KudyStudio.Utility.TaskScheduler.StartableTrigger.StartHour"/>) that trigger will fire.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.Extensions">
            <summary>
            Contains the JSON schema extension methods.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.Extensions.IsValid(KudyStudio.Utility.Json.Linq.JToken,KudyStudio.Utility.Json.Schema.JsonSchema)">
            <summary>
            Determines whether the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> is valid.
            </summary>
            <param name="source">The source <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.Extensions.Validate(KudyStudio.Utility.Json.Linq.JToken,KudyStudio.Utility.Json.Schema.JsonSchema)">
            <summary>
            Validates the specified <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="source">The source <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.Extensions.Validate(KudyStudio.Utility.Json.Linq.JToken,KudyStudio.Utility.Json.Schema.JsonSchema,KudyStudio.Utility.Json.Schema.ValidationEventHandler)">
            <summary>
            Validates the specified <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <param name="source">The source <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
            <param name="validationEventHandler">The validation event handler.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.MemberSerialization">
            <summary>
            Specifies the member serialization options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.MemberSerialization.OptOut">
            <summary>
            All members are serialized by default. Members can be excluded using the <see cref="T:KudyStudio.Utility.Json.JsonIgnoreAttribute"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.MemberSerialization.OptIn">
            <summary>
            Only members must be marked with the <see cref="T:KudyStudio.Utility.Json.JsonPropertyAttribute"/> are serialized.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.DefaultValueHandling">
            <summary>
            Specifies default value handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.DefaultValueHandling.Include">
            <summary>
            Include default values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.DefaultValueHandling.Ignore">
            <summary>
            Ignore default values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.RegexConverter">
            <summary>
            Converts a <see cref="T:System.Text.RegularExpressions.Regex"/> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.RegexConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.RegexConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.RegexConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from the ISO 8601 date format (e.g. 2008-04-12T12:53Z).
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter.DateTimeStyles">
            <summary>
            Gets or sets the date time styles used when converting a date to and from JSON.
            </summary>
            <value>The date time styles used when converting a date to and from JSON.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when converting a date to and from JSON.
            </summary>
            <value>The date time format used when converting a date to and from JSON.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Converters.IsoDateTimeConverter.Culture">
            <summary>
            Gets or sets the culture used when converting a date to and from JSON.
            </summary>
            <value>The culture used when converting a date to and from JSON.</value>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.Config.WcfModuleFrameworkConfigElement">
            <summary>
            Represents a configuration element for module framework. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.Config.WcfModuleFrameworkConfigElement.HostType">
            <summary>
            Gets the HostType of WCF module framework configuration.
            The value is <c>KudyStudio.Frameworks.WcfModuleFramework.ModuleHost, KudyStudio</c> by default.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline">
            <summary>
            CallHandlerPipeline.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.#ctor(System.Object)">
            <summary>
            Creates CallHandlerPipeline.
            </summary>
            <param name="target">target.</param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.#ctor(System.Collections.Generic.IList{KudyStudio.Frameworks.AopFramework.ICallHandler},System.Object)">
            <summary>
            Creates CallHandlerPipeline.
            </summary>
            <param name="callHandlers">callHandlers.</param>
            <param name="target">target.</param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.Invoke(KudyStudio.Frameworks.AopFramework.InvocationContext)">
            <summary>
            Invoke the call handler and the target instane one by one.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.Sort">
            <summary>
            Sort all of the call handler based on Orderinal.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.Combine(KudyStudio.Frameworks.AopFramework.CallHandlerPipeline)">
            <summary>
            Comine a new <see cref="T:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline"/> object.
            </summary>
            <param name="pipeline">The <see cref="T:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline"/> object to combine.</param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.Combine(System.Collections.Generic.IList{KudyStudio.Frameworks.AopFramework.ICallHandler})">
            <summary>
            Combine a new IList object.
            </summary>
            <param name="callHandlers">The IList object to combine.</param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline.Add(KudyStudio.Frameworks.AopFramework.ICallHandler)">
            <summary>
            Add a new <see cref="T:KudyStudio.Frameworks.AopFramework.ICallHandler"/> object to the call handler pipeline.
            </summary>
            <param name="callHandler">The <see cref="T:KudyStudio.Frameworks.AopFramework.ICallHandler"/> object to add.</param>
            <returns>The <see cref="T:KudyStudio.Frameworks.AopFramework.ICallHandler"/> object to add.</returns>
        </member>
        <member name="T:KudyStudio.ImageUtil">
            <summary>
            An image helper class to generate or save thumbnail/water images.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.ImageUtil.GetImageFormat(System.String)">
            <summary>
            Gets the <see cref="T:System.Drawing.Imaging.ImageFormat"/> from a specified file name.
            The supported file extensions are jpg, jpeg, gif, png, bmp, ico, by default it returns 
            System.Drawing.Imaging.ImageFormat.Jpeg.
            </summary>
            <param name="fileName">A file name.</param>
            <returns>The <see cref="T:System.Drawing.Imaging.ImageFormat"/> associated with the file name.</returns>
        </member>
        <member name="M:KudyStudio.ImageUtil.GetImageCodecInfo(System.String)">
            <summary>
            Gets the <see cref="T:System.Drawing.Imaging.ImageCodecInfo"/> from a specified file name.
            If the ImageCodecInfo is not found, it returns null.
            </summary>
            <param name="fileName">A file name.</param>
            <returns>
            The <see cref="T:System.Drawing.Imaging.ImageCodecInfo"/> associated with the file name 
            or null if the ImageCodecInfo is not found.
            </returns>
        </member>
        <member name="M:KudyStudio.ImageUtil.GetQualityEncoderParameters(System.Int32)">
            <summary>
            Gets the quality <see cref="T:System.Drawing.Imaging.EncoderParameters"/> using the specified quality.
            The quality must in range [1, 100].
            </summary>
            <param name="quality">The quality must in range [1, 100].</param>
            <returns>
            The <see cref="T:System.Drawing.Imaging.EncoderParameters"/> associated with the specified quality.
            </returns>
        </member>
        <member name="M:KudyStudio.ImageUtil.ResizeImage(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Resize the size of image by the max width and height.
            </summary>
            <param name="size">The original size.</param>
            <param name="maxSize">The max size to resize by.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> resized.</returns>
        </member>
        <member name="M:KudyStudio.ImageUtil.ResizeImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resize the size of image by the max width and height.
            </summary>
            <param name="width">The original width.</param>
            <param name="height">The original height.</param>
            <param name="maxWidth">The max width to resize by.</param>
            <param name="maxHeight">The max height to resize by.</param>
            <returns>The <see cref="T:System.Drawing.Size"/> resized.</returns>
        </member>
        <member name="T:KudyStudio.KeywordFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordFormatter.ToEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordFormatter.ToIterantStar">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordFormatter.Format(System.String)">
            <summary>
            
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFormatter.CreateConstFormatter(System.Char)">
            <summary>
            
            </summary>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFormatter.CreateConstFormatter(System.String)">
            <summary>
            
            </summary>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFormatter.CreateIterantCharFormatter(System.Char)">
            <summary>
            
            </summary>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.KeywordFormatter.ConstFormatter">
            <summary>
            A keyword formatter that just returns the const string.
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordFormatter.IterantCharFormatter">
            <summary>
            A keyword formatter that replaces the keyword to the value indicated by 
            a specified Unicode character repeated it's length number of times.
            </summary>
        </member>
        <member name="T:KudyStudio.FileConfigMonitor">
            <summary>
            The config monitors.
            </summary>
        </member>
        <member name="F:KudyStudio.FileConfigMonitor.None">
            <summary>
            Don't use monitor.
            </summary>
        </member>
        <member name="F:KudyStudio.FileConfigMonitor.Timer">
            <summary>
            Using timer monitor.
            </summary>
        </member>
        <member name="F:KudyStudio.FileConfigMonitor.FileWatcher">
            <summary>
            Using file watcher monitor.
            </summary>
        </member>
        <member name="F:KudyStudio.FileConfigMonitor.CacheDependency">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.RewritingModule">
            <summary>
            This class extends <see cref="T:System.Web.IHttpModule"/> to handle url rewriting.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewritingModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the RewritingModule for handling request.
            </summary>
            <param name="context">A System.Web.HttpApplication instance.</param>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewritingModule.Dispose">
            <summary>
            Disposes the RewritingModule.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewDataDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.#ctor(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.SetModel(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Eval(System.String)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary.Eval(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewContext.#ctor(KudyStudio.Web.Mtv.ModeContext,KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="viewData"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewContext.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.HtmlButtonType">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlButtonType.Button">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlButtonType.Submit">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlButtonType.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.MtvParameter.AreaKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.MtvParameter.ModeKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.MtvParameter.ActionKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.MtvParameter.AreaValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.MtvParameter.ModeValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.MtvParameter.ActionValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.PagingColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingColor.Gray">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingColor.Green">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingColor.Yellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingColor.Blue">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ResourceXml">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceXml.ServerOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceXml.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceXml.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.CacheExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CacheExtensions.Substitute(KudyStudio.Web.Mtv.HtmlHelper,System.Func{System.String})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CacheExtensions.Substitute(KudyStudio.Web.Mtv.HtmlHelper,System.Web.HttpResponseSubstitutionCallback)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer">
            <summary>
            SmtpServer.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.DefaultPort">
            <summary>
            The default port of SMTP server. The value is 25.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.GmailPort">
            <summary>
            The port of gmail SMTP server. The value is 587.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.DefaultSslPort">
            <summary>
            The default ssl port of SMTP server. The value is 443.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.DefaultTimeout">
            <summary>
            The default timeout of SMTP server. The value is 100,000 (100 seconds).
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.Host">
            <summary>
            Gets or sets the name or IP address of the host used for SMTP transactions.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.Port">
            <summary>
            Gets or sets the port used for SMTP transactions. The default value is 25.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.UserName">
            <summary>
            Gets or sets the user name associated with the credentials.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.Password">
            <summary>
            Gets or sets the password for the user name associated with the credentials.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.Timeout">
            <summary>
            Gets or sets a value that specifies the amount of time after which a synchronous 
            Overload:SmtpClient.Send call times out. The default value is 100,000 (100 seconds).
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpServer.EnableSsl">
            <summary>
            Specify whether the System.Net.Mail.SmtpClient uses Secure Sockets Layer 
            (SSL) to encrypt the connection. The default is false.
            </summary>
        </member>
        <member name="T:KudyStudio.Config.KudyConfigSectionHandler">
            <summary>
            Handles the access to certain configuration sections. 
            It is for configuring KudyStudio from configuration file and getting the current KudyStudio configuration.
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigSectionHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration section handler.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="P:KudyStudio.Config.KudyConfigSectionHandler.Configuration">
            <summary>
            Gets the current KudyStudio configuration.
            </summary>
        </member>
        <member name="E:KudyStudio.Config.KudyConfigSectionHandler.ConfigurationChanged">
            <summary>
            The event raised when the KudyStudio configuration changed.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.CssCompressor">
            <summary>
            Helper class to minify CSS source file.
            Modifycation is based on <see cref="T:JsCompressor"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressText(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressText(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressText(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationPath"></param>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressText(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationPath"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressFile(System.String)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressFile(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="destinationPath"></param>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CompressFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="destinationPath"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Compress">
            <summary>
            Copy the input to the output, deleting the characters which are 
            insignificant to CSS. Comments will be removed. Tabs will be 
            replaced with spaces. Carriage returns will be replaced with linefeeds.
            Most spaces and linefeeds will be removed.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Action(System.Int32)">
            <summary>
            Do something! What you do is determined by the argument:
            <para>1   Output A. Copy B to A. Get the next B.</para>
            <para>2   Copy B to A. Get the next B. (Delete A).</para>
            <para>3   Get the next B. (Delete B).</para>
            action treats a string as a single character. Wow!
            action recognizes a regular expression if it is preceded by ( or , or =.
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Next">
            <summary>
            Get the next character, excluding comments. Peek() is used to see 
            if a '/' is followed by a '/' or '*'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Peek">
            <summary>
            Get the next character without getting it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Get">
            <summary>
            Return the next character from stdin. Watch out for lookahead. If 
            the character is a control character, translate it to a space or linefeed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CssCompressor.CssCompressorImpl.Put(System.Int32)">
            <summary>
            Writes the char to stream.
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:KudyStudio.Data.SqlServerCeHelper">
            <summary>
            SqlServerCeHelper
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.ConnectSocketPool">
            <summary>
            The ConnectSocketPool encapsulates the list of ConnectSockets against one specific 
            <see cref="T:MemcachedNode"/>, and contains methods for acquiring or returning ConnectSockets.
            </summary>
        </member>
        <member name="T:KudyStudio.SyncDisposableObject">
            <summary>
            Disposable acts as a base class for deriving a disposable class. 
            Represents an implementation of the IDisposable interface.
            </summary>
            <remarks>
            Override Dispose(disposing) in derived classes. When this method is called, always 
            release unmanaged resources, and dispose of managed resources only if the 
            disposing parameter is true.
            </remarks>
        </member>
        <member name="M:KudyStudio.SyncDisposableObject.Finalize">
            <summary>
            Finalizes current instance.
            </summary>
        </member>
        <member name="M:KudyStudio.SyncDisposableObject.Dispose">
            <summary>
            Performs application-defined tasks associated with disposing of resources.
            </summary>
        </member>
        <member name="M:KudyStudio.SyncDisposableObject.Dispose(System.Boolean)">
            <summary>
            Dispose resources. Override this method in derived classes. Unmanaged resources should always be released
            when this method is called. Managed resources may only be disposed of if disposing is true.
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="P:KudyStudio.SyncDisposableObject.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocketPool.#ctor(System.Net.IPEndPoint,KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement)">
            <summary>
            Creates an instance of <see cref="T:ConnectSocketPool"/>.
            </summary>
            <param name="endpoint">An IPEndPoint the socket establishes a connection to.</param>
            <param name="socketPoolConfig">The configuration for this <see cref="T:ConnectSocketPool"/> instance.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocketPool.Acquire">
            <summary>
            Acquires a new socket from the pool.
            </summary>
            <returns>
            A <see cref="T:ConnectSocket"/> instance which is connected to the memcached server, 
            or <c>null</c> if the pool is dead.
            </returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocketPool.Dispose(System.Boolean)">
            <summary>
            Releases all resources allocated by this instance
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.ConnectSocketPool.IsAlive">
            <summary>
            Gets whether or not the pool is alive.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.ConnectSocketPool.DeadTimeUtc">
            <summary>
            Gets the UTC time that is set when the pool is dead.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedClientException">
            <summary>
            The exception that is thrown when an error occures 
            in the <see cref="T:KudyStudio.Caching.Memcached.MemcachedClient"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedClientException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedClientException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedClientException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedClientException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.Config.MemcachedConfigElement">
            <summary>
            Represents a configuration element for KudyStudio.Caching.Memcached namespace.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.MemcachedConfigElement.Default">
            <summary>
            Gets the name for the configuration used for <see cref="M:MemcachedClient.Fetch"/>.
            The value is <c>default</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.MemcachedConfigElement.Clients">
            <summary>
            Gets the Clients configuration list used for <see cref="M:MemcachedClient.Fetch(string)"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.RunOnceTrigger">
            <summary>
            Trigger that fires once only.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.RunOnceTrigger.#ctor(System.DateTime)">
            <summary>
            Create a RunOnceTrigger that fires when specified.
            </summary>
            <param name="runDateTime">Date and time to fire.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.RunOnceTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from system Task Scheduler.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.IReferenceResolver">
            <summary>
            Used to resolve references when serializing and deserializing JSON by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IReferenceResolver.ResolveReference(System.String)">
            <summary>
            Resolves a reference to its object.
            </summary>
            <param name="reference">The reference to resolve.</param>
            <returns>The object that</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IReferenceResolver.GetReference(System.Object)">
            <summary>
            Gets the reference for the sepecified object.
            </summary>
            <param name="value">The object to get a reference for.</param>
            <returns>The reference to the object.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IReferenceResolver.IsReferenced(System.Object)">
            <summary>
            Determines whether the specified object is referenced.
            </summary>
            <param name="value">The object to test for a reference.</param>
            <returns>
            	<c>true</c> if the specified object is referenced; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IReferenceResolver.AddReference(System.String,System.Object)">
            <summary>
            Adds a reference to the specified object.
            </summary>
            <param name="reference">The reference.</param>
            <param name="value">The object to reference.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.DynamicValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using dynamic methods.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DynamicValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.DynamicValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DynamicValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DynamicValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JTokenReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonReader"/> class with the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>true if the next token was read successfully; false if there are no more tokens to read.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.Skip">
            <summary>
            Skips the children of the current token.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.SetToken(KudyStudio.Utility.Json.JsonToken)">
            <summary>
            Sets the current token.
            </summary>
            <param name="newToken">The new token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.SetToken(KudyStudio.Utility.Json.JsonToken,System.Object)">
            <summary>
            Sets the current token and value.
            </summary>
            <param name="newToken">The new token.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.SetStateBasedOnCurrent">
            <summary>
            Sets the state based on current token type.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonReader.Close">
            <summary>
            Changes the <see cref="T:KudyStudio.Utility.Json.JsonReader.State"/> to Closed. 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.CurrentState">
            <summary>
            Gets the current reader state.
            </summary>
            <value>The current reader state.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.TokenType">
            <summary>
            Gets the type of the current Json token. 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.Value">
            <summary>
            Gets the text value of the current Json token.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.ValueType">
            <summary>
            Gets The Common Language Runtime (CLR) type for the current Json token.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonReader.State">
            <summary>
            Specifies the state of the reader.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Start">
            <summary>
            The Read method has not been called.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Complete">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Property">
            <summary>
            Reader is at a property.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.ObjectStart">
            <summary>
            Reader is at the start of an object.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Object">
            <summary>
            Reader is in an object.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.ArrayStart">
            <summary>
            Reader is at the start of an array.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Array">
            <summary>
            Reader is in an array.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Closed">
            <summary>
            The Close method has been called.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.PostValue">
            <summary>
            Reader has just read a value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.ConstructorStart">
            <summary>
            Reader is at the start of a constructor.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Constructor">
            <summary>
            Reader in a constructor.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Error">
            <summary>
            An error occurred that prevents the read operation from continuing.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonReader.State.Finished">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenReader.#ctor(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JTokenReader"/> class.
            </summary>
            <param name="token">The token to read from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="T:KudyStudio.JsonUtil">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.IModuleHostFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModuleHostFactory.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostFactory.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleRemovedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleRemovedEventArgs.#ctor(KudyStudio.Frameworks.WcfModuleFramework.WorkingModule)">
            <summary>
            
            </summary>
            <param name="module"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleRemovedEventArgs.Module">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.HandlerAttribute">
            <summary>
            The base class of custom call handler attribute.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.HandlerAttribute.CreateCallHandler">
            <summary>
            All of the sub class must implement this method to create <see cref="T:KudyStudio.Frameworks.AopFramework.ICallHandler"/> object.
            </summary>
            <returns>The created <see cref="T:KudyStudio.Frameworks.AopFramework.ICallHandler"/> object</returns>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.HandlerAttribute.Ordinal">
            <summary>
            A <see cref="T:System.Int32"/> value indicating the position where the call handler is placed in the pipeline.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.HandlerAttribute.ReturnIfError">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether to directly return if encountering an error.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.CacheValueCreator`1">
            <summary>
            Encapsulates a method that has no parameters and returns a value of the type 
            specified by the TResult parameter.
            </summary>
            <typeparam name="TValue">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:KudyStudio.Caching.CacheValueCreator`2">
            <summary>
            Encapsulates a method that has one parameter and returns a value of the type 
            specified by the TValue parameter.
            </summary>
            <typeparam name="TKey">The type of the parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TValue">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="key">The parameter of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:KudyStudio.Config.XmlKudyConfigSection">
            <summary>
            A class for configuring KudyStudio through an XML configuration file.
            </summary>
        </member>
        <member name="M:KudyStudio.Config.XmlKudyConfigSection.#ctor(System.String)">
            <summary>
            Constructs a new instance of <see cref="T:KudyStudio.Config.XmlKudyConfigSection"/>
            class and reads the configuration from the specified config file.
            </summary>
            <param name="configPath">Configuration file to be read.</param>
        </member>
        <member name="M:KudyStudio.Config.XmlKudyConfigSection.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            Constructs a new instance of <see cref="T:KudyStudio.Config.XmlKudyConfigSection"/>
            class and reads the configuration from the specified XML element.
            </summary>
            <param name="configElement"><see cref="T:System.Xml.XmlElement"/> containing the configuration section.</param>
            <param name="configPath">Name of the file that contains the element (to be used as a base for including other files).</param>
        </member>
        <member name="M:KudyStudio.Config.XmlKudyConfigSection.Reload">
            <summary>
            Re-reads the original configuration file and returns the new <see cref="T:KudyStudio.Config.KudyConfigSection"/> object.
            </summary>
            <returns>The new <see cref="T:KudyStudio.Config.XmlKudyConfigSection"/> object.</returns>
        </member>
        <member name="P:KudyStudio.Config.XmlKudyConfigSection.ConfigPath">
            <summary>
            Gets the file path which should be watched for changes by KudyStudio.
            If the <c>autoReload</c> attribute is not set it returns null.
            </summary>
        </member>
        <member name="T:KudyStudio.WatermarkPosition">
            <summary>
            Specifies the positions used in <see cref="T:KudyStudio.WatermarkImageHelper"/> to generate or 
            save watermark images.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.TopLeft">
            <summary>
            Top-Left.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.TopCenter">
            <summary>
            Top-Center.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.TopRight">
            <summary>
            Top-Right.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.MiddleLeft">
            <summary>
            Middle-Left.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.MiddleCenter">
            <summary>
            Middle-Center.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.MiddleRight">
            <summary>
            Middle-Right.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.BottomLeft">
            <summary>
            Bottom-Left.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.BottomCenter">
            <summary>
            Bottom-Center.
            </summary>
        </member>
        <member name="F:KudyStudio.WatermarkPosition.BottomRight">
            <summary>
            Bottom-Right.
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordOrder.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordOrder.Ascending">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordOrder.Descending">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordOrder.ByFrequencyAscending">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.KeywordOrder.ByFrequencyDescending">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Keyword">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Keyword.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:KudyStudio.Keyword.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="frequency"></param>
        </member>
        <member name="M:KudyStudio.Keyword.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Keyword.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Keyword.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Keyword.op_Implicit(KudyStudio.Keyword)~System.String">
            <summary>
            
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Keyword.op_Implicit(System.String)~KudyStudio.Keyword">
            <summary>
            
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Keyword.Text">
            <summary>
            Gets the text value keyword.
            </summary>
        </member>
        <member name="P:KudyStudio.Keyword.Frequency">
            <summary>
            Gets or sets the frequency of keyword.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.RewriteRuleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRuleCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRuleCollection.#ctor(System.Collections.Generic.IEnumerable{KudyStudio.Web.UrlRewriting.RewriteRule})">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRuleCollection.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewUserControl">
            <summary>
            This user control class is used in <see cref="T:MtvPage"/> or any 
            subclasses of <see cref="T:MtvPage"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.IViewDataContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.IViewDataContainer.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewUserControl.EnsureViewData">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewUserControl.SetViewData(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewUserControl.RenderView(KudyStudio.Web.Mtv.ViewContext,System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="viewContext"></param>
            <param name="writer"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.ViewPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.ViewContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl.ViewDataKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.OnPreInit(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetViewData(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.RenderView(KudyStudio.Web.Mtv.ViewContext,System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="viewContext"></param>
            <param name="writer"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetContentType(System.String)">
            <summary>
            
            </summary>
            <param name="contentType"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetTitle(System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetKeywords(System.String)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetDescription(System.String)">
            <summary>
            
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage.SetRefresh(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="seconds"></param>
            <param name="url"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.MasterPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.ViewContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.CookieHelper">
            <summary>
            A helper class to manage to http cookies for convenience.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.CookieHelper.Infinite">
            <summary>
            Represents a value which indicates that an cookie should never expire.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.CookieHelper.InBrowserProcess">
            <summary>
            Represents a value which indicates that an cookie should expire when the browser is closed.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String)">
            <summary>
            Sets a cookie value by name and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, domain and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, domain, path and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.TimeSpan)">
            <summary>
            Sets a cookie value using the name and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.DateTime)">
            <summary>
            Sets a cookie value using the name and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.TimeSpan,System.String)">
            <summary>
            Sets a cookie value using the name, expiration and domain.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.DateTime,System.String)">
            <summary>
            Sets a cookie value using the name, expiration and domain.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.TimeSpan,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, expiration, domain and path.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.DateTime,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, expiration, domain and path.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.TimeSpan,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a cookie value using the name, expiration, domain, path, secure and http only.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="secure">The secure of the cookie. The default value is false.</param>
            <param name="httpOnly">The httpOnly of the cookie. The default value is false.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Set(System.String,System.String,System.DateTime,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a cookie value using the name, expiration, domain, path, secure and http only.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="secure">The secure of the cookie. The default value is false.</param>
            <param name="httpOnly">The httpOnly of the cookie. The default value is false.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Sets a cookie value by name and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Sets a cookie value using the name, domain and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, domain, path and <see cref="F:CookieHelper.InBrowserProcess"/>, the cookie expires 
            when web browser process ends.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.TimeSpan)">
            <summary>
            Sets a cookie value using the name and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime)">
            <summary>
            Sets a cookie value using the name and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.TimeSpan,System.String)">
            <summary>
            Sets a cookie value using the name, domain and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime,System.String)">
            <summary>
            Sets a cookie value using the name, domain and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.TimeSpan,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, domain, path and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime,System.String,System.String)">
            <summary>
            Sets a cookie value using the name, domain, path and expiration.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.TimeSpan,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a cookie value using the name, expiration, domain, path, secure and http only.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="validFor">The interval in which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="secure">The secure of the cookie. The default value is false.</param>
            <param name="httpOnly">The httpOnly of the cookie. The default value is false.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.SetValues(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a cookie value using the name, expiration, domain, path, secure and http only.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="values">The values of the cookie.</param>
            <param name="expiresAt">The time at which the cookie expires and is removed from the browser.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="secure">The secure of the cookie. The default value is false.</param>
            <param name="httpOnly">The httpOnly of the cookie. The default value is false.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Get(System.String)">
            <summary>
            Gets a cookie by name.
            </summary>
            <param name="name">The name of cookie.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.GetValues(System.String)">
            <summary>
            Gets a cookie by name.
            </summary>
            <param name="name">The name of cookie.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Remove(System.String)">
            <summary>
            Removes a cookie by name.
            </summary>
            <param name="name">The name of cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Remove(System.String,System.String)">
            <summary>
            Removes a cookie by name and domain.
            </summary>
            <param name="name">The name of cookie.</param>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Clear">
            <summary>
            Removes all cookie items.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.CookieHelper.Clear(System.String)">
            <summary>
            Removes all cookie items by the specified domain.
            </summary>
            <param name="domain">The domain of the cookie.</param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.CssExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CssExtensions.Css(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CssExtensions.Css(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="media"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CssExtensions.Css(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="media"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.CssExtensions.Css(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="media"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.HtmlInputType">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlInputType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlInputType.Password">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlInputType.Hidden">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlInputType.Radio">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HtmlInputType.CheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.SingleEntryGate">
            <summary>
            used to synchronize access to a single-use consumable resource
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.SingleEntryGate.TryEnter">
            <summary>
            returns true if this is the first call to TryEnter(), false otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TimingTask">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.Task">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.Task.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.Task.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.Task.EnableThreadPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.TimingTask.UpdateLastExecuted">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.TimingTask.Seconds">
            <summary>
            The scheduled event interval time in minutes. If TimeOfDay has a value >= 0, Minutes will be ignored. 
            This values should not be less than the Timer interval.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.TimingTask.TimeOfDay">
            <summary>
            Absolute time in mintues from midnight. Can be used to assure event is only 
            executed once per-day and as close to the specified
            time as possible. Example times: 0 = midnight, 27 = 12:27 am, 720 = Noon
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.TimingTask.ShouldExecute">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Crypto">
            <summary>
            This class provides common cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeHashToHexString(System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns hexadecimal result.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeHashToBase64String(System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns a
            base64-encoded result.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeHash(System.Byte[],System.String)">
            <summary>
            Generates a hash for the given plain text value.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifyHashInHexString(System.String,System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherText">
            Hash value produced by ComputeHashToHexString function.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifyHashInBase64String(System.String,System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherText">
            Hash value produced by ComputeHashToBase64String function.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifyHash(System.Byte[],System.String,System.Byte[])">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value. Plain text is hashed with the same salt value as the original hash.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherText">
            Hash value produced by ComputeHash function.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSalt(System.Int32)">
            <summary>
            Creates salt for encryption by the specified salt size.
            </summary>
            <param name="saltSize">The salt size(must in range [1,32]).</param>
            <returns>The salt bytes.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSaltToHexString(System.Int32)">
            <summary>
            Creates salt for encryption by the specified salt size 
            and returns hexadecimal result.
            </summary>
            <param name="saltSize">The salt size(must in range [1,32]).</param>
            <returns>The salt bytes formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSaltToBase64String(System.Int32)">
            <summary>
            Creates salt for encryption by the specified salt size 
            and returns a base64-encoded result.
            </summary>
            <param name="saltSize">The salt size(must in range [1,32]).</param>
            <returns>The salt bytes formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSalt(System.Int32,System.Int32)">
            <summary>
            Creates salt for encryption by the specified min salt size and max salt size.
            </summary>
            <param name="minSaltSize">The min salt size(must in range [1,32]).</param>
            <param name="maxSaltSize">The max salt size(must in range [1,32] and not less than min salt size).</param>
            <returns>The salt bytes.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSaltToHexString(System.Int32,System.Int32)">
            <summary>
            Creates salt for encryption by the specified min salt size and max salt size 
            and returns hexadecimal result.
            </summary>
            <param name="minSaltSize">The min salt size(must in range [1,32]).</param>
            <param name="maxSaltSize">The max salt size(must in range [1,32] and not less than min salt size).</param>
            <returns>The salt bytes formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.CreateSaltToBase64String(System.Int32,System.Int32)">
            <summary>
            Creates salt for encryption by the specified min salt size and max salt size 
            and returns a base64-encoded result.
            </summary>
            <param name="minSaltSize">The min salt size(must in range [1,32]).</param>
            <param name="maxSaltSize">The max salt size(must in range [1,32] and not less than min salt size).</param>
            <returns>The salt bytes formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHash(System.Byte[],System.String)">
            <summary>
            Generates a hash for the given plain text value. 
            Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>Hash value in bytes.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHash(System.Byte[],System.String,System.Byte[])">
            <summary>
            Generates a hash for the given plain text value. 
            Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="salt">
            Salt bytes. This parameter can be null, in which case a random salt
            value will be generated.
            </param>
            <returns>Hash value in bytes.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHashToHexString(System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns a
            hexadecimal result. Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHashToHexString(System.String,System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns a
            hexadecimal result. Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="salt">
            Salt bytes. This parameter can be null, in which case a random salt
            value will be generated.
            </param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHashToBase64String(System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns a
            base64-encoded result. Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.ComputeSaltedHashToBase64String(System.String,System.String,System.String)">
            <summary>
            Generates a hash for the given plain text value and returns a
            base64-encoded result. Before the hash is computed, a random salt
            is generated and appended to the plain text. This salt is stored at
            the end of the hash value, so it can be used later for hash
            verification.
            </summary>
            <param name="plainText">
            Plaintext value to be hashed. The function does not check whether
            this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
            "SHA256", "SHA384", and "SHA512" (if any other value is specified
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="salt">
            Salt bytes. This parameter can be null, in which case a random salt
            value will be generated.
            </param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifySaltedHashInHexString(System.String,System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value. Plain text is hashed with the same salt value as the original hash.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherTextInHexString">
            Hash value produced by ComputeSaltedHashToHexString function. This value
            includes the original salt appended to it.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifySaltedHashInBase64String(System.String,System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value. Plain text is hashed with the same salt value as the original hash.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherTextInBase64String">
            Hash value produced by ComputeSaltedHashToBase64String function. This value
            includes the original salt appended to it.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.VerifySaltedHash(System.Byte[],System.String,System.Byte[])">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value. Plain text is hashed with the same salt value as the original hash.
            </summary>
            <param name="plainText">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="algorithm">
            Name of the hash algorithm. Allowed values are: "MD5", "SHA1", 
            "SHA256", "SHA384", and "SHA512" (if any other value is specified,
            MD5 hashing algorithm will be used). This value is case-insensitive.
            </param>
            <param name="cipherText">
            Hash value produced by ComputeSaltedHash function. This value
            includes the original salt appended to it.
            </param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.TripleDES">
            <summary>
            This class provides TripleDES cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.TripleDES.Key">
            <summary>
            The default key for TripleDES.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.TripleDES.IV">
            <summary>
            The default vector for TripleDES.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToHexString(System.String)">
            <summary>
            TripleDES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToBase64String(System.String)">
            <summary>
            TripleDES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            TripleDES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            TripleDES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            TripleDES Encrypt.
            </summary>
            <param name="plainText">Clear data value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in byte array format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromHexString(System.String)">
            <summary>
            TripleDES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromBase64String(System.String)">
            <summary>
            TripleDES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            TripleDES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            TripleDES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            TripleDES Decrypt.
            </summary>
            <param name="cipherText">HashedBytes value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Encrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Decrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.TripleDES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Crypto.DataProtection">
            <summary>
            Encrypts and decrypts data using DPAPI(Data Protection API) functions.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.DataProtection.DefaultStore">
            <summary>
            It is reasonable to set default key type to user key.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToHexString(KudyStudio.Crypto.DataProtection.Store,System.String)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToHexString(KudyStudio.Crypto.DataProtection.Store,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="plainText"></param>
            <param name="entropy"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToHexString(KudyStudio.Crypto.DataProtection.Store,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="plainText"></param>
            <param name="entropy"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToBase64String(KudyStudio.Crypto.DataProtection.Store,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value. This function does not specify data description
            and additional entropy.
            </summary>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">Plaintext data to be encrypted.</param>
            <returns>Encrypted value in a base64-encoded format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToBase64String(KudyStudio.Crypto.DataProtection.Store,System.String,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value. This function does not specify data description.
            </summary>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">Plaintext data to be encrypted.</param>
            <param name="entropy">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <returns>Encrypted value in a base64-encoded format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.EncryptToBase64String(KudyStudio.Crypto.DataProtection.Store,System.String,System.String,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value.
            </summary>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">Plaintext data to be encrypted.</param>
            <param name="entropy">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <param name="description">
            Optional description of data to be encrypted. If this value is
            specified, it will be stored along with encrypted data and
            returned as a separate value during decryption.
            </param>
            <returns>Encrypted value in a base64-encoded format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.Encrypt(KudyStudio.Crypto.DataProtection.Store,System.Byte[],System.Byte[],System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt an array of
            plaintext bytes.
            </summary>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">Plaintext data to be encrypted.</param>
            <param name="entropy">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <param name="description">
            Optional description of data to be encrypted. If this value is
            specified, it will be stored along with encrypted data and
            returned as a separate value during decryption.
            </param>
            <returns>Encrypted value.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromHexString(KudyStudio.Crypto.DataProtection.Store,System.String)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromHexString(KudyStudio.Crypto.DataProtection.Store,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="cipherText"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromHexString(KudyStudio.Crypto.DataProtection.Store,System.String,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="store"></param>
            <param name="cipherText"></param>
            <param name="entropy"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromBase64String(KudyStudio.Crypto.DataProtection.Store,System.String)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            This function does not use additional entropy and does not
            return data description.
            </summary>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="cipherText">Encrypted data formatted as a base64-encoded string.</param>
            <returns>Decrypted data returned as a UTF-8 string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromBase64String(KudyStudio.Crypto.DataProtection.Store,System.String,System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            This function does not use additional entropy.
            </summary>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="cipherText">Encrypted data formatted as a base64-encoded string.</param>
            <param name="description">Returned description of data specified during encryption.</param>
            <returns>Decrypted data returned as a UTF-8 string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.DecryptFromBase64String(KudyStudio.Crypto.DataProtection.Store,System.String,System.String,System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            </summary>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="cipherText">Encrypted data formatted as a base64-encoded string.</param>
            <param name="entropy">Optional entropy, which is required if it was specified during encryption.</param>
            <param name="description">Returned description of data specified during encryption.</param>
            <returns>Decrypted data returned as a UTF-8 string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DataProtection.Decrypt(KudyStudio.Crypto.DataProtection.Store,System.Byte[],System.Byte[],System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            </summary>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
            <param name="store">
            Defines type of encryption store to use. When user store is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine store will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="cipherText">Encrypted data.</param>
            <param name="entropy">Optional entropy, which is required if it was specified during encryption.</param>
            <param name="description">Returned description of data specified during encryption.</param>
            <returns>Decrypted data bytes.</returns>
        </member>
        <member name="T:KudyStudio.Crypto.DataProtection.Store">
            <summary>
            Flag indicating the type of store. DPAPI terminology refers to 
            key types as user store or machine store.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.DataProtection.Store.User">
            <summary>
            DPAPI terminology refers to key types as user store.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.DataProtection.Store.Machine">
            <summary>
            DPAPI terminology refers to key types as machine store.
            </summary>
        </member>
        <member name="T:KudyStudio.Crypto.SHA512">
            <summary>
            This class provides SHA512 cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToHexString(System.String)">
            <summary>
            Computes the SHA512 hash value for the specified string to hexadecimal string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToHexString(System.Byte[])">
            <summary>
            Computes the SHA512 hash value for the specified byte array to hexadecimal string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToHexString(System.IO.Stream)">
            <summary>
            Computes the SHA512 hash value for the specified System.IO.Stream object to hexadecimal string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToBase64String(System.String)">
            <summary>
            Computes the SHA512 hash value for the specified string to base64 string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToBase64String(System.Byte[])">
            <summary>
            Computes the SHA512 hash value for the specified byte array to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.EncryptToBase64String(System.IO.Stream)">
            <summary>
            Computes the SHA512 hash value for the specified System.IO.Stream object to base64 string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.Encrypt(System.String)">
            <summary>
            Computes the SHA512 hash value for the specified string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.Encrypt(System.Byte[])">
            <summary>
            Computes the SHA512 hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.Encrypt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.Encrypt(System.IO.Stream)">
            <summary>
            Computes the hash value for the specified System.IO.Stream object.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.VerifyInHexString(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToHexString function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA512.VerifyInBase64String(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToBase64String function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.Password">
            <summary>
            This class can generate random passwords, which do not include ambiguous 
            characters, such as I, l, and 1. The generated password will be made of
            7-bit ASCII symbols. Every four characters will include one lower case
            character, one upper case character, one number, and one special symbol
            (such as '%') in a random order. The password will always start with an
            alpha-numeric character; it will not start with a special symbol (we do
            this because some back-end systems do not like certain special
            characters in the first position).
            </summary>
            <remarks>
            Generates random password, which complies with the strong password 
            rules and does not contain ambiguous characters.
            </remarks>
        </member>
        <member name="M:KudyStudio.Crypto.Password.Generate">
            <summary>
            Generates a random password.
            </summary>
            <returns>Randomly generated password.</returns>
            <remarks>
            The length of the generated password will be determined at
            random. It will be no shorter than the minimum default and
            no longer than maximum default.
            </remarks>
        </member>
        <member name="M:KudyStudio.Crypto.Password.Generate(System.Int32)">
            <summary>
            Generates a random password of the exact length.
            </summary>
            <param name="length">Exact password length.</param>
            <returns>Randomly generated password.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.Password.Generate(System.Int32,System.Int32)">
            <summary>
            Generates a random password.
            </summary>
            <param name="minLength">Minimum password length.</param>
            <param name="maxLength">Maximum password length.</param>
            <returns>Randomly generated password.</returns>
            <remarks>
            The length of the generated password will be determined at
            random and it will fall with the range determined by the
            function parameters.
            </remarks>
        </member>
        <member name="T:KudyStudio.Crypto.SHA1">
            <summary>
            This class provides SHA1 cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToHexString(System.String)">
            <summary>
            Computes the SHA1 hash value for the specified string to hexadecimal string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToHexString(System.Byte[])">
            <summary>
            Computes the SHA1 hash value for the specified byte array to hexadecimal string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToHexString(System.IO.Stream)">
            <summary>
            Computes the SHA1 hash value for the specified System.IO.Stream object to hexadecimal string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToBase64String(System.String)">
            <summary>
            Computes the SHA1 hash value for the specified string to base64 string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToBase64String(System.Byte[])">
            <summary>
            Computes the SHA1 hash value for the specified byte array to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.EncryptToBase64String(System.IO.Stream)">
            <summary>
            Computes the SHA1 hash value for the specified System.IO.Stream object to base64 string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.Encrypt(System.String)">
            <summary>
            Computes the SHA1 hash value for the specified string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.Encrypt(System.Byte[])">
            <summary>
            Computes the SHA1 hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.Encrypt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.Encrypt(System.IO.Stream)">
            <summary>
            Computes the hash value for the specified System.IO.Stream object.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.VerifyInHexString(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToHexString function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA1.VerifyInBase64String(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToBase64String function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.SHA256">
            <summary>
            This class provides SHA256 cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToHexString(System.String)">
            <summary>
            Computes the SHA256 hash value for the specified string to hexadecimal string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToHexString(System.Byte[])">
            <summary>
            Computes the SHA256 hash value for the specified byte array to hexadecimal string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToHexString(System.IO.Stream)">
            <summary>
            Computes the SHA256 hash value for the specified System.IO.Stream object to hexadecimal string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToBase64String(System.String)">
            <summary>
            Computes the SHA256 hash value for the specified string to base64 string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToBase64String(System.Byte[])">
            <summary>
            Computes the SHA256 hash value for the specified byte array to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.EncryptToBase64String(System.IO.Stream)">
            <summary>
            Computes the SHA256 hash value for the specified System.IO.Stream object to base64 string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.Encrypt(System.String)">
            <summary>
            Computes the SHA256 hash value for the specified string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.Encrypt(System.Byte[])">
            <summary>
            Computes the SHA256 hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.Encrypt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.Encrypt(System.IO.Stream)">
            <summary>
            Computes the hash value for the specified System.IO.Stream object.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.VerifyInHexString(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToHexString function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA256.VerifyInBase64String(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToBase64String function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.DES">
            <summary>
            This class provides DES cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.DES.Key">
            <summary>
            The default key for DES.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.DES.IV">
            <summary>
            The default vector for DES.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToHexString(System.String)">
            <summary>
            DES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToBase64String(System.String)">
            <summary>
            DES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            DES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            DES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES Encrypt.
            </summary>
            <param name="plainText">Clear data value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in byte array format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromHexString(System.String)">
            <summary>
            DES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromBase64String(System.String)">
            <summary>
            DES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            DES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            DES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES Decrypt.
            </summary>
            <param name="cipherText">HashedBytes value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Encrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Decrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.DES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Crypto.MD5">
            <summary>
            This class provides MD5 cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToHexString(System.String)">
            <summary>
            Computes the MD5 hash value for the specified string to hexadecimal string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToHexString(System.Byte[])">
            <summary>
            Computes the MD5 hash value for the specified byte array to hexadecimal string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToHexString(System.IO.Stream)">
            <summary>
            Computes the MD5 hash value for the specified System.IO.Stream object to hexadecimal string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToBase64String(System.String)">
            <summary>
            Computes the MD5 hash value for the specified string to base64 string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToBase64String(System.Byte[])">
            <summary>
            Computes the MD5 hash value for the specified byte array to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.EncryptToBase64String(System.IO.Stream)">
            <summary>
            Computes the MD5 hash value for the specified System.IO.Stream object to base64 string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.Encrypt(System.String)">
            <summary>
            Computes the MD5 hash value for the specified string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.Encrypt(System.Byte[])">
            <summary>
            Computes the MD5 hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.Encrypt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.Encrypt(System.IO.Stream)">
            <summary>
            Computes the hash value for the specified System.IO.Stream object.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.VerifyInHexString(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToHexString function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.MD5.VerifyInBase64String(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToBase64String function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.SHA384">
            <summary>
            This class provides SHA384 cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToHexString(System.String)">
            <summary>
            Computes the SHA384 hash value for the specified string to hexadecimal string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToHexString(System.Byte[])">
            <summary>
            Computes the SHA384 hash value for the specified byte array to hexadecimal string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToHexString(System.IO.Stream)">
            <summary>
            Computes the SHA384 hash value for the specified System.IO.Stream object to hexadecimal string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a hexadecimal string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToBase64String(System.String)">
            <summary>
            Computes the SHA384 hash value for the specified string to base64 string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToBase64String(System.Byte[])">
            <summary>
            Computes the SHA384 hash value for the specified byte array to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.EncryptToBase64String(System.IO.Stream)">
            <summary>
            Computes the SHA384 hash value for the specified System.IO.Stream object to base64 string.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>Hash value formatted as a base64-encoded string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.Encrypt(System.String)">
            <summary>
            Computes the SHA384 hash value for the specified string using Encoding.UTF8.
            </summary>
            <param name="input">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.Encrypt(System.Byte[])">
            <summary>
            Computes the SHA384 hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.Encrypt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.Encrypt(System.IO.Stream)">
            <summary>
            Computes the hash value for the specified System.IO.Stream object.
            </summary>
            <param name="inputStream">The input to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.VerifyInHexString(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToHexString function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="M:KudyStudio.Crypto.SHA384.VerifyInBase64String(System.String,System.String)">
            <summary>
            Compares a hash of the specified plain text value to a given hash
            value.
            </summary>
            <param name="inputString">
            Plain text to be verified against the specified hash. The function
            does not check whether this parameter is null.
            </param>
            <param name="hashedString">Hash value produced by EncryptToBase64String function.</param>
            <returns>
            If computed hash mathes the specified hash the function the return
            value is true; otherwise, the function returns false.
            </returns>
        </member>
        <member name="T:KudyStudio.Crypto.AES">
            <summary>
            This class provides AES cryptography services.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.AES.Key">
            <summary>
            The default key for AES.
            </summary>
        </member>
        <member name="F:KudyStudio.Crypto.AES.IV">
            <summary>
            The default vector for AES.
            </summary>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToHexString(System.String)">
            <summary>
            AES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToBase64String(System.String)">
            <summary>
            AES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            AES EncryptToHexString.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in hex format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            AES EncryptToBase64String.
            </summary>
            <param name="plainText">Plaintext value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in Base64String format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            AES Encrypt.
            </summary>
            <param name="plainText">Clear data value to be encrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The encrypted string in byte array format.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromHexString(System.String)">
            <summary>
            AES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromBase64String(System.String)">
            <summary>
            AES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromHexString(System.String,System.Byte[],System.Byte[])">
            <summary>
            AES DecryptFromHexString.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[])">
            <summary>
            AES DecryptFromBase64String.
            </summary>
            <param name="cipherText">HashedText value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            AES Decrypt.
            </summary>
            <param name="cipherText">HashedBytes value to be decrypted.</param>
            <param name="key">The secret key to use for the symmetric algorithm.</param>
            <param name="vector">The initialization vector to use for the symmetric algorithm.</param>
            <returns>The decrypted string.</returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Encrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromHexString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromBase64String(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Decrypt(System.Byte[],System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="saltSize"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.EncryptToBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromHexString(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.DecryptFromBase64String(System.String,System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Crypto.AES.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="password"></param>
            <param name="salt"></param>
            <param name="algorithm"></param>
            <param name="iterations"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Config.WebConfigSectionElement">
            <summary>
            Represents a configuration element for KudyStudio.Data namespace.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Config.WebConfigSectionElement.Mtv">
            <summary>
            Gets the configuration of MTV web framework.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Config.WebConfigSectionElement.UrlRewriting">
            <summary>
            Gets the configuration of <see cref="P:KudyStudio.Web.Config.WebConfigSectionElement.UrlRewriting"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Config.RegisterConfigElement">
            <summary>
            Represents a configuration element for MTV registration. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.RegisterConfigElement.ModeAssemblies">
            <summary>
            Gets the ModeAssemblies of MTV registration configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.RegisterConfigElement.DefaultModeName">
            <summary>
            Gets the DefaultModeName of MTV registration configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.RegisterConfigElement.DefaultActionName">
            <summary>
            Gets the DefaultActionName of MTV registration configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Interop.CoTaskMem.LPWStrToString(System.IntPtr)">
            <summary>
            Many COM methods in ITask, ITaskTrigger, and ITaskScheduler return an LPWStr which should
            should be freed after the string is accessed.  The "out" pointer could be converted  
            to a string during marshalling, but then the memory wouldn't be freed.  Instead
            these entries return an IntPtr--call this method to convert it to a string.
            </summary>
            <param name="lpwstr">A pointer to a unicode string in COM Task Memory, invalid at exit.</param>
            <returns>String value.</returns>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.ServerStats">
            <summary>
            Represents the statistics of memcached node(s) and helps to get values by key.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ServerStats.#ctor(System.Collections.Generic.IDictionary{System.Net.IPEndPoint,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Creates a new instance of <see cref="T:ServerStats"/>.
            </summary>
            <param name="results">
            The stats results got from <see cref="M:MemcachedClient.Stats"/>.
            </param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ServerStats.GetStats(System.String)">
            <summary>
            Returns the stat value for a specific server. 
            The value is not converted but returned as the server returned it.
            </summary>
            <param name="server">The adress of the server.</param>
            <returns>The dictionary contains the stats or empty dictionary if not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ServerStats.GetStats(System.Net.IPEndPoint)">
            <summary>
            Returns the stat value for a specific server. 
            The value is not converted but returned as the server returned it.
            </summary>
            <param name="server">The <see cref="T:System.Net.IPEndPoint"/> of the server.</param>
            <returns>The dictionary contains the stats or empty dictionary if not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ServerStats.GetStatsValue(System.String,KudyStudio.Caching.Memcached.ServerStats.Key)">
            <summary>
            Gets a stat value for the specified server.
            </summary>
            <param name="server">The <see cref="T:System.Net.IPEndPoint"/> of the server.</param>
            <param name="key">The value of which <see cref="T:KudyStudio.Caching.Memcached.ServerStats.Key"/> to be returned</param>
            <returns>The value of the specified stats item or <c>string.Empty</c> if not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ServerStats.GetStatsValue(System.Net.IPEndPoint,KudyStudio.Caching.Memcached.ServerStats.Key)">
            <summary>
            Gets a stat value for the specified server.
            </summary>
            <param name="server">The adress of the server.</param>
            <param name="key">The value of which <see cref="T:KudyStudio.Caching.Memcached.ServerStats.Key"/> to be returned</param>
            <returns>The value of the specified stats item or <c>string.Empty</c> if not found.</returns>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.ServerStats.AllStats">
            <summary>
            Get all stats in this <see cref="T:ServerStats"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.ServerStats.Key">
            <summary>
            Represents all keys in the memcached stats.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Pid">
            <summary>
            Process id of this server process.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.UpTime">
            <summary>
            Number of seconds this server has been running.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Time">
            <summary>
            current UNIX time according to the server.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Version">
            <summary>
            Version string of this server.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.PointerSize">
            <summary>
            Default size of pointers on the host OS(generally 32 or 64).
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CurrConnections">
            <summary>
            Number of open connections.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.TotalConnections">
            <summary>
            Total number of connections opened since the server started running.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.ConnectionStructures">
            <summary>
            Number of connection structures allocated.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CmdGet">
            <summary>
            Cumulative number of retrieval requests.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CmdSet">
            <summary>
            Cumulative number of storage requests.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CmdFlush">
            <summary>
            CmdFlush
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.GetHits">
            <summary>
            Number of keys that have been requested and found present.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.GetMisses">
            <summary>
            Number of items that have been requested and not found.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.DeleteHits">
            <summary>
            DeleteHits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.DeleteMisses">
            <summary>
            DeleteMisses.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.IncrHits">
            <summary>
            IncrHits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.IncrMisses">
            <summary>
            IncrMisses.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.DecrHits">
            <summary>
            DecrHits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.DecrMisses">
            <summary>
            DecrMisses.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CasHits">
            <summary>
            CasHits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CasMisses">
            <summary>
            CasHits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CasBadVal">
            <summary>
            CasBadVal.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.AuthCmds">
            <summary>
            AuthCmds.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.AuthErrors">
            <summary>
            AuthErrors.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.BytesRead">
            <summary>
            Total number of bytes read by this server from network.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.BytesWritten">
            <summary>
            Total number of bytes sent by this server to network.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.LimitMaxBytes">
            <summary>
            Number of bytes this server is allowed to use for storage.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.AcceptingConns">
            <summary>
            LimitMaxBytes.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.ListenDisabledNum">
            <summary>
            ListenDisabledNum.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Threads">
            <summary>
            Number of worker threads requested.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.ConnYields">
            <summary>
            ConnYields.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Bytes">
            <summary>
            Current number of bytes used by this server to store items.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.CurrItems">
            <summary>
            Current number of items stored by the server.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.TotalItems">
            <summary>
            Total number of items stored by this server ever since it started.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ServerStats.Key.Evictions">
            <summary>
            Number of valid items removed from cache.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.IPlugIn">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.IPlugIn.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.IPlugIn.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.IPlugIn.Execute(System.Object[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugIn.Manifest">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugIn.ExtendedData">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInBase.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInBase.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInBase.Execute(System.Object[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInBase.Manifest">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInBase.ExtendedData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.ReflectionValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using reflection.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.ReflectionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.ReflectionValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.ReflectionValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.ReflectionValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JTokenWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.#ctor">
            <summary>
            Creates an instance of the <c>JsonWriter</c> class. 
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteEndObject">
            <summary>
            Writes the end of a Json object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteEndArray">
            <summary>
            Writes the end of an array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteEndConstructor">
            <summary>
            Writes the end constructor.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteEnd">
            <summary>
            Writes the end of the current Json object or array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteToken(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Writes the current <see cref="T:KudyStudio.Utility.Json.JsonReader"/> token.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read the token from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteEnd(KudyStudio.Utility.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON without changing the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.UInt32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.UInt64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Single})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Int16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.UInt16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Char})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Byte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.SByte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.Decimal})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.DateTime})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object"/> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text. 
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonWriter.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonWriter.WriteState">
            <summary>
            Gets the state of the writer.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonWriter.Formatting">
            <summary>
            Indicates how the output is formatted.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.#ctor(KudyStudio.Utility.Json.Linq.JContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JTokenWriter"/> class writing to the given <see cref="T:KudyStudio.Utility.Json.Linq.JContainer"/>.
            </summary>
            <param name="container">The container being written to.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JTokenWriter"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteEnd(KudyStudio.Utility.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JTokenWriter.Token">
            <summary>
            Gets the token being writen.
            </summary>
            <value>The token being writen.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JRaw">
            <summary>
            Represents a raw JSON string.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JValue">
            <summary>
            Represents a value in JSON (string, integer, date, etc).
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(KudyStudio.Utility.Json.Linq.JValue)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.CreateComment(System.String)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> comment with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> comment with the given value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.CreateString(System.String)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> string with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JValue"/> string with the given value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.Equals(KudyStudio.Utility.Json.Linq.JValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JValue.HasValues">
            <summary>
            Gets a value indicating whether this token has childen tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JValue.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JValue.Value">
            <summary>
            Gets or sets the underlying token value.
            </summary>
            <value>The underlying token value.</value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JRaw.#ctor(KudyStudio.Utility.Json.Linq.JRaw)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JRaw.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> class.
            </summary>
            <param name="rawJson">The raw json.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JRaw.Create(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Creates an instance of <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> with the content of the reader's current token.
            </summary>
            <param name="reader">The reader.</param>
            <returns>An instance of <see cref="T:KudyStudio.Utility.Json.Linq.JRaw"/> with the content of the reader's current token.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.Extensions">
            <summary>
            Contains the LINQ to JSON extension methods.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the ancestors of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the ancestors of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the descendants of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:KudyStudio.Utility.Json.Linq.JContainer"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the descendants of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Properties(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JObject})">
            <summary>
            Returns a collection of child properties of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> that contains the properties of every object in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of child values of every object in the source collection with the given key.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the values of every node in the source collection with the given key.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken})">
            <summary>
            Returns a collection of child values of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the values of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of converted child values of every object in the source collection with the given key.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection with the given key.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken})">
            <summary>
            Returns a collection of converted child values of every object in the source collection.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Value``1(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Value``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Children``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of child tokens of every array in the source collection.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the values of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.Children``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of converted child tokens of every array in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <typeparam name="T">The source collection type.</typeparam>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.AsJEnumerable(System.Collections.Generic.IEnumerable{KudyStudio.Utility.Json.Linq.JToken})">
            <summary>
            Returns the input typed as <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/>.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.Extensions.AsJEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the input typed as <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/>.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/>.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonSerializationException">
            <summary>
            The exception thrown when an error occurs during Json serialization or deserialization.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonSerializationException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonSerializationException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonSerializationException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:KudyStudio.BinaryUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.BinaryUtil.ConvertToHexString(System.Byte[])">
            <summary>
            Converts a byte array to hex string.
            </summary>
            <param name="bytes">Bytes to convert.</param>
            <returns>The converted hex string.</returns>
        </member>
        <member name="M:KudyStudio.BinaryUtil.ConvertFromHexString(System.String)">
            <summary>
            Converts a hex string to byte array.
            </summary>
            <param name="hexString">Hex string to convert.</param>
            <returns>The converted bytes.</returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleLoadFailedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleLoadFailedEventArgs.#ctor(System.Exception,System.IO.FileInfo)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="moduleFile"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleLoadFailedEventArgs.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleLoadFailedEventArgs.ModuleFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.RemotingRealProxy`1">
            <summary>
            RemotingRealProxy.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.RemotingRealProxy`1.#ctor(`0,System.Collections.Generic.IDictionary{System.Reflection.MemberInfo,KudyStudio.Frameworks.AopFramework.CallHandlerPipeline})">
            <summary>
            RemotingRealProxy.
            </summary>
            <param name="target">target.</param>
            <param name="callHandlerPipelines">callHandlerPipelines.</param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.RemotingRealProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            Invoke.
            </summary>
            <param name="message">message.</param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Caching.Config.CacheServiceConfigElement">
            <summary>
            Represents a configuration element for <see cref="T:CacheService"/>. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Config.CacheServiceConfigElement.Provider">
            <summary>
            Gets the Provider of CacheService configuration.
            The value is <c>CacheServiceProvider.WebCache</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Config.CacheServiceConfigElement.CustomProviderType">
            <summary>
            Gets the CustomProviderType of CacheService configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.CacheService">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Contains(System.String)">
            <summary>
            Checks whether the specified item in the cache.
            </summary>
            <param name="key">The identifier for the item to check.</param>
            <returns>True if the item was in the cache; false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Add(System.String,System.Object)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            The item does not expire unless it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            using an expiry time relative as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Add(System.String,System.Object,System.DateTime)">
            <summary>
            Adds an object into the cache only if the key does not already exist, 
            using an expiry time absolute as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Set(System.String,System.Object)">
            <summary>
            Sets an object into the cache unconditionally. The item does not expire unless 
            it is removed due memory pressure.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            Sets an object into the cache unconditionally using an expiry time relative as 
            a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The interval after the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Set(System.String,System.Object,System.DateTime)">
            <summary>
            Sets an object into the cache unconditionally using an expiry time absolute as 
            a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiration">The time when the item is invalidated in the cache.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Get``1(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <typeparam name="T">The type of the specified item from the cache.</typeparam>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>The retrieved item, or <c>null</c>/<c>default(T)</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Get(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>The retrieved item, or <c>null</c> if the key was not found.</returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves multiple items from the cache. This is recommended over repeated 
            calls to <see cref="M:Get"/>, since it is more efficient.
            </summary>
            <param name="keys">The list of identifiers for the items to retrieve.</param>
            <returns>a Dictionary holding all items indexed by their key.</returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{``0},System.TimeSpan)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{``0},System.DateTime)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.Object})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.Object},System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.Object},System.DateTime)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{System.String,``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{System.String,``0},System.TimeSpan)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting``1(System.String,KudyStudio.Caching.CacheValueCreator{System.String,``0},System.DateTime)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.String,System.Object},System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.AddOrGetExisting(System.String,KudyStudio.Caching.CacheValueCreator{System.String,System.Object},System.DateTime)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="valueCreator"></param>
            <param name="expiration"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Remove(System.String)">
            <summary>
            Removes the specified item immediately from the cache.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:KudyStudio.Caching.CacheService.Clear">
            <summary>
            Clears all items in the cache.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.CacheService.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.CacheService.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.FileConfigSerializer`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:KudyStudio.FileConfigSerializer`1.Xml">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.FileConfigSerializer`1.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.FileConfigSerializer`1.DeserializeFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.FileConfigSerializer`1.SerializeToFile(System.String,`0)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="config"></param>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.RewriteRule">
            <summary>
            The rewrite rule modle class.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRule.#ctor(KudyStudio.Web.UrlRewriting.Config.RuleConfigElement)">
            <summary>
            Initializes a new instance of <see cref="T:KudyStudio.Web.UrlRewriting.RewriteRule"/>.
            </summary>
            <param name="rule">An instance of class <see cref="T:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement"/></param>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRule.#ctor(KudyStudio.Web.UrlRewriting.RewriteMode,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mode"></param>
            <param name="virtualUrl"></param>
            <param name="destinationUrl"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRule.IsMatch(System.String)">
            <summary>
            Checks whether or not the url requested is matched.
            </summary>
            <param name="requestUrl">The url requested.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.RewriteRule.FormatRewriteUrl(System.String,System.String)">
            <summary>
            Formats the url to be rewrited with the querystring requested.
            </summary>
            <param name="urlToRewrite">The url to be rewrited.</param>
            <param name="requestQuerystring">The querystring requested.</param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.RewriteRule.Mode">
            <summary>
            Gets or sets the rewrite mode.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.RewriteRule.IgnoreCase">
            <summary>
            Gets or sets whether or not the rewrite is ignore-case.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.RewriteRule.VirtualUrl">
            <summary>
            Gets or sets the virtual url.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.RewriteRule.DestinationUrl">
            <summary>
            Gets or sets the destination url.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.UrlRewritingAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlRewritingAttribute.#ctor">
            <summary>
            the default pattern is <c>[\w-]+</c>
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.UrlRewritingAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.UrlRewritingAttribute.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.SendMailServer">
            <summary>
            发送邮件服务器类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SendMailServer.worker">
            <summary>
            后台线程。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SendMailServer.mailPool">
            <summary>
            发送邮件池。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SendMailServer.smtpSetting">
            <summary>
            Smtp设置信息。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.StartService">
            <summary>
            开始邮件发送服务。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.StopService">
            <summary>
            停止邮件发送服务。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.ResetMailPool">
            <summary>
            重置发送邮件池。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.BeginSendMail">
            <summary>
            开始发送邮件。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.SendMail(System.Object)">
            <summary>
            线程池委托，发送邮件。
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String,System.String,System.String)">
            <summary>
            添加单个地址的邮件，不提供抄送、密送与附件，优先级别：高，正文内容：html格式。
            </summary>
            <param name="to">收件人email地址</param>
            <param name="subject">主题</param>
            <param name="body">正文内容</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String,System.String,System.String,System.Net.Mail.MailPriority)">
            <summary>
            添加单个地址的邮件，不提供抄送、密送与附件，正文内容：html格式。
            </summary>
            <param name="to">收件人email地址</param>
            <param name="subject">主题</param>
            <param name="body">正文内容</param>
            <param name="priority">邮件优先级</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String,System.String,System.String,System.Boolean,System.Net.Mail.MailPriority)">
            <summary>
            添加单个地址的邮件，不提供抄送、密送与附件。
            </summary>
            <param name="to">收件人地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="isBodyHtml">邮件正文是否为Html格式</param>
            <param name="priority">邮件优先级</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Net.Mail.MailPriority)">
            <summary>
            添加单个地址的邮件。
            </summary>
            <param name="to">收件人地址</param>
            <param name="cc">抄送地址</param>
            <param name="bcc">密送地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="attachments">邮件附件</param>
            <param name="isBodyHtml">邮件正文是否为Html格式</param>
            <param name="priority">邮件优先级</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String[],System.String,System.String,System.Boolean,System.Net.Mail.MailPriority)">
            <summary>
            添加带多个收件人地址的邮件，不提供抄送、密送与附件。
            </summary>
            <param name="to">收件人地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="isBodyHtml">邮件正文是否为Html格式</param>
            <param name="priority">邮件优先级</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SendMailServer.AddMail(System.String[],System.String[],System.String[],System.String,System.String,System.String[],System.Boolean,System.Net.Mail.MailPriority)">
            <summary>
            添加带多个收件人地址的邮件。
            </summary>
            <param name="to">收件人地址</param>
            <param name="cc">抄送地址</param>
            <param name="bcc">密送地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="attachments">邮件附件</param>
            <param name="isBodyHtml">邮件正文是否为Html格式</param>
            <param name="priority">邮件优先级</param>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SendMailServer.MailPool">
            <summary>
            获取 发送邮件池。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SendMailServer.ServerStart">
            <summary>
            获取 服务器是否启动。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SendMailServer.SmtpSetting">
            <summary>
            获取或设置 Smtp设置信息。
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.MailInfo">
            <summary>
            邮件信息类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.to">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.cc">
            <summary>
            抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.bcc">
            <summary>
            密送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.attachments">
            <summary>
            邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.isBodyHtml">
            <summary>
            邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.priority">
            <summary>
            邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.token">
            <summary>
            唯一标识。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.isLock">
            <summary>
            邮件是否锁定。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.fails">
            <summary>
            发送失败次数。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailInfo.limitSendTime">
            <summary>
            限定发送时间。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailInfo.OnSendMail(KudyStudio.Utility.Net.Mail.SendMailEventArgs)">
            <summary>
            发送邮件时触发的事件。
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.To">
            <summary>
            获取或设置 收件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Cc">
            <summary>
            获取或设置 抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Bcc">
            <summary>
            获取或设置 密送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Subject">
            <summary>
            获取或设置 邮件主题。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Body">
            <summary>
            获取或设置 邮件正文。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Attachments">
            <summary>
            获取或设置 邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.IsBodyHtml">
            <summary>
            获取或设置 邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Priority">
            <summary>
            获取或设置 邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Token">
            <summary>
            获取 唯一标识。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.IsLock">
            <summary>
            获取或设置 邮件是否锁定。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.Fails">
            <summary>
            获取或设置 发送失败次数。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.LimitSendTime">
            <summary>
            获取或设置 限定发送时间。
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Net.Mail.MailInfo.SendMail">
            <summary>
            发送邮件事件。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailInfo.IsNeedToSend">
            <summary>
            获取 邮件是否需要发送。
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.ErrorInfo">
            <summary>
            错误信息类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.ErrorInfo.to">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.ErrorInfo.subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.ErrorInfo.body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.ErrorInfo.errorMessage">
            <summary>
            异常错误信息。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.ErrorInfo.abandonTime">
            <summary>
            放弃发送时间。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.ErrorInfo.To">
            <summary>
            获取或设置 收件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.ErrorInfo.Subject">
            <summary>
            获取或设置 邮件主题。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.ErrorInfo.Body">
            <summary>
            获取或设置 邮件正文。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.ErrorInfo.ErrorMessage">
            <summary>
            获取或设置 异常错误信息。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.ErrorInfo.AbandonTime">
            <summary>
            获取或设置 放弃发送时间。
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.FormMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.FormMethod.Get">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.FormMethod.Post">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.MailToExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="cc"></param>
            <param name="bcc"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MailToExtensions.MailTo(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="emailAddress"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="cc"></param>
            <param name="bcc"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.PagingAlign">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingAlign.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingAlign.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingAlign.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.JavascriptCompressor">
            <summary>
            Helper class to minify javascript source file.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressText(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressText(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressText(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationPath"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressText(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationPath"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressFile(System.String)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressFile(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="destinationPath"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.CompressFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
            <param name="destinationPath"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Compress">
            <summary>
            Copy the input to the output, deleting the characters which are 
            insignificant to JavaScript. Comments will be removed. Tabs will be 
            replaced with spaces. Carriage returns will be replaced with linefeeds.
            Most spaces and linefeeds will be removed.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Action(System.Int32)">
            <summary>
            Do something! What you do is determined by the argument:
            <para>1   Output A. Copy B to A. Get the next B.</para>
            <para>2   Copy B to A. Get the next B. (Delete A).</para>
            <para>3   Get the next B. (Delete B).</para>
            action treats a string as a single character. Wow!
            action recognizes a regular expression if it is preceded by ( or , or =.
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Next">
            <summary>
            Get the next character, excluding comments. Peek() is used to see 
            if a '/' is followed by a '/' or '*'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Peek">
            <summary>
            Get the next character without getting it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Get">
            <summary>
            Return the next character from stdin. Watch out for lookahead. If 
            the character is a control character, translate it to a space or linefeed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.Put(System.Int32)">
            <summary>
            Writes the char to stream.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:KudyStudio.Web.JavascriptCompressor.JavascriptCompressorImpl.IsAlphanum(System.Int32)">
            <summary>
            Return true if the character is a letter, digit, underscore,
            dollar sign, or non-ASCII character.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.InternetHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsConnected">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsNetworkLanAlive">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsNetworkWanAlive">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsNetworkAolAlive">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsDestinationAlive(System.String)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsHostAlive(System.String)">
            <summary>
            
            </summary>
            <param name="hostname"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsHostAlive(System.String,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="hostname"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.InternetHelper.IsHostAlive(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="hostname"></param>
            <param name="port"></param>
            <param name="millisecondsTimeout"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemInfo">
            <summary>
            Summary description for WorkItemInfo.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WorkItemInfo.#ctor(KudyStudio.Utility.Threading.WorkItemInfo)">
            <summary>
            
            </summary>
            <param name="workItemInfo"></param>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.UseCallerCallContext">
            <summary>
            Get/Set if to use the caller's security context
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.UseCallerHttpContext">
            <summary>
            Get/Set if to use the caller's HTTP context
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.DisposeOfStateObjects">
            <summary>
            Get/Set if to dispose of the state object of a work item
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.CallToPostExecute">
            <summary>
            Get/Set the run the post execute options
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.PostExecuteWorkItemCallback">
            <summary>
            Get/Set the post execute callback
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.WorkItemPriority">
            <summary>
            Get/Set the work item's priority
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WorkItemInfo.Timeout">
            <summary>
            Get/Set the work item's timout in milliseconds.
            This is a passive timout. When the timout expires the work item won't be actively aborted!
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.Scheduler">
            <summary>
            Deprecated.  For V1 compatibility only. 
            </summary>
            <remarks>
            <p>Scheduler is just a wrapper around the TaskList class.</p>
            <p><i>Provided for compatibility with version one of the library.  Use of Scheduler
            and TaskList will normally result in COM memory leaks.</i></p>
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Scheduler.#ctor">
            <summary>
            Creates instance of task scheduler on local machine
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Scheduler.#ctor(System.String)">
            <summary>
            Creates instance of task scheduler on remote machine
            </summary>
            <param name="computer">Name of remote machine</param>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Scheduler.Tasks">
            <summary>
            Gets collection of system tasks
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Scheduler.TargetComputer">
            <summary>
            Gets or sets name of target computer. Null or emptry string specifies local computer.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.ResultDataDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.ResultDataDictionary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.ResultDataDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.ExtendedDataDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.ExtendedDataDictionary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.ExtendedDataDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.ContainsWhiteSpace(System.String)">
            <summary>
            Determines whether the string contains white space.
            </summary>
            <param name="s">The string to test for white space.</param>
            <returns>
            	<c>true</c> if the string contains white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.IsWhiteSpace(System.String)">
            <summary>
            Determines whether the string is all white space. Empty string will return false.
            </summary>
            <param name="s">The string to test whether it is all white space.</param>
            <returns>
            	<c>true</c> if the string is all white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.EnsureEndsWith(System.String,System.String)">
            <summary>
            Ensures the target string ends with the specified string.
            </summary>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
            <returns>The target string with the value string at the end.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.IfNotNullOrEmpty(System.String,System.Action{System.String})">
            <summary>
            Perform an action if the string is not null or empty.
            </summary>
            <param name="value">The value.</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.Indent(System.String,System.Int32)">
            <summary>
            Indents the specified string.
            </summary>
            <param name="s">The string to indent.</param>
            <param name="indentation">The number of characters to indent by.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.Indent(System.String,System.Int32,System.Char)">
            <summary>
            Indents the specified string.
            </summary>
            <param name="s">The string to indent.</param>
            <param name="indentation">The number of characters to indent by.</param>
            <param name="indentChar">The indent character.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.NumberLines(System.String)">
            <summary>
            Numbers the lines.
            </summary>
            <param name="s">The string to number.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.StringUtils.NullEmptyString(System.String)">
            <summary>
            Nulls an empty string.
            </summary>
            <param name="s">The string.</param>
            <returns>Null if the string was null, otherwise the string unchanged.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.TypeNameHandling">
            <summary>
            Specifies type name handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.TypeNameHandling.None">
            <summary>
            Do not include the .NET type name when serializing types.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.TypeNameHandling.Objects">
            <summary>
            Include the .NET type name when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.TypeNameHandling.Arrays">
            <summary>
            Include the .NET type name when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.TypeNameHandling.Auto">
            <summary>
            Include the .NET type name when the type of the object being serialized is not the same as its declared type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.TypeNameHandling.All">
            <summary>
            Always include the .NET type name when serializing.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonSerializer">
            <summary>
            Serializes and deserializes objects into and from the JSON format.
            The <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> enables you to control how objects are encoded into JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Create(KudyStudio.Utility.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> instance using the specified <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.</param>
            <returns>A new <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> instance using the specified <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Populate(System.IO.TextReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> that contains the JSON structure to reader values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Populate(KudyStudio.Utility.Json.JsonReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that contains the JSON structure to reader values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Deserialize(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that contains the JSON structure to deserialize.</param>
            <returns>The <see cref="T:System.Object"/> being deserialized.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:System.IO.StringReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType"/> being deserialized.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Deserialize``1(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> containing the object.</param>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <returns>The instance of <typeparamref name="T"/> being deserialized.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Deserialize(KudyStudio.Utility.Json.JsonReader,System.Type)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType"/> being deserialized.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonSerializer.Serialize(KudyStudio.Utility.Json.JsonWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>. 
            </summary>
            <param name="jsonWriter">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
        </member>
        <member name="E:KudyStudio.Utility.Json.JsonSerializer.Error">
            <summary>
            Occurs when the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> errors during serialization and deserialization.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Serialization.IReferenceResolver"/> used by the serializer when resolving references.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.Binder">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> used by the serializer when resolving type names.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.ReferenceLoopHandling">
            <summary>
            Get or set how reference loops (e.g. a class referencing itself) is handled.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.MissingMemberHandling">
            <summary>
            Get or set how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during deserialization.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.NullValueHandling">
            <summary>
            Get or set how null values are handled during serialization and deserialization.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.DefaultValueHandling">
            <summary>
            Get or set how null default are handled during serialization and deserialization.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.Converters">
            <summary>
            Gets a collection <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> that will be used during serialization.
            </summary>
            <value>Collection <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> that will be used during serialization.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonSerializer.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext"/> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor">
            <summary>
            Represents a view of a <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.#ctor(KudyStudio.Utility.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"/> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"/> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"/> for this object.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"/> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"/> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"/> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.ComponentModel.JTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonToken">
            <summary>
            Specifies the type of Json token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.None">
            <summary>
            This is returned by the <see cref="T:KudyStudio.Utility.Json.JsonReader"/> if a <see cref="M:KudyStudio.Utility.Json.JsonReader.Read"/> method has not been called. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.StartObject">
            <summary>
            An object start token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.StartArray">
            <summary>
            An array start token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.StartConstructor">
            <summary>
            A constructor start token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.PropertyName">
            <summary>
            An object property name.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Raw">
            <summary>
            Raw JSON.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Integer">
            <summary>
            An interger.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Float">
            <summary>
            A float.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Null">
            <summary>
            A null token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Undefined">
            <summary>
            An undefined token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.EndObject">
            <summary>
            An object end token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.EndArray">
            <summary>
            An array end token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.EndConstructor">
            <summary>
            A constructor end token.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Date">
            <summary>
            A Date.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonToken.Bytes">
            <summary>
            Byte data.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.JsonDateTimeSerializationMode">
            <summary>
            Specifies whether a DateTime object represents a local time, a Coordinated Universal Time (UTC), or is not specified as either local time or UTC.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Converters.JsonDateTimeSerializationMode.Local">
            <summary>
            The time represented is local time.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Converters.JsonDateTimeSerializationMode.Utc">
            <summary>
            The time represented is UTC.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Converters.JsonDateTimeSerializationMode.Unspecified">
            <summary>
            The time represented is not specified as either local time or Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Converters.JsonDateTimeSerializationMode.RoundtripKind">
            <summary>
            Preserves the DateTimeKind field of a date when a DateTime object is converted to a string and the string is then converted back to a DateTime object.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Bson.BsonObjectId">
            <summary>
            Represents a BSON Oid (object id).
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Bson.BsonObjectId"/> class.
            </summary>
            <param name="value">The Oid value.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Bson.BsonObjectId.Value">
            <summary>
            Gets or sets the value of the Oid.
            </summary>
            <value>The value of the Oid.</value>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.IModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.OnLoad">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.OnUnload">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.Open">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.Close">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.CreateNetTcpBinding">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModule.CreateEndpointBehaviors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModule.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModule.ServiceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModule.ServiceDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModule.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModule.ChannelVerifier">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModule.Opening">
            <summary>
            Occurs when a communication object transitions into the opening state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModule.Opened">
            <summary>
            Occurs when a communication object transitions into the opened state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModule.Closing">
            <summary>
            Occurs when a communication object transitions into the closing state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModule.Closed">
            <summary>
            Occurs when a communication object transitions into the closed state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModule.Faulted">
            <summary>
            Occurs when a communication object transitions into the faulted state.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3">
            <summary>
            
            </summary>
            <typeparam name="TContext"></typeparam>
            <typeparam name="TContract"></typeparam>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnLoad">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnUnload">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Open">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Close">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.CreateNetTcpBinding">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.CreateEndpointBehaviors">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnOpening(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnOpened(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnClosing(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnClosed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.OnFaulted(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.ServiceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.ServiceDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.ChannelVerifier">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Opening">
            <summary>
            Occurs when a communication object transitions into the opening state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Opened">
            <summary>
            Occurs when a communication object transitions into the opened state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Closing">
            <summary>
            Occurs when a communication object transitions into the closing state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Closed">
            <summary>
            Occurs when a communication object transitions into the closed state.
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleBase`3.Faulted">
            <summary>
            Occurs when a communication object transitions into the faulted state.
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordFilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordFilterResult.#ctor(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword})">
            <summary>
            
            </summary>
            <param name="result"></param>
            <param name="keywords"></param>
        </member>
        <member name="P:KudyStudio.KeywordFilterResult.Result">
            <summary>
            Gets the filtered text value.
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordFilterResult.Keywords">
            <summary>
            Gets the keywords found in the original string.
            </summary>
        </member>
        <member name="T:KudyStudio.SyncCache`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.SyncCache`2.Get(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncCache`2.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.SyncCache`2.CreateReadFreeCache(System.Func{`0,`1})">
            <summary>
            
            </summary>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncCache`2.CreateReadFreeCache(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="valueCreator"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncCache`2.CreateReadWriteCache(System.Func{`0,`1})">
            <summary>
            
            </summary>
            <param name="valueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncCache`2.CreateReadWriteCache(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="valueCreator"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SyncCache`2.ReadFreeCache.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UploadResult">
            <summary>
            Keeps informations of <see cref="T:KudyStudio.Web.FileUploader"/> or <see cref="T:KudyStudio.Web.ImageUploader"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UploadResult.#ctor">
            <summary>
            Creates an empty <see cref="T:KudyStudio.Web.UploadResult"/>.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.Success">
            <summary>
            Gets a bool value indicates whether upload is successfull.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.Status">
            <summary>
            Gets upload status.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FileName">
            <summary>
            Gets the name(with extension) of the uploaded file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FilePath">
            <summary>
            Gets the full path of the uploaded file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FileSize">
            <summary>
            Gets the byte size of the uploaded file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FileSizeFormated">
            <summary>
            Gets the string size(e.g. 1 MB) of the uploaded file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FileExtension">
            <summary>
            Gets the extension of the uploaded file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UploadResult.FileContentType">
            <summary>
            Gets the content type of the uploaded file.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ModeAttribute">
            <summary>
            This class provides an attribute for classes that extend <see cref="T:Mode"/>.
            </summary>
            <remarks>
            When classes that extend <see cref="T:KudyStudio.Web.Mtv.Mode"/> are registered with MtvFramework.RegisterModes(), 
            its <see cref="T:KudyStudio.Web.Mtv.ModeAttribute"/> attributes are read.
            </remarks>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ModeAttribute"/> for 
            a specified <see cref="T:Mode"/> to handle specified modes.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ModeAttribute"/> for 
            a specified <see cref="T:Mode"/> to handle specified modes.
            </summary>
            <param name="name">The name of the attribute for a <see cref="T:Mode"/>.</param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ModeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ModeAttribute"/> for 
            a specified <see cref="T:Mode"/> to handle specified modes.
            </summary>
            <param name="area">The name of the attribute for a <see cref="T:Mode"/>.</param>
            <param name="name">The name of the attribute for a <see cref="T:Mode"/>.</param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeAttribute.Area">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ModeAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewDataDictionary`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary`1.#ctor(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewDataDictionary`1.SetModel(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewDataDictionary`1.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.LinkExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.Link(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="linkUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.Link(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="linkUrl"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.Link(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="linkUrl"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.IndexLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LinkExtensions.ActionLink(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="linkText"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.CRC16">
            <summary>
            Implements a 16-bits cyclic redundancy check (CRC) hash algorithm.
            </summary>
            <remarks>
            This class is not intended to be used for security purposes. For security applications use MD5, SHA1, SHA256, SHA384, 
            or SHA512 in the System.Security.Cryptography namespace.
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.#ctor">
            <summary>
            Creates a CRC16 object using the <see cref="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.#ctor(System.UInt16)">
            <summary>
            Creates a CRC16 object using the specified polynomial.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial">
            <summary>Gets the default polynomial.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.Initialize">
            <summary>Initializes an implementation of HashAlgorithm.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the hash algorithm for computing the hash.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.HashFinal">
            <summary>Finalizes the hash computation after the last data is processed by the cryptographic stream object.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.Compute(System.String)">
            <summary>Computes the CRC16 value for the given ASCII string using the <see cref="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.Compute(System.IO.Stream)">
            <summary>Computes the CRC16 value for the given input stream using the <see cref="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.Compute(System.Byte[])">
            <summary>Computes the CRC16 value for the input data using the <see cref="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.Compute(System.Byte[],System.Int32,System.Int32)">
            <summary>Computes the hash value for the input data using the <see cref="F:KudyStudio.Utility.Algorithms.CRC16.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.ComputeHash(System.String)">
            <summary>Computes the hash value for the given ASCII string.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.ComputeHash(System.IO.Stream)">
            <summary>Computes the hash value for the given input stream.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.ComputeHash(System.Byte[])">
            <summary>Computes the hash value for the input data.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC16.ComputeHash(System.Byte[],System.Int32,System.Int32)">
            <summary>Computes the hash value for the input data.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.ImageExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ImageExtensions.Image(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ImageExtensions.Image(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <param name="alt"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ImageExtensions.Image(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <param name="alt"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ImageExtensions.Image(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="src"></param>
            <param name="alt"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.TextAreaExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TextAreaExtensions.TextArea(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Filters">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Filters.ActionFilters">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Filters.ExceptionFilters">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Filters.AuthorizationFilters">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.TaskServer.AddQueueTask(KudyStudio.Utility.Tasking.QueueTask)">
            <summary>
            
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.TaskServer.AddTimingTask(KudyStudio.Utility.Tasking.TimingTask)">
            <summary>
            
            </summary>
            <param name="task"></param>
        </member>
        <member name="T:KudyStudio.StringObjectDictionaryExtensions">
            <summary>
            Provides a set of static methods for extensions.
            </summary>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.Get``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary value by the specified key.
            </summary>
            <typeparam key="T"></typeparam>
            <param key="dictionary"></param>
            <param key="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.Get``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0)">
            <summary>
            Gets the dictionary value by the specified key.
            </summary>
            <typeparam key="T"></typeparam>
            <param key="dictionary"></param>
            <param key="key"></param>
            <param key="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetString(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary string value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetByte(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary byte value by the specified key. 
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetByte(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Byte)">
            <summary>
            Gets the dictionary byte value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetInt32(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary int value by the specified key.
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetInt32(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Int32)">
            <summary>
            Gets the dictionary int value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetInt64(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary long value by the specified key.
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetInt64(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Int64)">
            <summary>
            Gets the dictionary long value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetFloat(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary float value by the specified key.
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetFloat(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Single)">
            <summary>
            Gets the dictionary float value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDouble(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary double value by the specified key.
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDouble(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Double)">
            <summary>
            Gets the dictionary double value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDecimal(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary decimal value by the specified key.
            If the request key does not exist, 0 will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDecimal(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Decimal)">
            <summary>
            Gets the dictionary decimal value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetBool(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary bool value by the specified key.
            If the request key does not exist, false will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetBool(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Boolean)">
            <summary>
            Gets the dictionary bool value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDateTime(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary DateTime value by the specified key.
            If the request key does not exist, DateTime.MinValue will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetDateTime(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.DateTime)">
            <summary>
            Gets the dictionary DateTime value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetTimeSpan(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary TimeSpan value by the specified key.
            If the request key does not exist, TimeSpan.Zero will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetTimeSpan(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.TimeSpan)">
            <summary>
            Gets the dictionary TimeSpan value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetGuid(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary Guid value by the specified key.
            If the request key does not exist, Guid.Empty will be returned.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetGuid(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Guid)">
            <summary>
            Gets the dictionary Guid value by the specified key.
            </summary>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="defaultValue">If the request key does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetEnum``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the dictionary enum value by the specified key, ignore case.
            </summary>
            <typeparam key="T">An enum type.</typeparam>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionaryExtensions.GetEnum``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Boolean)">
            <summary>
            Gets the dictionary enum value by the specified key.
            </summary>
            <typeparam key="T">An enum type.</typeparam>
            <param key="dictionary"></param>
            <param key="key">The key to search.</param>
            <param key="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>The request value.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WIGStartInfo">
            <summary>
            Summary description for WIGStartInfo.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WIGStartInfo._readOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WIGStartInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WIGStartInfo.#ctor(KudyStudio.Utility.Threading.WIGStartInfo)">
            <summary>
            
            </summary>
            <param name="wigStartInfo"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WIGStartInfo.ThrowIfReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.WIGStartInfo.AsReadOnly">
            <summary>
            Get a readonly version of this WIGStartInfo
            </summary>
            <returns>Returns a readonly reference to this WIGStartInfoRO</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.UseCallerCallContext">
            <summary>
            Get/Set if to use the caller's security context
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.UseCallerHttpContext">
            <summary>
            Get/Set if to use the caller's HTTP context
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.DisposeOfStateObjects">
            <summary>
            Get/Set if to dispose of the state object of a work item
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.CallToPostExecute">
            <summary>
            Get/Set the run the post execute options
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.PostExecuteWorkItemCallback">
            <summary>
            Get/Set the default post execute callback
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.StartSuspended">
            <summary>
            Get/Set if the work items execution should be suspended until the Start()
            method is called.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.WorkItemPriority">
            <summary>
            Get/Set the default priority that a work item gets when it is enqueued
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.WIGStartInfo.FillStateWithArgs">
            <summary>
            Get/Set the if QueueWorkItem of Action/Func fill the
            arguments as an object array into the state of the work item.
            The arguments can be access later by IWorkItemResult.State.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TaskList">
            <summary>
            Deprecated.  Provided for V1 compatibility only. 
            </summary>
            <remarks>
            <p>Presents the Scheduled Tasks folder as a Task Collection. </p> 
            
            <p>A TaskList is indexed by name rather than position.
            You can't add, remove, or assign tasks in TaskList.  Accessing
            a Task in the list by indexing, or by enumeration, is equivalent to opening a task
            by calling the ScheduledTasks Open() method.</p> 	
            <p><i>Provided for compatibility with version one of the library.  Use of Scheduler
            and TaskList will normally result in COM memory leaks.</i></p>
            </remarks>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskList.computerName">
            <summary>
            Name of the target computer whose Scheduled Tasks are to be accessed.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskList.scheduledTasks">
            <summary>
            Scheduled Tasks folder supporting this TaskList.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.#ctor">
            <summary>
            Constructors - marked internal so you have to create using Scheduler class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Create(System.String)">
            <summary>
            Creates a new task on the system with the supplied <paramref name="name"/>.
            </summary>
            <param name="name">Unique display name for the task. If not unique, an ArgumentException will be thrown.</param>
            <returns>Instance of new task</returns>
            <exception cref="T:System.ArgumentException">There is already a task of the same name as the one supplied for the new task.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Delete(System.String)">
            <summary>
            Deletes the task of the given <paramref name="name" />.
            </summary>
            <param name="name">Name of task to delete</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.GetEnumerator">
            <summary>
            Gets a TaskList enumerator
            </summary>
            <returns>Enumerator for TaskList</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Dispose">
            <summary>
            Disposes TaskList
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TaskList.TargetComputer">
            <summary>
            Name of target computer
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TaskList.Item(System.String)">
            <summary>
            Indexer which retrieves task of given <paramref name="name" />.
            </summary>
            <param name="name">Name of task to retrieve</param>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TaskList.Enumerator">
            <summary>
            Enumerator for <c>TaskList</c>
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Enumerator.#ctor(KudyStudio.Utility.TaskScheduler.ScheduledTasks)">
            <summary>
            Internal constructor - Only accessable through <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
            <param name="st">ScheduledTasks object</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Enumerator.MoveNext">
            <summary>
            Moves to the next task. See <see cref="M:System.Collections.IEnumerator.MoveNext"/> for more information.
            </summary>
            <returns>true if next task found, false if no more tasks.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TaskList.Enumerator.Reset">
            <summary>
            Reset task enumeration. See <see cref="M:System.Collections.IEnumerator.Reset"/> for more information.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TaskList.Enumerator.Current">
            <summary>
            Retrieves the current task.  See <see cref="P:System.Collections.IEnumerator.Current"/> for more information.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.ScheduledTasks">
            <summary>
            ScheduledTasks represents the a computer's Scheduled Tasks folder.  Using a ScheduledTasks
            object, you can discover the names of the tasks in the folder and you can open a task
            to work with it.  You can also create or delete tasks.
            </summary>
            <remarks>
            A ScheduledTasks object holds a COM interface that can be released by calling <see cref="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.Dispose"/>.
            </remarks>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.ScheduledTasks.taskScheduler">
            <summary>
            Underlying COM interface.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.#ctor">
            <summary>
            Constructor to use Scheduled Tasks of the local computer.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.#ctor(System.String)">
            <summary>
            Constructor to use Scheduled tasks of a remote computer identified by a UNC
            name.  The calling process must have administrative privileges on the remote machine. 
            May throw exception if the computer's task scheduler cannot be reached, and may
            give strange results if the argument is not in UNC format.
            </summary>
            <param name="computer">The remote computer's UNC name, e.g. "\\DALLAS".</param>
            <exception cref="T:System.ArgumentException">The Task Scheduler could not be accessed.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.GetTaskNames">
            <summary>
            Return the names of all scheduled tasks.  The names returned include the file extension ".job";
            methods requiring a task name can take the name with or without the extension.
            </summary>
            <returns>The names in a string array.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.CreateTask(System.String)">
            <summary>
            Creates a new task on the system with the given <paramref name="name"/>.
            </summary>
            <remarks>Task names follow normal filename character restrictions.  The name
            will be come the name of the file used to store the task (with .job added).</remarks>
            <param name="name">Name for the new task.</param>
            <returns>Instance of new task.</returns>
            <exception cref="T:System.ArgumentException">There is an existing task with the given name.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.DeleteTask(System.String)">
            <summary>
            Deletes the task of the given <paramref name="name" />.
            </summary>
            <remarks>If you delete a task that is open, a subsequent save will throw an
            exception.  You can save to a filename, however, to create a new task.</remarks>
            <param name="name">Name of task to delete.</param>
            <returns>True if the task was deleted, false if the task wasn't found.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.OpenTask(System.String)">
            <summary>
            Opens the task with the given <paramref name="name" />.  An open task holds COM interfaces
            which are released by the Task's Close() method.
            </summary>
            <remarks>If the task does not exist, null is returned.</remarks>
            <param name="name">Name of task to open.</param>
            <returns>An instance of a Task, or null if the task name couldn't be found.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.ScheduledTasks.Dispose">
            <summary>
            The internal COM interface is released.  Further access to the
            object will throw null reference exceptions.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInAttribute">
            <summary>
            All plug-in must decorate the class with this attribute.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Frameworks.PlugInFramework.PlugInAttribute"/> class.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.BsonObjectIdConverter">
            <summary>
            Converts a <see cref="T:KudyStudio.Utility.Json.Bson.BsonObjectId"/> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BsonObjectIdConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BsonObjectIdConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.IPortConfigManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IPortConfigManager.GetConfig(System.Int32)">
            <summary>
            
            </summary>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IPortConfigManager.SaveConfig(System.Int32,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="port"></param>
            <param name="configs"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IPortConfigManager.IsConfigItemValid(System.String,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IPortConfigManager.ServicePorts">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.GetConfig(System.Int32)">
            <summary>
            
            </summary>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.SaveConfig(System.Int32,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="port"></param>
            <param name="configs"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.IsConfigItemValid(System.String,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.ConfigDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.XmlPortConfigManager.ServicePorts">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostCreatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostCreatedEventArgs.#ctor(KudyStudio.Frameworks.WcfModuleFramework.IModuleHost)">
            <summary>
            
            </summary>
            <param name="moduleHost"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostCreatedEventArgs.ModuleHost">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.WinForms.TextBoxRequired">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.TextBoxRequired.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.TextBoxRequired.IsAllTextBoxRequiredSet(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="F:KudyStudio.WinForms.TextBoxRequired.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.TextBoxRequired.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KudyStudio.WinForms.TextBoxRequired.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KudyStudio.WinForms.TextBoxRequired.RequiredMessage">
            <summary>
            Gets or sets the current text in the TextboxRequired.
            </summary>
            <value>The text displayed in the control.</value>
        </member>
        <member name="P:KudyStudio.WinForms.TextBoxRequired.RequiredMessageFont">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.TagBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.TagBuilder.IdDotReplacement">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.SetId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.SetId(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="dotReplacement"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.AddCssClass(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.SetInnerText(System.String)">
            <summary>
            
            </summary>
            <param name="innerText"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.MergeAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="replaceExisting"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="attributes"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="attributes"></param>
            <param name="replaceExisting"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.TagBuilder.ToString(KudyStudio.Web.Mtv.Html.TagRenderMode)">
            <summary>
            
            </summary>
            <param name="renderMode"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.TagBuilder.TagName">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.TagBuilder.InnerHtml">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.TagBuilder.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.LabelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <param name="forId"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <param name="forId"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.LabelExtensions.Label(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="labelText"></param>
            <param name="forId"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewType">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewType.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.PagingTextType">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingTextType.Char">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingTextType.Chinese">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingTextType.English">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ActionExecutingContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionExecutingContext.#ctor(KudyStudio.Web.Mtv.ModeContext,System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="actionMethod"></param>
            <param name="actionParameters"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionExecutingContext.FilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Data.PagedSqlParameters">
            <summary>
            This class contains the parameters of the paginated sql.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.PagedSqlParameters.#ctor">
            <summary>
            Initializes a <see cref="T:PagedSqlParameters"/> object.
            </summary>
        </member>
        <member name="M:KudyStudio.Data.PagedSqlParameters.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a <see cref="T:PagedSqlParameters"/> object with the provided data.
            </summary>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
        </member>
        <member name="M:KudyStudio.Data.PagedSqlParameters.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a <see cref="T:PagedSqlParameters"/> object with the provided data.
            </summary>
            <param name="selectExpression">The T-SQL Select expression.</param>
            <param name="fromExpression">The T-SQL From expression, it supports multi-table or views.</param>
            <param name="masterTable">The T-SQL main table or view in the FromExpression.</param>
            <param name="masterPrimaryKey">The T-SQL primary key in the MainTable.</param>
            <param name="whereExpression">The T-SQL Where expression, it starts with "AND", no "WHERE" before it.</param>
            <param name="orderExpression">The T-SQL Order By expression, in the situation of multi-field sort the last sort field is not with a sort flag.</param>
            <param name="descending">Whether to use descending order, in the situation of multi-field sort the order is for the last sort field.</param>
            <param name="pageSize">The page size.</param>
            <param name="pageIndex">The page index.</param>
            <param name="maxPageIndex">The max page index.</param>
            <param name="autoIncrementKeyMode">
            Whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false.
            </param>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.SelectExpression">
            <summary>
            Gets or sets the T-SQL Select expression.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.FromExpression">
            <summary>
            Gets or sets the T-SQL From expression, it supports multi-table or views.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.MasterTable">
            <summary>
            Gets or sets the T-SQL main table or view in the FromExpression.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.MasterPrimaryKey">
            <summary>
            Gets or sets the T-SQL primary key in the MasterTable.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.WhereExpression">
            <summary>
            Gets or sets the T-SQL Where expression, it starts with "AND", no "WHERE" before it.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.OrderExpression">
            <summary>
            Gets or sets the T-SQL Order By expression, in the situation of multi-field 
            sort the last sort field is not with a sort flag.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.Descending">
            <summary>
            Gets or sets Whether to use descending order, in the situation of multi-field 
            sort the order is for the last sort field. The default is false.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.PageSize">
            <summary>
            Gets or sets the page size. The default value is 10.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.PageIndex">
            <summary>
            Gets or sets the page index. The default value is 1.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.MaxPageIndex">
            <summary>
            Gets or sets the max page index. The default value is 0.
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedSqlParameters.AutoIncrementKeyMode">
            <summary>
            Gets or sets whether to use auto-increment primary key mode, if the primary key 
            of the master table or view is auto-increment, set true to improve query efficiency, 
            but the sort field is the primary key only. if require multi-field sort, set false. 
            The default is false.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UploadStatus">
            <summary>
            The status for <see cref="T:KudyStudio.Web.FileUploader"/> or <see cref="T:KudyStudio.Web.ImageUploader"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UploadStatus.NoFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UploadStatus.ExtensionNotAllowed">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UploadStatus.ExceedMaxFileSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UploadStatus.ExceptionOccured">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.UploadStatus.Uploaded">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.WebUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.GetServerVariable(System.String)">
            <summary>
            Gets the server variable value name of current request.
            </summary>
            <param name="name">The string key of the entry to locate.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.GetIpAddress">
            <summary> 
            Gets the client ip address. An empty string will be returned if failed.
            </summary> 
        </member>
        <member name="M:KudyStudio.Web.WebUtil.ReturnStatusCode(System.Int32)">
            <summary>
            Returns HTTP status code and ends current request.
            </summary>
            <param name="statusCode">The HTTP status code returned to the client.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.ReturnStatusCode(System.Net.HttpStatusCode)">
            <summary>
            Returns HTTP status code and ends current request.
            </summary>
            <param name="statusCode">The <see cref="T:HttpStatusCode"/> returned to the client.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.OutputFile(System.String)">
            <summary>
            Outputs a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.OutputFile(System.String,System.String)">
            <summary>
            Outputs a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.OutputFile(System.String,System.String,System.String)">
            <summary>
            Outputs a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="fileName">The output file name to client.</param>
            <param name="contentType">The content type of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.OutputFile(System.IO.Stream,System.String,System.String)">
            <summary>
            Outputs a file stream to the client.
            </summary>
            <param name="fileStream">The stream of a file.</param>
            <param name="fileName">The output file name to client.</param>
            <param name="contentType">The content type of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.TransmitFile(System.String)">
            <summary>
            Transmits a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.TransmitFile(System.String,System.String)">
            <summary>
            Transmits a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.TransmitFile(System.String,System.String,System.String)">
            <summary>
            Transmits a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="fileName">The output file name to client.</param>
            <param name="contentType">The content type of the file.</param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.Highlight(System.String,System.String[])">
            <summary>
            Highlights the keywords in the text using.
            </summary>
            <param name="text">A text string.</param>
            <param name="keywords">The keywords.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.Highlight(System.String,System.Boolean,System.String[])">
            <summary>
            Highlights the keywords in the text using.
            </summary>
            <param name="text">A text string.</param>
            <param name="ignoreCase">Whether ignore case or not.</param>
            <param name="keywords">The keywords.</param>
            <returns>The resolved text string.</returns>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.SlugTitle(System.String)">
            <summary>
            Generates slug title form a title string.
            </summary>
            <param name="str">The string to generate flug title form.</param>
            <returns>The final slug title string.</returns>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.TransferHtml(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pagePath"></param>
            <param name="savePath"></param>
        </member>
        <member name="M:KudyStudio.Web.WebUtil.TransferHtml(System.String,System.String,System.Text.Encoding)">
            <summary>
            Transfer a page in the ASP.NET server to a static html file.
            </summary>
            <param name="pagePath">The specified virtual path in the context of the current request to transfer.</param>
            <param name="savePath">the path to save static html file.</param>
            <param name="encoding"></param>
        </member>
        <member name="P:KudyStudio.Web.WebUtil.IsGet">
            <summary>
            Gets a bool value indicating whether gets a http get request or not.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.WebUtil.IsPost">
            <summary>
            Gets a bool value indicating whether gets a http post request or not.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.WebUtil.IsFromMobile">
            <summary>
            Gets a value indicating whether the client is a mobile device.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.WebUtil.IsFromBrowser">
            <summary>
            Gets a value indicating whether the client is a browser or not.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.WebUtil.IsFromSearchEngine">
            <summary>
            Gets a value indicating whether the client is from a search engine or not.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemCallback">
            <summary>
            A delegate that represents the method to run as the work item
            </summary>
            <param name="state">A state object for the method to run</param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.PostExecuteWorkItemCallback">
            <summary>
            A delegate to call after the WorkItemCallback completed
            </summary>
            <param name="wir">The work item result object</param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.PostExecuteWorkItemCallback`1">
            <summary>
            A delegate to call after the WorkItemCallback completed
            </summary>
            <param name="wir">The work item result object</param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemsGroupIdleHandler">
            <summary>
            A delegate to call when a WorkItemsGroup becomes idle
            </summary>
            <param name="workItemsGroup">A reference to the WorkItemsGroup that became idle</param>
        </member>
        <member name="T:KudyStudio.Utility.Threading.ThreadInitializationHandler">
            <summary>
            A delegate to call after a thread is created, but before 
            it's first use.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.ThreadTerminationHandler">
            <summary>
            A delegate to call when a thread is about to exit, after 
            it is no longer belong to the pool.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.WorkItemPriority">
            <summary>
            Defines the availeable priorities of a work item.
            The higher the priority a work item has, the sooner
            it will be executed.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WorkItemPriority.Lowest">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WorkItemPriority.BelowNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WorkItemPriority.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WorkItemPriority.AboveNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.WorkItemPriority.Highest">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.CallToPostExecute">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.CallToPostExecute.Never">
            <summary>
            Never call to the PostExecute call back
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.CallToPostExecute.WhenWorkItemCanceled">
            <summary>
            Call to the PostExecute only when the work item is cancelled
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.CallToPostExecute.WhenWorkItemNotCanceled">
            <summary>
            Call to the PostExecute only when the work item is not cancelled
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.CallToPostExecute.Always">
            <summary>
            Always call to the PostExecute
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.EventWaitHandleFactory">
            <summary>
            EventWaitHandleFactory class.
            This is a static class that creates AutoResetEvent and ManualResetEvent objects.
            In WindowCE the WaitForMultipleObjects API fails to use the Handle property 
            of XxxResetEvent. It can use only handles that were created by the CreateEvent API.
            Consequently this class creates the needed XxxResetEvent and replaces the handle if
            it's a WindowsCE OS.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.EventWaitHandleFactory.CreateAutoResetEvent">
            <summary>
            Create a new AutoResetEvent object
            </summary>
            <returns>Return a new AutoResetEvent object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.EventWaitHandleFactory.CreateManualResetEvent(System.Boolean)">
            <summary>
            Create a new ManualResetEvent object
            </summary>
            <returns>Return a new ManualResetEvent object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.Convert``1(System.Object)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <returns>The converted type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.Convert``1(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <returns>The converted type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.Convert(System.Object,System.Globalization.CultureInfo,System.Type)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert the value to.</param>
            <returns>The converted type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvert``1(System.Object,``0@)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvert``1(System.Object,System.Globalization.CultureInfo,``0@)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvert(System.Object,System.Globalization.CultureInfo,System.Type,System.Object@)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert the value to.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.ConvertOrCast``1(System.Object)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <typeparam name="T">The type to convert or cast the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <returns>The converted type. If conversion was unsuccessful, the initial value is returned if assignable to the target type</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.ConvertOrCast``1(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <typeparam name="T">The type to convert or cast the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <returns>The converted type. If conversion was unsuccessful, the initial value is returned if assignable to the target type</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.ConvertOrCast(System.Object,System.Globalization.CultureInfo,System.Type)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert or cast the value to.</param>
            <returns>
            The converted type. If conversion was unsuccessful, the initial value
            is returned if assignable to the target type.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvertOrCast``1(System.Object,``0@)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully or is assignable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvertOrCast``1(System.Object,System.Globalization.CultureInfo,``0@)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully or is assignable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ConvertUtils.TryConvertOrCast(System.Object,System.Globalization.CultureInfo,System.Type,System.Object@)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert the value to.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully or is assignable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.OnErrorAttribute">
            <summary>
            When applied to a method, specifies that the method is called when an error occurs serializing an object.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection">
            <summary>
            A collection of <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> objects.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection.#ctor(KudyStudio.Utility.Json.Serialization.JsonObjectContract)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection"/> class.
            </summary>
            <param name="contract">The contract.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection.GetKeyForItem(KudyStudio.Utility.Json.Serialization.JsonProperty)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection.AddProperty(KudyStudio.Utility.Json.Serialization.JsonProperty)">
            <summary>
            Adds a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> object.
            </summary>
            <param name="property">The property to add to the collection.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(System.String)">
            <summary>
            Gets the closest matching <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> object.
            First attempts to get an exact case match of propertyName and then
            a case insensitive match.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPropertyCollection.GetProperty(System.String,System.StringComparison)">
            <summary>
            Gets a property by property name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="comparisonType">Type property name string comparison.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonWriterException">
            <summary>
            The exception thrown when an error occurs while reading Json text.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonWriterException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonWriterException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonWriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonWriterException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonValidatingReader">
            <summary>
            Represents a reader that provides <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> validation.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonValidatingReader.#ctor(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonValidatingReader"/> class that
            validates the content returned from the given <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from while validating.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonValidatingReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonValidatingReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="E:KudyStudio.Utility.Json.JsonValidatingReader.ValidationEventHandler">
            <summary>
            Sets an event handler for receiving schema validation errors.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.Value">
            <summary>
            Gets the text value of the current Json token.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.TokenType">
            <summary>
            Gets the type of the current Json token.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.ValueType">
            <summary>
            Gets The Common Language Runtime (CLR) type for the current Json token.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonValidatingReader.Reader">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.JsonReader"/> used to construct this <see cref="T:KudyStudio.Utility.Json.JsonValidatingReader"/>.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> specified in the constructor.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonConverterCollection">
            <summary>
            Represents a collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.WorkingModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.WorkingModule.#ctor(KudyStudio.Frameworks.WcfModuleFramework.IModule,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="module"></param>
            <param name="filePath"></param>
            <param name="startDateTime"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.WorkingModule.Module">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.WorkingModule.FilePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.WorkingModule.StartDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isValid"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.#ctor(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="isValid"></param>
            <param name="message"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.VerifyChannelResult.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.StringUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.StringUtil.GetAsciiCode(System.Char)">
            <summary>
            Returns an Integer value representing the character code corresponding to a character.
            </summary>
            <param name="c">Any valid Char expression. If c is null, an <see cref="T:System.ArgumentException"/> error occurs.
            </param>
            <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.GetAsciiCode(System.String)">
            <summary>
            Returns an Integer value representing the character code corresponding to a character.
            </summary>
            <param name="str">Any valid Char or String expression. If String is a String expression, 
            only the first character of the string is used for input. If String is null 
            or contains no characters, an <see cref="T:System.ArgumentException"/> error occurs.
            </param>
            <returns>Returns an Integer value representing the character code corresponding to a character.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToColor(System.String)">
            <summary>
            Converts a string to <see cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="s">A string represents a color(e.g. #fff).</param>
            <returns>The converted <see cref="T:System.Drawing.Color"/> object.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToCamelCase(System.String)">
            <summary>
            Converts a string to Camel Casing(the first character to lower case).
            </summary>
            <remarks>Camel Casing convention capitalizes the first character of each word except the first word.</remarks>
            <param name="s">A <see cref="T:System.String"/> reference.</param>
            <returns>A Camel Casing string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToPascalCase(System.String)">
            <summary>
            Converts a string to Pascal Casing(the first character to upper case).
            </summary>
            <remarks>Pascal Casing convention capitalizes the first character of each word (including acronyms over two letters in length).</remarks>
            <param name="s">A <see cref="T:System.String"/> reference.</param>
            <returns>A Pascal Casing string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToProperCase(System.String)">
            <summary>
            Get the proper case string that the first letter upper case for each word.
            </summary>
            <param name="str">The string to resolve.</param>
            <returns>The proper case string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToSBCCase(System.String)">
            <summary>
            Converts a string to SBC(single byte character) case.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted SBC case string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToDBCCase(System.String)">
            <summary>
            Converts a string to DBC(double byte charactor) case.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted DBC case string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertToUnicode(System.String)">
            <summary>
            Converts a string to unicode.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted unicode string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.ConvertFromUnicode(System.String)">
            <summary>
            Converts a unicode string to original string.
            </summary>
            <param name="s">The unicode string to convert.</param>
            <returns>The converted original string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.SplitString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.SplitString(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="separator"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.SplitString(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="separator"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.SplitString(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="separator"></param>
            <param name="count"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.InStringArray(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="stringArray"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.InStringArray(System.String,System.String[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="stringArray"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.FindStringArrayIndex(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="stringArray"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.FindStringArrayIndex(System.String,System.String[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="stringArray"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringUtil.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a string with the specified limits and adds (...) to the end if truncated.
            </summary>
            <param name="input">The input string.</param>
            <param name="limit">The max size of string.</param>
            <returns>The truncated string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.Truncate(System.String,System.Int32,System.String)">
            <summary>
            Truncates a string with the specified limits and adds (...) to the end if truncated.
            </summary>
            <param name="input">The input string.</param>
            <param name="limit">The max size of string.</param>
            <param name="ending">The ending string to add to the end if truncated.</param>
            <returns>The truncated string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.TruncateMiddle(System.String,System.Int32)">
            <summary>
            Truncates a string with the specified limits by adding (...) to the middle if truncated.
            </summary>
            <param name="input">The input string.</param>
            <param name="limit">The max size of string.</param>
            <returns>The truncated string.</returns>
        </member>
        <member name="M:KudyStudio.StringUtil.TruncateMiddle(System.String,System.Int32,System.String)">
            <summary>
            Truncates a string with the specified limits by adding (...) to the middle if truncated.
            </summary>
            <param name="input">The input string.</param>
            <param name="limit">The max size of string.</param>
            <param name="middle">The middle string to add to the middle if truncated.</param>
            <returns>The truncated string.</returns>
        </member>
        <member name="T:KudyStudio.WinForms.WinFormHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.WinForms.WinFormHelper.OneProcessOnly(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="executingAssembly"></param>
        </member>
        <member name="M:KudyStudio.WinForms.WinFormHelper.OneProcessOnly(System.Reflection.Assembly,System.Action,System.Boolean)">
            <summary>
            
            </summary>
            <param name="executingAssembly"></param>
            <param name="onTwoInstances"></param>
            <param name="setForegroundWindow"></param>
        </member>
        <member name="M:KudyStudio.WinForms.WinFormHelper.IsRuningWithAdministrator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewUserControl`1">
            <summary>
            This user control class is used in <see cref="T:MtvPage"/> or any 
            subclasses of <see cref="T:MtvPage"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewUserControl`1.SetViewData(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl`1.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl`1.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewUserControl`1.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.LruCache`1">
            <summary>
            Simple LRU cache implementation that uses a SortedList or SortedDictionary 
            base on the capacity. This cache is not synchronized, use Synchronized(Cache) if needed.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.LruCache`1.#ctor">
            <summary>
            Creates a last-recently-used cache with the size of 1024.
            </summary>
        </member>
        <member name="M:KudyStudio.LruCache`1.#ctor(System.Int32)">
            <summary>
            Creates a last-recently-used cache with the specified size.
            </summary>
            <param name="capacity">The capacity size.</param>
        </member>
        <member name="M:KudyStudio.LruCache`1.Exists(System.String)">
            <summary>
            Returns whether the given key is in this cache.
            </summary>
            <returns>true if the key of cache item exists.</returns>
        </member>
        <member name="M:KudyStudio.LruCache`1.Get(System.String)">
            <summary>
            Gets the value for the given key.
            </summary>
            <param name="key">The key of cache item.</param>
            <returns>The value of cache item.</returns>
        </member>
        <member name="M:KudyStudio.LruCache`1.Set(System.String,`0)">
            <summary>
            Sets a (key, value)-pair into the cache.
            </summary>
            <param name="key">The key of cache item.</param>
            <param name="value">The value of cache item.</param>
        </member>
        <member name="M:KudyStudio.LruCache`1.Remove(System.String)">
            <summary>
            Removes the value by the given key from the cache.
            </summary>
            <param name="key">The key of cache item.</param>
        </member>
        <member name="M:KudyStudio.LruCache`1.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:KudyStudio.LruCache`1.GetSynchronized">
            <summary>
            Called by Synchronized(Cache). This method returns a SynchronizedCache 
            instance that wraps this instance by default and can be overridden to return
            e. g. subclasses of Cache or this in case this cache is already synchronized.
            </summary>
        </member>
        <member name="P:KudyStudio.LruCache`1.Count">
            <summary>
            Gets the count of items in this cache.
            </summary>
            <returns>The count of items in this cache.</returns>
        </member>
        <member name="P:KudyStudio.LruCache`1.Keys">
            <summary>
            Gets a Set containing all keys in this cache.
            </summary>
        </member>
        <member name="P:KudyStudio.LruCache`1.Values">
            <summary>
            Gets a Set containing all values in this cache.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.SendMailEventArgs">
            <summary>
            发送邮件事件数据。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SendMailEventArgs.mail">
            <summary>
            发送的邮件。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SendMailEventArgs.success">
            <summary>
            是否发送成功。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SendMailEventArgs.Mail">
            <summary>
            获取或设置 发送的邮件。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SendMailEventArgs.Success">
            <summary>
            获取或设置 是否发送成功。
            </summary>
        </member>
        <member name="T:KudyStudio.FastActivator">
            <summary>
            <para>Implements a very fast object factory for dynamic object creation. Dynamically generates a factory class whihc will use the new() constructor of the requested type.</para>
            <para>Much faster than using Activator at the price of the first invocation being significantly slower than subsequent calls.</para>
            <remarks>Only supports parameterless constructors.</remarks>
            </summary>
        </member>
        <member name="M:KudyStudio.FastActivator.CreateInstance(System.Type)">
            <summary>
            Creates an instance of the specified type using a generated factory to avoid 
            using Reflection.
            </summary>
            <param name="type">The type to be created</param>
            <returns>The newly created instance.</returns>
        </member>
        <member name="M:KudyStudio.FastActivator.CreateInstance``1">
            <summary>
            Creates an instance of the type designated by the specified generic type parameter 
            using a generated factory to avoid using Reflection.
            </summary>
            <typeparam name="T">The type to be created.</typeparam>
            <returns>The newly created instance.</returns>
        </member>
        <member name="T:KudyStudio.FastActivator.IFastObjectFacory">
            <summary>
            This interface supports the <see cref="T:KudyStudio.FastActivator"/> and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:KudyStudio.FastActivator.IFastObjectFacory.CreateInstance">
            <summary>
            This method supports the <see cref="T:FastActivator"/> and is not intended to be used directly from your code.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.SelectList">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.MultipleSelectList">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.#ctor(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValues"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <param name="selectedValues"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.GetListItems">
            <summary>
            
            </summary>
            <remarks>Operation performs conversions and returns a unique instance on each call.</remarks>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MultipleSelectList.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.MultipleSelectList.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.MultipleSelectList.DataTextField">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.MultipleSelectList.DataValueField">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.MultipleSelectList.SelectedValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectList.#ctor(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="dataValueField"></param>
            <param name="dataTextField"></param>
            <param name="selectedValue"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.SelectList.SelectedValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.MtvForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MtvForm.#ctor(KudyStudio.Web.Mtv.ViewContext)">
            <summary>
            
            </summary>
            <param name="viewContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MtvForm.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MtvForm.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.MtvForm.EndForm">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Config.KudyConfigException">
            <summary>
            The exception that is thrown during configuration if any error occur.
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Config.KudyConfigException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Config.KudyConfigException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Config.KudyConfigException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Config.KudyConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Config.KudyConfigException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.FNV1">
            <summary>
            Fowler-Noll-Vo hash, variant 1, 32-bit version.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Algorithms.FNV1.hashValue">
            <summary>
            The current hash value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:KudyStudio.Utility.Algorithms.FNV1"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1.Initialize">
            <summary>
            Initializes an instance of <see cref="T:KudyStudio.Utility.Algorithms.FNV1"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the <see cref="T:KudyStudio.Utility.Algorithms.FNV1"/> hash algorithm for computing the hash.</summary>
            <param name="buffer">The input data.</param>
            <param name="offset">The offset into the byte array from which to begin using data. </param>
            <param name="count">The number of bytes in the array to use as data. </param>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.FNV1"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.FNV1a">
            <summary>
            Fowler-Noll-Vo hash, variant 1a, 32-bit version.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Algorithms.FNV1a.hashValue">
            <summary>
            The current hash value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1a.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:KudyStudio.Utility.Algorithms.FNV1a"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1a.Initialize">
            <summary>
            Initializes an instance of <see cref="T:KudyStudio.Utility.Algorithms.FNV1a"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1a.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the <see cref="T:KudyStudio.Utility.Algorithms.FNV1a"/> hash algorithm for computing the hash.</summary>
            <param name="buffer">The input data.</param>
            <param name="offset">The offset into the byte array from which to begin using data. </param>
            <param name="count">The number of bytes in the array to use as data. </param>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV1a.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.FNV1a"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.ModifiedFNV1">
            <summary>
            A modified Fowler-Noll-Vo hash. Provides better distribution than 
            FNV1, 32-bit version.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.ModifiedFNV1.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.ModifiedFNV1"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.ModifiedFNV1a">
            <summary>
            A modified Fowler-Noll-Vo hash. Provides better distribution than 
            FNV1, 32-bit version.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.ModifiedFNV1a.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.ModifiedFNV1a"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.GlobalFilterAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.GlobalFilterAttribute.IsEnabled(KudyStudio.Web.Mtv.ModeContext)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.SmartThreadPool">
            <summary>
            Smart thread pool class.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultMinWorkerThreads">
            <summary>
            Default minimum number of threads the thread pool contains. (0)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultMaxWorkerThreads">
            <summary>
            Default maximum number of threads the thread pool contains. (25)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultIdleTimeout">
            <summary>
            Default idle timeout in milliseconds. (One minute)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultUseCallerCallContext">
            <summary>
            Indicate to copy the security context of the caller and then use it in the call. (false)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultUseCallerHttpContext">
            <summary>
            Indicate to copy the HTTP context of the caller and then use it in the call. (false)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultDisposeOfStateObjects">
            <summary>
            Indicate to dispose of the state objects if they support the IDispose interface. (false)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultCallToPostExecute">
            <summary>
            The default option to run the post execute (CallToPostExecute.Always)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultWorkItemPriority">
            <summary>
            The default work item priority (WorkItemPriority.Normal)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultStartSuspended">
            <summary>
            The default is to work on work items as soon as they arrive
            and not to wait for the start. (false)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultThreadPriority">
            <summary>
            The default thread priority (ThreadPriority.Normal)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultFillStateWithArgs">
            <summary>
            The default fill state with params. (false)
            It is relevant only to QueueWorkItem of Action/Func
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultPostExecuteWorkItemCallback">
            <summary>
            The default post execute method to run. (None)
            When null it means not to call it.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.DefaultPerformanceCounterInstanceName">
            <summary>
            The default name to use for the performance counters instance. (null)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._workerThreads">
            <summary>
            Dictionary of all the threads in the thread pool.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._workItemsQueue">
            <summary>
            Queue of work items.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._workItemsProcessed">
            <summary>
            Count the work items handled.
            Used by the performance counter.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._inUseWorkerThreads">
            <summary>
            Number of threads that currently work (not idle).
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._stpStartInfo">
            <summary>
            Stores a copy of the original STPStartInfo.
            It is used to change the MinThread and MaxThreads
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._currentWorkItemsCount">
            <summary>
            Total number of work items that are stored in the work items queue 
            plus the work items that the threads in the pool are working on.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._isIdleWaitHandle">
            <summary>
            Signaled when the thread pool is idle, i.e. no thread is busy
            and the work items queue is empty
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._shuttingDownEvent">
            <summary>
            An event to signal all the threads to quit immediately.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._isSuspended">
            <summary>
            A flag to indicate if the Smart Thread Pool is now suspended.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._shutdown">
            <summary>
            A flag to indicate the threads to quit.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._threadCounter">
            <summary>
            Counts the threads created in the pool.
            It is used to name the threads.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._isDisposed">
            <summary>
            Indicate that the SmartThreadPool has been disposed
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._workItemsGroups">
            <summary>
            Holds all the WorkItemsGroup instaces that have at least one 
            work item int the SmartThreadPool
            This variable is used in case of Shutdown
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._canceledSmartThreadPool">
            <summary>
            A common object for all the work items int the STP
            so we can mark them to cancel in O(1)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._windowsPCs">
            <summary>
            Windows STP performance counters
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool._localPCs">
            <summary>
            Local STP performance counters
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
            <param name="maxWorkerThreads">Upper limit of threads in the pool</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
            <param name="maxWorkerThreads">Upper limit of threads in the pool</param>
            <param name="minWorkerThreads">Lower limit of threads in the pool</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.#ctor(KudyStudio.Utility.Threading.STPStartInfo)">
            <summary>
            Constructor
            </summary>
            <param name="stpStartInfo">A SmartThreadPool configuration that overrides the default behavior</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Dequeue">
            <summary>
            Waits on the queue for a work item, shutdown, or timeout.
            </summary>
            <returns>
            Returns the WaitingCallback or null in case of timeout or shutdown.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Enqueue(KudyStudio.Utility.Threading.Internal.WorkItem)">
            <summary>
            Put a new work item in the queue
            </summary>
            <param name="workItem">A work item to queue</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.InformCompleted">
            <summary>
            Inform that the current thread is about to quit or quiting.
            The same thread may call this method more than once.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.StartThreads(System.Int32)">
            <summary>
            Starts new threads
            </summary>
            <param name="threadsCount">The number of threads to start</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.ProcessQueuedItems">
            <summary>
            A worker thread method that processes work items from the work items queue.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Shutdown">
            <summary>
            Force the SmartThreadPool to shutdown
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Shutdown(System.Boolean,System.TimeSpan)">
            <summary>
            Force the SmartThreadPool to shutdown with timeout
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Shutdown(System.Boolean,System.Int32)">
            <summary>
            Empties the queue of work items and abort the threads in the pool.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[])">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[],System.TimeSpan,System.Boolean)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[],System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAll(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[])">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if any of the work items has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[],System.TimeSpan,System.Boolean)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[],System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitAny(KudyStudio.Utility.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.CreateWorkItemsGroup(System.Int32)">
            <summary>
            Creates a new WorkItemsGroup.
            </summary>
            <param name="concurrency">The number of work items that can be run concurrently</param>
            <returns>A reference to the WorkItemsGroup</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.CreateWorkItemsGroup(System.Int32,KudyStudio.Utility.Threading.WIGStartInfo)">
            <summary>
            Creates a new WorkItemsGroup.
            </summary>
            <param name="concurrency">The number of work items that can be run concurrently</param>
            <param name="wigStartInfo">A WorkItemsGroup configuration that overrides the default behavior</param>
            <returns>A reference to the WorkItemsGroup</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.AbortOnWorkItemCancel">
            <summary>
            Checks if the work item has been cancelled, and if yes then abort the thread.
            Can be used with Cancel and timeout
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.GetStates">
            <summary>
            Get an array with all the state objects of the currently running items.
            The array represents a snap shot and impact performance.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Start">
            <summary>
            Start the thread pool if it was started suspended.
            If it is already running, this method is ignored.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Cancel(System.Boolean)">
            <summary>
            Cancel all work items using thread abortion
            </summary>
            <param name="abortExecution">True to stop work items by raising ThreadAbortException</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.WaitForIdle(System.Int32)">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Join(System.Collections.Generic.IEnumerable{System.Action})">
            <summary>
            Executes all actions in parallel.
            Returns when they all finish.
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Join(System.Action[])">
            <summary>
            Executes all actions in parallel.
            Returns when they all finish.
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Choice(System.Collections.Generic.IEnumerable{System.Action})">
            <summary>
            Executes all actions in parallel
            Returns when the first one completes
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Choice(System.Action[])">
            <summary>
            Executes all actions in parallel
            Returns when the first one completes
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Pipe``1(``0,System.Collections.Generic.IEnumerable{System.Action{``0}})">
            <summary>
            Executes actions in sequence asynchronously.
            Returns immediately.
            </summary>
            <param name="pipeState">A state context that passes </param>
            <param name="actions">Actions to execute in the order they should run</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.SmartThreadPool.Pipe``1(``0,System.Action{``0}[])">
            <summary>
            Executes actions in sequence asynchronously.
            Returns immediately.
            </summary>
            <param name="pipeState"></param>
            <param name="actions">Actions to execute in the order they should run</param>
        </member>
        <member name="E:KudyStudio.Utility.Threading.SmartThreadPool._onThreadInitialization">
            <summary>
            An event to call after a thread is created, but before 
            it's first use.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.SmartThreadPool._onThreadTermination">
            <summary>
            An event to call when a thread is about to exit, after 
            it is no longer belong to the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.CurrentThreadEntry">
            <summary>
            A reference to the current work item a thread from the thread pool 
            is executing.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.SmartThreadPool.OnThreadInitialization">
            <summary>
            This event is fired when a thread is created.
            Use it to initialize a thread before the work items use it.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.SmartThreadPool.OnThreadTermination">
            <summary>
            This event is fired when a thread is terminating.
            Use it for cleanup.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.MinThreads">
            <summary>
            Get/Set the lower limit of threads in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.MaxThreads">
            <summary>
            Get/Set the upper limit of threads in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.ActiveThreads">
            <summary>
            Get the number of threads in the thread pool.
            Should be between the lower and the upper limits.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.InUseThreads">
            <summary>
            Get the number of busy (not idle) threads in the thread pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.IsWorkItemCanceled">
            <summary>
            Returns true if the current running work item has been cancelled.
            Must be used within the work item's callback method.
            The work item should sample this value in order to know if it
            needs to quit before its completion.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.STPStartInfo">
            <summary>
            Thread Pool start information (readonly)
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.IsShuttingdown">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.PerformanceCountersReader">
            <summary>
            Return the local calculated performance counters
            Available only if STPStartInfo.EnableLocalPerformanceCounters is true.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.Concurrency">
            <summary>
            Get/Set the maximum number of work items that execute cocurrency on the thread pool
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.WaitingCallbacks">
            <summary>
            Get the number of work items in the queue.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.WIGStartInfo">
            <summary>
            WorkItemsGroup start information (readonly)
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Threading.SmartThreadPool.OnIdle">
            <summary>
            This event is fired when all work items are completed.
            (When IsIdle changes to true)
            This event only work on WorkItemsGroup. On SmartThreadPool
            it throws the NotImplementedException.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.ThreadEntry._creationTime">
            <summary>
            The thread creation time
            The value is stored as UTC value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.ThreadEntry._lastAliveTime">
            <summary>
            The last time this thread has been running
            It is updated by IAmAlive() method
            The value is stored as UTC value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.SmartThreadPool.ThreadEntry._associatedSmartThreadPool">
            <summary>
            A reference from each thread in the thread pool to its SmartThreadPool
            object container.
            With this variable a thread can know whatever it belongs to a 
            SmartThreadPool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.SmartThreadPool.ThreadEntry.CurrentWorkItem">
            <summary>
            A reference to the current work item a thread from the thread pool 
            is executing.
            </summary>            
        </member>
        <member name="T:KudyStudio.Caching.Config.CachingConfigSectionElement">
            <summary>
            Represents a configuration element for KudyStudio.Caching namespace.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Config.CachingConfigSectionElement.Memcached">
            <summary>
            Gets the configuration of KudyStudio.Caching.Memcached namespace.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Config.CachingConfigSectionElement.CacheService">
            <summary>
            Gets the configuration of KudyStudio.Caching.Memcached namespace.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.CacheFlags">
            <summary>
            Specifies the type of the data in <see cref="T:KudyStudio.Caching.Memcached.CacheEntity"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Empty">
            <summary>
            A null reference.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Object">
            <summary>
            A general type representing any reference or value type not explicitly represented 
            by another CacheDataType.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.DBNull">
            <summary>
            A database null (column) value.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Boolean">
            <summary>
            A simple type representing Boolean values of true or false.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Char">
            <summary>
            An integral type representing unsigned 16-bit integers with values between 
            0 and 65535. The set of possible values for the CacheDataType.Char type 
            corresponds to the Unicode character set.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.SByte">
            <summary>
            An integral type representing signed 8-bit integers with values between 
            -128 and 127.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Byte">
            <summary>
            An integral type representing unsigned 8-bit integers with values between 
            0 and 255.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Int16">
            <summary>
            An integral type representing signed 16-bit integers with values between 
            -32768 and 32767.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.UInt16">
            <summary>
            An integral type representing unsigned 16-bit integers with values between 
            0 and 65535.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Int32">
            <summary>
            An integral type representing signed 32-bit integers with values between 
            -2147483648 and 2147483647.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.UInt32">
            <summary>
            An integral type representing unsigned 32-bit integers with values between 
            0 and 4294967295.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Int64">
            <summary>
            An integral type representing signed 64-bit integers with values between 
            -9223372036854775808 and 9223372036854775807.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.UInt64">
            <summary>
            An integral type representing unsigned 64-bit integers with values between 
            0 and 18446744073709551615.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Single">
            <summary>
            A floating point type representing values ranging from approximately 
            1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Double">
            <summary>
            A floating point type representing values ranging from approximately 
            5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Decimal">
            <summary>
            A simple type representing values ranging from 1.0 x 10 -28 to approximately 
            7.9 x 10 28 with 28-29 significant digits.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.DateTime">
            <summary>
            A type representing a date and time value.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.String">
            <summary>
            A sealed class type representing Unicode character strings.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.RawData">
            <summary>
            A byte array or an ArraySegment&lt;byte&gt;value.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheFlags.Compressed">
            <summary>
            A flag that indicates the data is compressed.
            </summary>
        </member>
        <member name="T:KudyStudio.Logging.Config.LoggingConfigSectionElement">
            <summary>
            Represents a configuration element for KudyStudio.Logging namespace.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInServer.Startup">
            <summary>
            Startup the Plug-In host
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInServer.Shutdown">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInServer.PlugInExists(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInServer.GetPlugIn(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInServer.GetPluginManifestList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInServer.PlugInHost">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TriggerType">
            <summary>
            Valid types of triggers
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.RunOnce">
            <summary>
            Trigger is set to run the task a single time. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.RunDaily">
            <summary>
            Trigger is set to run the task on a daily interval. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.RunWeekly">
            <summary>
            Trigger is set to run the work item on specific days of a specific week of a specific month. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.RunMonthly">
            <summary>
            Trigger is set to run the task on a specific day(s) of the month.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.RunMonthlyDOW">
            <summary>
            Trigger is set to run the task on specific days, weeks, and months.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.OnIdle">
            <summary>
            Trigger is set to run the task if the system remains idle for the amount of time specified by the idle wait time of the task.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.OnSystemStart">
            <summary>
            Trigger is set to run the task at system startup.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TriggerType.OnLogon">
            <summary>
            Trigger is set to run the task when a user logs on. 
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek">
            <summary>
            Values for days of the week (Monday, Tuesday, etc.)  These carry the Flags
            attribute so DaysOfTheWeek and be combined with | (or).
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.DaysOfTheWeek.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.CamelCasePropertyNamesContractResolver">
            <summary>
            Resolves member mappings for a type, camel casing property names.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.DefaultContractResolver">
            <summary>
            Used by <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> to resolves a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonContract"/> for a given <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.IContractResolver">
            <summary>
            Used by <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> to resolves a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonContract"/> for a given <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.IContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.DefaultContractResolver"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.DefaultContractResolver"/> class.
            </summary>
            <param name="shareCache">
            If set to <c>true</c> the <see cref="T:KudyStudio.Utility.Json.Serialization.DefaultContractResolver"/> will use a cached shared with other resolvers of the same type.
            Sharing the cache will significantly performance because expensive reflection will only happen once but could cause unexpected
            behavior if different instances of the resolver are suppose to produce different results. When set to false it is highly
            recommended to reuse <see cref="T:KudyStudio.Utility.Json.Serialization.DefaultContractResolver"/> instances with the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)">
            <summary>
            Gets the serializable members for the type.
            </summary>
            <param name="objectType">The type to get serializable members for.</param>
            <returns>The serializable members for the type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)">
            <summary>
            Resolves the default <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> for the contract.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonDictionaryContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonDictionaryContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonArrayContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonArrayContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonPrimitiveContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonPrimitiveContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonLinqContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonLinqContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonISerializableContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonISerializableContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonStringContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonStringContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)">
            <summary>
            Determines which contract type is created for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Serialization.JsonContract"/> for the given type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateProperties(KudyStudio.Utility.Json.Serialization.JsonObjectContract)">
            <summary>
            Creates properties for the given <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/>.
            </summary>
            <param name="contract">The contract to create properties for.</param>
            <returns>Properties for the given <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>
            Creates the <see cref="T:KudyStudio.Utility.Json.Serialization.IValueProvider"/> used by the serializer to get and set values from a member.
            </summary>
            <param name="member">The member.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Serialization.IValueProvider"/> used by the serializer to get and set values from a member.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.CreateProperty(KudyStudio.Utility.Json.Serialization.JsonObjectContract,System.Reflection.MemberInfo)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="contract">The member's declaring types <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/>.</param>
            <param name="member">The member to create a <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> for.</param>
            <returns>A created <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.MemberInfo"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves the name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Name of the property.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration">
            <summary>
            Gets a value indicating whether members are being get and set using dynamic code generation.
            This value is determined by the runtime permissions available.
            </summary>
            <value>
            	<c>true</c> if using dynamic code generation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags">
            <summary>
            Gets or sets the default members search flags.
            </summary>
            <value>The default members search flags.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers">
            <summary>
            Gets or sets a value indicating whether compiler generated members should be serialized.
            </summary>
            <value>
            	<c>true</c> if serialized compiler generated members; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.CamelCasePropertyNamesContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.CamelCasePropertyNamesContractResolver"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves the name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The property name camel cased.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.JsonSchema">
            <summary>
            An in-memory representation of a JSON Schema.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.Read(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Reads a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> containing the JSON Schema to read.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> object representing the JSON Schema.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.Read(KudyStudio.Utility.Json.JsonReader,KudyStudio.Utility.Json.Schema.JsonSchemaResolver)">
            <summary>
            Reads a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> containing the JSON Schema to read.</param>
            <param name="resolver">The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver"/> to use when resolving schema references.</param>
            <returns>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> object representing the JSON Schema.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.Parse(System.String)">
            <summary>
            Load a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from a string that contains schema JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.Parse(System.String,KudyStudio.Utility.Json.Schema.JsonSchemaResolver)">
            <summary>
            Parses the specified json.
            </summary>
            <param name="json">The json.</param>
            <param name="resolver">The resolver.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.WriteTo(KudyStudio.Utility.Json.JsonWriter)">
            <summary>
            Writes this schema to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.Schema.JsonSchemaResolver)">
            <summary>
            Writes this schema to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> using the specified <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="resolver">The resolver used.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchema.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Optional">
            <summary>
            Gets or sets whether the object is optional.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.ReadOnly">
            <summary>
            Gets or sets whether the object is read only.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Hidden">
            <summary>
            Gets or sets whether the object is visible to users.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Transient">
            <summary>
            Gets or sets whether the object is transient.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Description">
            <summary>
            Gets or sets the description of the object.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Type">
            <summary>
            Gets or sets the types of values allowed by the object.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Pattern">
            <summary>
            Gets or sets the pattern.
            </summary>
            <value>The pattern.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.MinimumLength">
            <summary>
            Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.MaximumLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.MaximumDecimals">
            <summary>
            Gets or sets the maximum decimals.
            </summary>
            <value>The maximum decimals.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.MinimumItems">
            <summary>
            Gets or sets the minimum number of items.
            </summary>
            <value>The minimum number of items.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.MaximumItems">
            <summary>
            Gets or sets the maximum number of items.
            </summary>
            <value>The maximum number of items.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Items">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of items.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of items.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Properties">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of properties.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of properties.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.AdditionalProperties">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of additional properties.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> of additional properties.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.AllowAdditionalProperties">
            <summary>
            Gets or sets a value indicating whether additional properties are allowed.
            </summary>
            <value>
            	<c>true</c> if additional properties are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Requires">
            <summary>
            Gets or sets the required property if this property is present.
            </summary>
            <value>The required property if this property is present.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
            <value>The identity.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Enum">
            <summary>
            Gets or sets the a collection of valid enum values allowed.
            </summary>
            <value>A collection of valid enum values allowed.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Options">
            <summary>
            Gets or sets a collection of options.
            </summary>
            <value>A collection of options.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Disallow">
            <summary>
            Gets or sets disallowed types.
            </summary>
            <value>The disallow types.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Default">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Extends">
            <summary>
            Gets or sets the extend <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/>.
            </summary>
            <value>The extended <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchema.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleHostCreatedEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.ManagedThreadPool">
            <summary>
            Managed thread pool.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.MAX_WORKER_THREADS">
            <summary>
            Maximum number of threads the thread pool has at its disposal.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.mutex">
            <summary>
            Lockable object for the pool.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.waitingCallbacks">
            <summary>
            Queue of all the callbacks waiting to be executed.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.workerThreadNeeded">
            <summary>
            Used to signal that a worker thread is needed for processing. Note that multiple
            threads may be needed simultaneously and as such we use a semaphore instead of
            an auto reset event.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.workerThreads">
            <summary>
            List of all worker threads at the disposal of the thread pool.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.inUseThreads">
            <summary>
            Number of threads currently active.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.#cctor">
            <summary>
            Initialize the thread pool.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Initialize">
            <summary>
            Initializes the thread pool.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queues a user work item to the thread pool.
            </summary>
            <param name="callback">
            A WaitCallback representing the delegate to invoke when the thread in the 
            thread pool picks up the work item.
            </param>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queues a user work item to the thread pool.
            </summary>
            <param name="callback">
            A WaitCallback representing the delegate to invoke when the thread in the 
            thread pool picks up the work item.
            </param>
            <param name="state">
            The object that is passed to the delegate when serviced from the thread pool.
            </param>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Reset">
            <summary>
            Empties the work queue of any queued work items.
            Resets all threads in the pool.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.ProcessQueuedItems">
            <summary>Event raised when there is an exception on a threadpool thread.</summary>
            <summary>A thread worker function that processes items from the work queue.</summary>
        </member>
        <member name="P:KudyStudio.ManagedThreadPool.MaxThreads">
            <summary>
            Gets the number of threads at the disposal of the thread pool.
            </summary>
        </member>
        <member name="P:KudyStudio.ManagedThreadPool.ActiveThreads">
            <summary>
            Gets the number of currently active threads in the thread pool.
            </summary>
        </member>
        <member name="P:KudyStudio.ManagedThreadPool.WaitingCallbacks">
            <summary>
            Gets the number of callback delegates currently waiting in the thread pool.
            </summary>
        </member>
        <member name="T:KudyStudio.ManagedThreadPool.WaitingCallback">
            <summary>
            Used to hold a callback delegate and the state for that delegate.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.WaitingCallback.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>
            Initializes the callback holding object.
            </summary>
            <param name="callback">Callback delegate for the callback.</param>
            <param name="state">State with which to call the callback delegate.</param>
        </member>
        <member name="P:KudyStudio.ManagedThreadPool.WaitingCallback.Callback">
            <summary>
            Gets the callback delegate for the callback.
            </summary>
        </member>
        <member name="P:KudyStudio.ManagedThreadPool.WaitingCallback.State">
            <summary>
            Gets the state with which to call the callback delegate.
            </summary>
        </member>
        <member name="T:KudyStudio.ManagedThreadPool.Semaphore">
            <summary>
            Implementation of Dijkstra's PV Semaphore based on the Monitor class.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.Semaphore.count">
            <summary>
            The number of units alloted by this semaphore.
            </summary>
        </member>
        <member name="F:KudyStudio.ManagedThreadPool.Semaphore.mutex">
            <summary>
            Lock for the semaphore.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.#ctor">
            <summary>
            Initialize the semaphore as a binary semaphore.
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.#ctor(System.Int32)">
            <summary>
            Initialize the semaphore as a counting semaphore.
            </summary>
            <param name="count">Initial number of threads that can take out units from this semaphore.</param>
            <exception cref="T:System.ArgumentException">Throws if the count argument is less than 0.</exception>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.AddOne">
            <summary>
            V the semaphore (add 1 unit to it).
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.WaitOne">
            <summary>
            P the semaphore (take out 1 unit from it).
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.P">
            <summary>
            P the semaphore (take out 1 unit from it).
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.V">
            <summary>
            V the semaphore (add 1 unit to it).
            </summary>
        </member>
        <member name="M:KudyStudio.ManagedThreadPool.Semaphore.Reset(System.Int32)">
            <summary>
            Resets the semaphore to the specified count.  Should be used cautiously.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.ImageUploader">
            <summary>
            A simple image uploader class.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.FileUploader">
            <summary>
            The base uploader calss.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.FileUploader.#ctor">
            <summary>
            Creates a <see cref="T:KudyStudio.Web.FileUploader"/> instance.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.FileUploader.#ctor(System.Web.HttpPostedFile,System.String,System.String,System.Int64,System.String)">
            <summary>
            Creates a <see cref="T:KudyStudio.Web.FileUploader"/> instance and assigns its fields.
            </summary>
            <param name="postedFile">The http posted file from client.</param>
            <param name="saveFolder">The folder to save the file.</param>
            <param name="saveFileName">The file name(without extension) to save.</param>
            <param name="maxFileSize">The max upload size. The value is 1024*1024*10 (10 MB).</param>
            <param name="allowExtensions">The extensions that allow to upload, each extension is separated 
            by comma(,) like "jpg, gif, doc", you can set it empty to allow all.</param>
        </member>
        <member name="M:KudyStudio.Web.FileUploader.CheckValidation">
            <summary>
            Check whether if the file can be uploaded.
            </summary>
            <returns>True if can upload, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Web.FileUploader.Save">
            <summary>
            Saves the posted file to server.
            </summary>
            <returns>The <see cref="T:KudyStudio.Web.UploadResult"/> information after saving.</returns>
        </member>
        <member name="M:KudyStudio.Web.FileUploader.SaveCore">
            <summary>
            Saves the posted file to server.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.Result">
            <summary>
            Gets the upload result information when uploaded.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.PostedFile">
            <summary>
            Gets ot sets the http posted file from client.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.SaveFolder">
            <summary>
            Gets or sets the folder to save the file.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.SaveFileName">
            <summary>
            Gets or sets the file name(without extension) to save, if not set, it 
            simply takes a <see cref="T:System.Guid"/> string.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.MaxFileSize">
            <summary>
            Gets or sets the max upload size. The value is 1024*1024*10 (10 MB).
            </summary>
        </member>
        <member name="P:KudyStudio.Web.FileUploader.AllowExtensions">
            <summary>
            Gets ot sets the extensions that allow to upload, each extension is separated 
            by comma(,) like "jpg, gif, doc", you can set it empty to allow all. The value is empty by default.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.ImageUploader.#ctor">
            <summary>
            Creates a <see cref="T:KudyStudio.Web.FileUploader"/> instance.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.ImageUploader.#ctor(System.Web.HttpPostedFile,System.String,System.String,System.Int64,System.String)">
            <summary>
            Creates a <see cref="T:KudyStudio.Web.FileUploader"/> instance and assigns its fields.
            </summary>
            <param name="postedFile">The http posted file from client.</param>
            <param name="saveFolder">The folder to save the file.</param>
            <param name="saveFileName">The file name(without extension) to save.</param>
            <param name="maxFileSize">The max upload size.</param>
            <param name="allowExtensions">The extensions that allow to upload</param>
        </member>
        <member name="M:KudyStudio.Web.ImageUploader.CheckValidation">
            <summary>
            Check whether if the image can be uploaded.
            </summary>
            <returns>True if can upload, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.Web.ImageUploader.SaveCore">
            <summary>
            Saves the posted image to server.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ImageQuality">
            <summary>
            Gets or sets the quality of the uploaded image.
            The value is 100 by default and must in range [1, 100].
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.Autosizing">
            <summary>
            Gets or sets a bool value indicates whether to enable autosizing.
            The value is false by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.AutosizingMaxWidth">
            <summary>
            Gets or sets the auto max width of the uploaded image.
            The value is 800 by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.AutosizingMaxHeight">
            <summary>
            Gets or sets the auto max height of the uploaded image.
            The value is 600 by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.WatermarkEnabled">
            <summary>
            Gets or sets a bool value indicates whether to enable water mark.
            The value is false by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.WatermarkText">
            <summary>
            Gets or sets the text of watermark.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.WatermarkIconPath">
            <summary>
            Gets or sets the path of watermark icon.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.WatermarkOpacity">
            <summary>
            Gets or sets the opacity of watermark, the value is in range [0,1].
            The value is 0.8 by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.WatermarkPosition">
            <summary>
            Gets or sets the position of watermark.
            The value is WaterImage.WaterPosition.BottomLeft by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailEnabled">
            <summary>
            Gets or sets a bool value indicates whether to enable thumbnail.
            The value is false by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailSaveFolder">
            <summary>
            Gets or sets the path of watermark, if not set, it 
            simply takes the SaveFolder value. If SaveThumbnailFolder is not set, must 
            asign a new value to SaveThumbnailFileName.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailSaveFileName">
            <summary>
            Gets or sets the file name(without extension) of the thumbnail, if not set, it 
            simply takes the SaveFileName value. If SaveThumbnailFolder is not set, must 
            asign a new value to SaveThumbnailFileName.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailMaxWidth">
            <summary>
            Gets or sets the max width of the thumbnail.
            The value is 150 by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailMaxHeight">
            <summary>
            Gets or sets the max height of the thumbnail.
            The value is 150 by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailMode">
            <summary>
            Gets or sets the mode of the thumbnail.
            The value is ThumbnailImage.ThumbnailMode.Cut by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.ImageUploader.ThumbnailQuality">
            <summary>
            Gets or sets the quality of the thumbnail.
            The value is 100 by default and must in range [1, 100].
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Rss(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.Atom(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.AutoDiscovery(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.AutoDiscovery(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="type"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.AutoDiscovery(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="type"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.AutoDiscoveryExtensions.AutoDiscovery(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="href"></param>
            <param name="rel"></param>
            <param name="type"></param>
            <param name="title"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.StringObjectDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:KudyStudio.StringObjectDictionary.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.StringObjectDictionary.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.StringObjectDictionary.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.StringObjectDictionary.Values">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.StringObjectDictionary.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.StringObjectDictionary.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.SendMailEventHandler">
            <summary>
            发送邮件事件委托。
            </summary>
            <param name="e">发送邮件事件数据</param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ResourceDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ResourceDictionary.#ctor(KudyStudio.Web.Mtv.ModeContext,KudyStudio.Web.Mtv.ResourceXmlFile)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="resourceXmlFile"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ResourceDictionary.File(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceDictionary.ModeContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceDictionary.ResourceXmlFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.HandleErrorAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.IExceptionFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.IExceptionFilter.OnException(KudyStudio.Web.Mtv.ExceptionContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TimingTaskServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.TimingTaskServer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.TimingTaskServer.AddTask(KudyStudio.Utility.Tasking.TimingTask)">
            <summary>
            
            </summary>
            <param name="task"></param>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.FNV64">
            <summary>
            Fowler-Noll-Vo hash, 64-bit version.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Algorithms.FNV64.hashValue">
            <summary>
            The current hash value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV64.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:KudyStudio.Utility.Algorithms.FNV64"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV64.Initialize">
            <summary>
            Initializes an instance of <see cref="T:KudyStudio.Utility.Algorithms.FNV64"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV64.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the <see cref="T:KudyStudio.Utility.Algorithms.FNV64"/> hash algorithm for computing the hash.</summary>
            <param name="buffer">The input data.</param>
            <param name="offset">The offset into the byte array from which to begin using data. </param>
            <param name="count">The number of bytes in the array to use as data. </param>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.FNV64.HashFinal">
            <summary>
            Returns the computed <see cref="T:KudyStudio.Utility.Algorithms.FNV64"/> hash value after all data has been written to the object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:KudyStudio.Utility.WebServiceClient">
            <summary>
            Web service client helper class to create a web services dynamically and invoke methods.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebServiceClient.EmptyParameters">
            <summary>
            Empty parameters used in <see cref="M:Invoke"/>. This field is read-only.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:WebServiceClient"/>.
            </summary>
            <param name="url">The url of web service.</param>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Invoke(System.String)">
            <summary>
            Invokes the method or constructor represented by the current instance, using 
            the <see cref="F:WebServiceClient.EmptyParameters"/>.
            </summary>
            <param name="methodName">The name of the method.</param>
            <returns>An object containing the return value of the invoked method, or null in the case of a constructor.</returns>
            <exception cref="T:InvalidOperationException">The method does not exist.</exception>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Invoke(System.Reflection.MethodInfo)">
            <summary>
            Invokes the method or constructor represented by the current instance, using 
            the <see cref="F:WebServiceClient.EmptyParameters"/>.
            </summary>
            <param name="method">A <see cref="T:MethodInfo"/> instance.</param>
            <returns>An object containing the return value of the invoked method, or null in the case of a constructor.</returns>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Invoke(System.String,System.Object[])">
            <summary>
            Invokes the method or constructor represented by the current instance, using 
            the specified parameters.
            </summary>
            <param name="methodName"></param>
            <param name="parameters">
            An argument list for the invoked method or constructor. This is an array 
            of objects with the same number, order, and type as the parameters of the
            method or constructor to be invoked. If there are no parameters, parameters
            should be null.  If the method or constructor represented by this instance
            takes a ref parameter (ByRef in Visual Basic), no special attribute is required
            for that parameter in order to invoke the method or constructor using this
            function. Any object in this array that is not explicitly initialized with
            a value will contain the default value for that object type. For reference-type
            elements, this value is null. For value-type elements, this value is 0, 0.0,
            or false, depending on the specific element type.</param>
            <returns>An object containing the return value of the invoked method, or null in the case of a constructor.</returns>
            <exception cref="T:InvalidOperationException">The method does not exist.</exception>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Invoke(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Invokes the method or constructor represented by the current instance, using 
            the specified parameters.
            </summary>
            <param name="method">A <see cref="T:MethodInfo"/> instance.</param>
            <param name="parameters">
            An argument list for the invoked method or constructor. This is an array 
            of objects with the same number, order, and type as the parameters of the
            method or constructor to be invoked. If there are no parameters, parameters
            should be null.  If the method or constructor represented by this instance
            takes a ref parameter (ByRef in Visual Basic), no special attribute is required
            for that parameter in order to invoke the method or constructor using this
            function. Any object in this array that is not explicitly initialized with
            a value will contain the default value for that object type. For reference-type
            elements, this value is null. For value-type elements, this value is 0, 0.0,
            or false, depending on the specific element type.</param>
            <returns>An object containing the return value of the invoked method, or null in the case of a constructor.</returns>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.GetMethod(System.String)">
            <summary>
            Gets a <see cref="T:MethodInfo"/> instance by it's name.
            </summary>
            <param name="methodName">The name of a method.</param>
            <returns>A <see cref="T:MethodInfo"/> instance.</returns>
            <exception cref="T:InvalidOperationException">The method does not exist.</exception>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Exists(System.String)">
            <summary>
            Checks if a given named <see cref="T:WebServiceClient"/> instance exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <returns>true if the given named <see cref="T:WebServiceClient"/> instance exists, otherwise false.</returns>
            <exception cref="T:ArgumentException">The name is null or empty.</exception>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Fetch(System.String)">
            <summary>
            Fetch the instance using the given name.
            This method will first check for named instances that has been created programmatically.
            If no such instance exists, an exception is thrown.
            </summary>
            <param name="name">The name of the instance.</param>
            <returns>The named instance.</returns>
        </member>
        <member name="M:KudyStudio.Utility.WebServiceClient.Create(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:WebServiceClient"/> using the specified name and url.
            This method will throw an exception if the name already exists.
            </summary>
            <param name="name">The name of the instance.</param>
            <param name="url">The url of the instance.</param>
            <returns>A new <see cref="T:WebServiceClient"/> instance.</returns>
            <exception cref="T:InvalidOperationException">The given named <see cref="T:WebServiceClient"/> instance has not been created.</exception>
        </member>
        <member name="P:KudyStudio.Utility.WebServiceClient.Url">
            <summary>
            Gets the url of web service.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.WebServiceClient.Type">
            <summary>
            Gets the <see cref="T:Type"/> of the web service.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.WebServiceClient.Instance">
            <summary>
            Gets the client instance of the web service.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.WebServiceClient.Methods">
            <summary>
            Gets all methods of the web service.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.WebRequestHelper">
            <summary>
            WebRequestHelper
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebRequestHelper.DefaultHttpContentType">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebRequestHelper.DefaultHttpAccept">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebRequestHelper.DefaultHttpUserAgent">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebRequestHelper.UTF8Encoding">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.WebRequestHelper.GB2312Encoding">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookies"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookies"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookies"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="cookies"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="cookies"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.String,System.String,System.String,System.String@)">
            <summary>
            TEMP
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="cookies">The cookies associated with the request. join with ';'</param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="domain"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Net.CookieContainer,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpGet(System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String,System.String,System.String,System.String@)">
            <summary>
            TEMP
            </summary>
            <param name="url">The URI that identifies the Internet resource.</param>
            <param name="userAgent">The value of the User-agent HTTP header.</param>
            <param name="accept">The value of the Accept HTTP header.</param>
            <param name="contentType">The value of the Content-type HTTP header.</param>
            <param name="language">The value of the Accept-Language HTTP header.</param>
            <param name="referer">The value of the Referer HTTP header.</param>
            <param name="cookieContainer">The cookies associated with the request.</param>
            <param name="encoding">The character encoding to use for reading the responsed stream.</param>
            <param name="allowAutoRedirect">A value that indicates whether the request should follow redirection responses.</param>
            <param name="userName">The username of the authentication credentials associated with the request.</param>
            <param name="password">The password of the authentication credentials associated with the request.</param>
            <param name="domain">The domain of the authentication credentials associated with the request.</param>
            <param name="responseUrl">The URI of the Internet resource that responded to the request.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding,System.Boolean,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer,System.Text.Encoding,System.Boolean,System.String,System.String,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="domain"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.HttpPost(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Net.CookieContainer@,System.Text.Encoding,System.Boolean,System.String,System.String,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="accept"></param>
            <param name="contentType"></param>
            <param name="language"></param>
            <param name="referer"></param>
            <param name="postData"></param>
            <param name="cookieContainer"></param>
            <param name="encoding"></param>
            <param name="allowAutoRedirect"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="domain"></param>
            <param name="responseUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.WebRequestHelper.GetAllCookiesFromHeader(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strHeader"></param>
            <param name="strHost"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Utility.WebRequestHelper.JavaScriptTime">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.JScriptUtil">
            <summary>
            Provides convenient functionalities for dealing with javascirpt.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.Escape(System.String)">
            <summary>
            Converts the specified string to use the % character to escape reserved characters 
            (@, *, _, +, -, ., /) and express them in Unicode notation.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>A new copy of string in which the reserved characters are escaped by the % character and expressed in Unicode.</returns>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.Unescape(System.String)">
            <summary>
            Converts % escaped characters (@, *, _, +, -, ., /) in the specified string 
            to their original form. The escaped characters are expressed in Unicode notation.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>A new copy of string in which the escaped characters are converted to their original form.</returns>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.EncodeURI(System.String)">
            <summary>
            Encodes the specified Uniform Resource Identifier (URI), accounting for reserved characters.
            </summary>
            <param name="uri">The URI to encode.</param>
            <returns>The encoded version of uri.</returns>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.DecodeURI(System.String)">
            <summary>
            Decodes the specified Uniform Resource Identifier (URI), accounting for reserved characters.
            </summary>
            <param name="encodedURI">The URI to decode.</param>
            <returns>The decoded version of encodedURI.</returns>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.EncodeURIComponent(System.String)">
            <summary>
            Encodes the specified Uniform Resource Identifier (URI).
            </summary>
            <param name="uriComponent">The URI to encode.</param>
            <returns>The encoded version of uriComponent.</returns>
        </member>
        <member name="M:KudyStudio.Web.JScriptUtil.DecodeURIComponent(System.String)">
            <summary>
            Decodes the specified Uniform Resource Identifier (URI).
            </summary>
            <param name="encodedURI">The URI to decode.</param>
            <returns>The decoded version of encodedURI.</returns>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.CasResult">
            <summary>
            Represents the results that method <see cref="M:MemcachedClient.CheckAndSet"/> will return.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CasResult.Stored">
            <summary>
            The data is stored successfully.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CasResult.Exists">
            <summary>
            Iindicate that the item you are trying to store with a <see cref="M:MemcachedClient.CheckAndSet"/> 
            call has been modified since you last fetched it.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CasResult.NotStored">
            <summary>
            Indicates the data was not stored, but not because of an error. 
            This normally means that either that the condition for an <see cref="M:MemcachedClient.Add"/> 
            call or a <see cref="M:MemcachedClient.Replace"/> call wasn't met, or that the item is in a delete queue.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CasResult.NotFound">
            <summary>
            Iindicates that the item you are trying to store with a <see cref="M:MemcachedClient.CheckAndSet"/> call 
            did not exist or has been deleted.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.ErrorContext">
            <summary>
            Provides information surrounding an error.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorContext.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorContext.OriginalObject">
            <summary>
            Gets the original object that caused the error.
            </summary>
            <value>The original object that caused the error.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorContext.Member">
            <summary>
            Gets the member that caused the error.
            </summary>
            <value>The member that caused the error.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorContext.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.ErrorContext"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.ObjectCreationHandling">
            <summary>
            Specifies how object creation is handled by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ObjectCreationHandling.Auto">
            <summary>
            Reuse existing objects, create new objects when needed.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ObjectCreationHandling.Reuse">
            <summary>
            Only reuse existing objects.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ObjectCreationHandling.Replace">
            <summary>
            Always create new objects.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonConvert">
            <summary>
            Provides methods for converting between common language runtime types and JSON types.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.True">
            <summary>
            Represents JavaScript's boolean value true as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.False">
            <summary>
            Represents JavaScript's boolean value false as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.Null">
            <summary>
            Represents JavaScript's null as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.Undefined">
            <summary>
            Represents JavaScript's undefined as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.PositiveInfinity">
            <summary>
            Represents JavaScript's positive infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.NegativeInfinity">
            <summary>
            Represents JavaScript's negative infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.JsonConvert.NaN">
            <summary>
            Represents JavaScript's NaN as a string. This field is read-only.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.DateTimeOffset)">
            <summary>
            Converts the <see cref="T:System.DateTimeOffset"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Boolean)">
            <summary>
            Converts the <see cref="T:System.Boolean"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Char)">
            <summary>
            Converts the <see cref="T:System.Char"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Char"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Enum)">
            <summary>
            Converts the <see cref="T:System.Enum"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Enum"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Int32)">
            <summary>
            Converts the <see cref="T:System.Int32"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Int16)">
            <summary>
            Converts the <see cref="T:System.Int16"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.UInt16)">
            <summary>
            Converts the <see cref="T:System.UInt16"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt16"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.UInt32)">
            <summary>
            Converts the <see cref="T:System.UInt32"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Int64)">
            <summary>
            Converts the <see cref="T:System.Int64"/>  to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.UInt64)">
            <summary>
            Converts the <see cref="T:System.UInt64"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Single)">
            <summary>
            Converts the <see cref="T:System.Single"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Double)">
            <summary>
            Converts the <see cref="T:System.Double"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Byte)">
            <summary>
            Converts the <see cref="T:System.Byte"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.SByte)">
            <summary>
            Converts the <see cref="T:System.SByte"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Decimal)">
            <summary>
            Converts the <see cref="T:System.Decimal"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Guid)">
            <summary>
            Converts the <see cref="T:System.Guid"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.String,System.Char)">
            <summary>
            Converts the <see cref="T:System.String"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="delimter">The string delimiter character.</param>
            <returns>A JSON string representation of the <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.ToString(System.Object)">
            <summary>
            Converts the <see cref="T:System.Object"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeObject(System.Object)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeObject(System.Object,KudyStudio.Utility.Json.Formatting)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeObject(System.Object,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using a collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeObject(System.Object,KudyStudio.Utility.Json.Formatting,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using a collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeObject(System.Object,KudyStudio.Utility.Json.Formatting,KudyStudio.Utility.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using a collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="settings">The <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/> used to serialize the object.
            If this is null, default serialization settings will be is used.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject(System.String)">
            <summary>
            Deserializes the specified object to a Json object.
            </summary>
            <param name="value">The object to deserialize.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject(System.String,System.Type)">
            <summary>
            Deserializes the specified object to a Json object.
            </summary>
            <param name="value">The object to deserialize.</param>
            <param name="type">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject``1(System.String)">
            <summary>
            Deserializes the specified object to a Json object.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="value">The object to deserialize.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeAnonymousType``1(System.String,``0)">
            <summary>
            Deserializes the specified JSON to the given anonymous type.
            </summary>
            <typeparam name="T">
            The anonymous type to deserialize to. This can't be specified
            traditionally and must be infered from the anonymous type passed
            as a parameter.
            </typeparam>
            <param name="value">The object to deserialize.</param>
            <param name="anonymousTypeObject">The anonymous type object.</param>
            <returns>The deserialized anonymous type from the JSON string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject``1(System.String,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON string to the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="value">The object to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject``1(System.String,KudyStudio.Utility.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON string to the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="value">The object to deserialize.</param>
            <param name="settings">
            The <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject(System.String,System.Type,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON string to the specified type.
            </summary>
            <param name="value">The object to deserialize.</param>
            <param name="type">The type of the object to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeObject(System.String,System.Type,KudyStudio.Utility.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON string to the specified type.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize.</param>
            <param name="settings">
            The <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.PopulateObject(System.String,System.Object)">
            <summary>
            Populates the object with values from the JSON string.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.PopulateObject(System.String,System.Object,KudyStudio.Utility.Json.JsonSerializerSettings)">
            <summary>
            Populates the object with values from the JSON string.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
            <param name="settings">
            The <see cref="T:KudyStudio.Utility.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeXNode(System.Xml.Linq.XObject)">
            <summary>
            Serializes the <see cref="T:System.Xml.Linq.XNode"/> to a JSON string.
            </summary>
            <param name="node">The node to convert to JSON.</param>
            <returns>A JSON string of the XNode.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeXNode(System.Xml.Linq.XObject,KudyStudio.Utility.Json.Formatting)">
            <summary>
            Serializes the <see cref="T:System.Xml.Linq.XNode"/> to a JSON string.
            </summary>
            <param name="node">The node to convert to JSON.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>A JSON string of the XNode.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeXNode(System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.Linq.XNode"/> from a JSON string.
            </summary>
            <param name="value">The JSON string.</param>
            <returns>The deserialized XNode</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeXNode(System.String,System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.Linq.XNode"/> from a JSON string nested in a root elment.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <returns>The deserialized XNode</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode)">
            <summary>
            Serializes the XML node to a JSON string.
            </summary>
            <param name="node">The node to serialize.</param>
            <returns>A JSON string of the XmlNode.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode,KudyStudio.Utility.Json.Formatting)">
            <summary>
            Serializes the XML node to a JSON string.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>A JSON string of the XmlNode.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeXmlNode(System.String)">
            <summary>
            Deserializes the XmlNode from a JSON string.
            </summary>
            <param name="value">The JSON string.</param>
            <returns>The deserialized XmlNode</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConvert.DeserializeXmlNode(System.String,System.String)">
            <summary>
            Deserializes the XmlNode from a JSON string nested in a root elment.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <returns>The deserialized XmlNode</returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1">
            <summary>
            
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase.ContextHeaderLocalName">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase.ContextHeaderNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase.ReturnMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.ConvertTimeToUtc(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.ConvertTimeFromUtc(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.GetServicePort">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.GetServiceName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.GetRemoteEndpointAddress">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.GetRemoteEndpointAddress(System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.GetConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextBase`1.TimeZone">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleAddedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleAddedEventArgs.#ctor(KudyStudio.Frameworks.WcfModuleFramework.WorkingModule)">
            <summary>
            
            </summary>
            <param name="module"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleAddedEventArgs.Module">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.ICallHandler">
            <summary>
            All of the custom call handler must direcly or indirectly impplement this interface.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.ICallHandler.PreInvoke(KudyStudio.Frameworks.AopFramework.InvocationContext)">
            <summary>
            This method will be injected into the invocation stack prior to invoke target method.
            </summary>
            <param name="context">A <see cref="T:KudyStudio.Frameworks.AopFramework.InvocationContext"/> object indicating the current method invocation context.</param>
            <returns>The user state which can be picked up in the PostInvoke method.</returns>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.ICallHandler.PostInvoke(KudyStudio.Frameworks.AopFramework.InvocationContext,System.Object)">
            <summary>
            This method will be injected into the invocation stack after target method is invoked.
            </summary>
            <param name="context">A <see cref="T:KudyStudio.Frameworks.AopFramework.InvocationContext"/> object indicating the current method invocation context.</param>
            <param name="correlationState">The user state returned from the Preinvoke method.</param>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.ICallHandler.Ordinal">
            <summary>
            A <see cref="T:System.Int32"/> value indicating the position where the call handler is placed in the pipeline.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.ICallHandler.ReturnIfError">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether to directly return if encountering error.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.CallHandlerBase">
            <summary>
            The base class of all custom call handler.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerBase.PreInvoke(KudyStudio.Frameworks.AopFramework.InvocationContext)">
            <summary>
            The method will be injected into the invocation stack prior to execute the target method.
            </summary>
            <param name="context">A <see cref="T:KudyStudio.Frameworks.AopFramework.InvocationContext"/> object presenting the current method invocation context.</param>
            <returns>A state object which can be pick up by PostInvoke method.</returns>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.CallHandlerBase.PostInvoke(KudyStudio.Frameworks.AopFramework.InvocationContext,System.Object)">
            <summary>e
            The method will be injected into the invication stack after the target method is invoked.
            </summary>
            <param name="context">A <see cref="T:KudyStudio.Frameworks.AopFramework.InvocationContext"/> object presenting the current method invocation context.</param>
            <param name="correlationState">A sate object returned from PreInvoke method.</param>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.CallHandlerBase.Ordinal">
            <summary>
            A <see cref="T:System.Int32"/> value indicating the position where the call handler is placed in the pipeline.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.CallHandlerBase.ReturnIfError">
            <summary>
            A <see cref="T:System.Boolean"/> value indicating whether to directly return if encountering error.
            </summary>
        </member>
        <member name="T:KudyStudio.ThumbnailMode">
            <summary>
            Specifies the modes used in <see cref="T:KudyStudio.ThumbnailImageHelper"/> to generate or 
            save thumbnail images. The Cut and AutoScaling mode are recommended.
            </summary>
        </member>
        <member name="F:KudyStudio.ThumbnailMode.None">
            <summary>
            Specify the width and height scaling (possibly deformed).
            </summary>
        </member>
        <member name="F:KudyStudio.ThumbnailMode.Width">
            <summary>
            Specify the width and height in proportion to.
            </summary>
        </member>
        <member name="F:KudyStudio.ThumbnailMode.Height">
            <summary>
            Specify the height and width in proportion to.
            </summary>
        </member>
        <member name="F:KudyStudio.ThumbnailMode.Cut">
            <summary>
            Specify the height and width of the cut (not deformed, it is recommended to use this mode).
            </summary>
        </member>
        <member name="F:KudyStudio.ThumbnailMode.AutoScaling">
            <summary>
            Scaling according to width and height automatically.
            </summary>
        </member>
        <member name="T:KudyStudio.CaptchaOptions">
            <summary>
            Specifies the options for generating captcha images.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaOptions.DrawCurve">
            <summary>
            Draws the background to the captcha image.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaOptions.DrawBackground">
            <summary>
            Draws the background to the captcha image.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.Rewriter">
            <summary>
            The rewriter helper class.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.Rewriter.ResolveRootUrl(System.String)">
            <summary>
            Resolve the virtual url.
            </summary>
            <param name="virtualUrl">The virtual url to be resolved.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.UrlRewriting.Rewriter.AppendUrlParameter(System.String,System.String)">
            <summary>
            Append url parameters to the destination url.
            </summary>
            <param name="destinationUrl">The destination url to be resolved.</param>
            <param name="requestQuerystring">The request querystring to be appended with.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.TempUtil.InIpAddressArray(System.String,System.String[])">
            <summary>
            Gets a bool value indicating whether the given ip is in the specified ip array or not.
            The ips in ip array can use * to represent any ip section (e.g. 192.168.1.*).
            </summary>
            <param name="ip">The ip to check.</param>
            <param name="ipArray">A ip array to check with.</param>
            <returns>True if in array, false otherwise.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvException">
            <summary>
            Exception during mtv page processing.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MtvException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MtvException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MtvException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MtvException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.JsonExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.JsonExtensions.ToJsonString``1(``0)">
            <summary>
            Converts a .NET object to a string of Json.
            </summary>
            <typeparam name="T">The type of source.</typeparam>
            <param name="value">Object to convert.</param>
            <returns>A json string represting the object parameter. The return value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.ToJsonString``1(``0,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a .NET object to a string of Json.
            </summary>
            <typeparam name="T">The type of source.</typeparam>
            <param name="value">Object to convert.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>A json string represting the object parameter. The return value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.ToJsonStringEx``1(``0)">
            <summary>
            Converts a .NET object to a Json string.
            </summary>
            <typeparam name="T">The type of source.</typeparam>
            <param name="value">Object to convert.</param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.ToJsonStringEx``1(``0,System.Boolean)">
            <summary>
            Converts a .NET object to a Json string.
            </summary>
            <typeparam name="T">The type of source.</typeparam>
            <param name="value">Object to convert.</param>
            <param name="formatDate"></param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonString(System.String,System.Type)">
            <summary>
            Converts a string of Json to the supplied object type. 
            You will need to cast this object back to its expected type. 
            </summary>
            <param name="json">Json representing a .NET object.</param>
            <param name="type">The type of object which the Json represents.</param>
            <returns>A instance of object or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonString(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a string of Json to the supplied object type. 
            You will need to cast this object back to its expected type. 
            </summary>
            <param name="json">Json representing a .NET object.</param>
            <param name="type">The type of object which the Json represents.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>A instance of object or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonString``1(System.String)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <returns>A instance of T or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonString``1(System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>A instance of T or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonStringEx``1(System.String)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.JsonExtensions.FromJsonStringEx``1(System.String,System.Boolean)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <param name="formatDate"></param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.PagingExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingTextType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="textType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingTextType,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="textType"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingAlign)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32,KudyStudio.Web.Mtv.Html.PagingTextType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <param name="textType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32,KudyStudio.Web.Mtv.Html.PagingTextType,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="htmlColor"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <param name="textType"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingTextType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="textType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingTextType,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="textType"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingAlign)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="align"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32,KudyStudio.Web.Mtv.Html.PagingTextType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <param name="textType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.Paging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,KudyStudio.Web.Mtv.Html.PagingColor,KudyStudio.Web.Mtv.Html.PagingAlign,System.Int32,KudyStudio.Web.Mtv.Html.PagingTextType,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="color"></param>
            <param name="textType"></param>
            <param name="renderOption"></param>
            <param name="align"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.CustomPaging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="divClass"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.CustomPaging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingTextType)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="divClass"></param>
            <param name="textType"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.CustomPaging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="divClass"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.PagingExtensions.CustomPaging(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32,System.String,KudyStudio.Web.Mtv.Html.PagingTextType,KudyStudio.Web.Mtv.Html.PagingRenderOption)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="urlFormat"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="pageCount"></param>
            <param name="divClass"></param>
            <param name="textType"></param>
            <param name="renderOption"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ExceptionContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ExceptionContext.#ctor(KudyStudio.Web.Mtv.ModeContext,System.Exception)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="exception"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ExceptionContext.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ExceptionContext.ExceptionHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ExceptionContext.FilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Config.MtvConfigElement">
            <summary>
            Represents a configuration element for MTV web framework. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.Theme">
            <summary>
            Gets the Theme of MTV configuration.
            The value is <c>Default</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.Language">
            <summary>
            Gets the Language of MTV configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.DrivePage">
            <summary>
            Gets the DrivePage of MTV configuration.
            The value is <c>Default.aspx</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.SiteDomain">
            <summary>
            Gets the SiteDomain of MTV configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.UrlExtension">
            <summary>
            Gets the UrlExtension of MTV configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.Debug">
            <summary>
            Gets the Debug of MTV configuration.
            The value is <c>false</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.Languages">
            <summary>
            Gets the Languages of MTV configuration.
            The value is an empty list by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Config.MtvConfigElement.Register">
            <summary>
            Gets the Register of MTV configuration.
            The value is an empty list by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.PathHelpers.AppVirtualPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.QueueTaskPriority">
            <summary>
            Specifies the priority of a <see cref="T:Task"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Tasking.QueueTaskPriority.Normal">
            <summary>
            The task has normal priority.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Tasking.QueueTaskPriority.Low">
            <summary>
            The task has low priority.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Tasking.QueueTaskPriority.High">
            <summary>
            The task has high priority.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.QueueTask">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTask.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTask.ExecuteCore(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.QueueTask.SleepMilliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.QueueTask.Priority">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewMasterPage`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewMasterPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.ViewPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.ViewContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage`1.ViewPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage`1.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage`1.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewMasterPage`1.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.Config.PluginFrameworkConfigElement">
            <summary>
            Represents a configuration element for plugin framework. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.Config.PluginFrameworkConfigElement.HostType">
            <summary>
            Gets the HostType of plugin framework configuration.
            The value is <c>KudyStudio.Frameworks.PlugInFramework.CatalogPlugInHost, KudyStudio</c> by default.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.Config.FrameworksConfigSectionElement">
            <summary>
            Represents a configuration element for KudyStudio.Frameworks namespace.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.Config.FrameworksConfigSectionElement.PluginFramework">
            <summary>
            Gets the configuration of plugin framework.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.Config.FrameworksConfigSectionElement.WcfModuleFramework">
            <summary>
            Gets the configuration of module framework.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.OnSystemStartTrigger">
            <summary>
            Trigger that fires when the system starts.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnSystemStartTrigger.#ctor">
            <summary>
            Creates an OnSystemStartTrigger.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnSystemStartTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger interface from system Task Scheduler.</param>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger">
            <summary>
            Trigger that fires at a specified time, on specified days of the week, 
            in specified weeks of the month, during specified months of the year.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.#ctor(System.Int16,System.Int16,KudyStudio.Utility.TaskScheduler.DaysOfTheWeek,KudyStudio.Utility.TaskScheduler.WhichWeek,KudyStudio.Utility.TaskScheduler.MonthsOfTheYear)">
            <summary>
            Creates a MonthlyDOWTrigger that fires during specified months only.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minute of the hour trigger will fire.</param>
            <param name="daysOfTheWeek">Days of the week trigger will fire.</param>
            <param name="whichWeeks">Weeks of the month trigger will fire.</param>
            <param name="months">Months of the year trigger will fire.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.#ctor(System.Int16,System.Int16,KudyStudio.Utility.TaskScheduler.DaysOfTheWeek,KudyStudio.Utility.TaskScheduler.WhichWeek)">
            <summary>
            Creates a MonthlyDOWTrigger that fires every month.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minute of the hour trigger will fire.</param>
            <param name="daysOfTheWeek">Days of the week trigger will fire.</param>
            <param name="whichWeeks">Weeks of the month trigger will fire.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from the system Task Scheduler.</param>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.WhichWeeks">
            <summary>
            Gets or sets weeks of the month in which trigger will fire.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.WeekDays">
            <summary>
            Gets or sets days of the week on which trigger will fire.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.MonthlyDOWTrigger.Months">
            <summary>
            Gets or sets months of the year in which trigger will fire.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)">
            <summary>
            Gets the type of the typed collection's items.
            </summary>
            <param name="type">The type.</param>
            <returns>The type of the typed collection's items.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.ItemsUnitializedValue``1(System.Collections.Generic.IList{``0})">
            <summary>
            Tests whether the list's items are their unitialized value.
            </summary>
            <param name="list">The list.</param>
            <returns>Whether the list's items are their unitialized value</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)">
            <summary>
            Gets the member's underlying type.
            </summary>
            <param name="member">The member.</param>
            <returns>The underlying type of the member.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)">
            <summary>
            Determines whether the member is an indexed property.
            </summary>
            <param name="member">The member.</param>
            <returns>
            	<c>true</c> if the member is an indexed property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the property is an indexed property.
            </summary>
            <param name="property">The property.</param>
            <returns>
            	<c>true</c> if the property is an indexed property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo,System.Object)">
            <summary>
            Gets the member's value on the object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target object.</param>
            <returns>The member's value on the object.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            Sets the member's value on the target object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be read.
            </summary>
            <param name="member">The MemberInfo to determine whether can be read.</param>
            /// <param name="nonPublic">if set to <c>true</c> then allow the member to be gotten non-publicly.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be read; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be set.
            </summary>
            <param name="member">The MemberInfo to determine whether can be set.</param>
            <param name="nonPublic">if set to <c>true</c> then allow the member to be set non-publicly.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be set; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonProperty">
            <summary>
            Maps a JSON property to a .NET member.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.ValueProvider">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Serialization.IValueProvider"/> that will get and set the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> during serialization.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Serialization.IValueProvider"/> that will get and set the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> during serialization.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.PropertyType">
            <summary>
            Gets or sets the type of the property.
            </summary>
            <value>The type of the property.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.Converter">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> for the property.
            If set this converter takes presidence over the contract converter for the property type.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.Ignored">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> is ignored.
            </summary>
            <value><c>true</c> if ignored; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.Readable">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> is readable.
            </summary>
            <value><c>true</c> if readable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.Writable">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> is writable.
            </summary>
            <value><c>true</c> if writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.MemberConverter">
            <summary>
            Gets the member converter.
            </summary>
            <value>The member converter.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.Required">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> is required.
            </summary>
            <value>A value indicating whether this <see cref="T:KudyStudio.Utility.Json.Serialization.JsonProperty"/> is required.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.IsReference">
            <summary>
            Gets a value indicating whether this property preserves object references.
            </summary>
            <value>
            	<c>true</c> if this instance is reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.NullValueHandling">
            <summary>
            Gets the property null value handling.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.DefaultValueHandling">
            <summary>
            Gets the property default value handling.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.ReferenceLoopHandling">
            <summary>
            Gets the property reference loop handling.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.ObjectCreationHandling">
            <summary>
            Gets the property object creation handling.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.TypeNameHandling">
            <summary>
            Gets or sets the type name handling.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonProperty.ShouldSerialize">
            <summary>
            Gets or sets a predicate used to determine whether the property should be serialize.
            </summary>
            <value>A predicate used to determine whether the property should be serialize.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonPrimitiveContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonPrimitiveContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonPrimitiveContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonArrayContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonArrayContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonArrayContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.ErrorEventArgs">
            <summary>
            Provides data for the Error event.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.ErrorEventArgs.#ctor(System.Object,KudyStudio.Utility.Json.Serialization.ErrorContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.ErrorEventArgs"/> class.
            </summary>
            <param name="currentObject">The current object.</param>
            <param name="errorContext">The error context.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorEventArgs.CurrentObject">
            <summary>
            Gets the current object the error event is being raised against.
            </summary>
            <value>The current object the error event is being raised against.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.ErrorEventArgs.ErrorContext">
            <summary>
            Gets the error context.
            </summary>
            <value>The error context.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.UndefinedSchemaIdHandling">
            <summary>
            Specifies undefined schema Id handling options for the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.UndefinedSchemaIdHandling.None">
            <summary>
            Do not infer a schema Id.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.UndefinedSchemaIdHandling.UseTypeName">
            <summary>
            Use the .NET type name as the schema Id.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.UndefinedSchemaIdHandling.UseAssemblyQualifiedName">
            <summary>
            Use the assembly qualified .NET type name as the schema Id.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver">
            <summary>
            Resolves <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from an id.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaResolver.GetSchema(System.String)">
            <summary>
            Gets a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> for the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> for the specified id.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchemaResolver.LoadedSchemas">
            <summary>
            Gets or sets the loaded schemas.
            </summary>
            <value>The loaded schemas.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.PreserveReferencesHandling">
            <summary>
            Specifies reference handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.PreserveReferencesHandling.None">
            <summary>
            Do not preserve references when serializing types.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.PreserveReferencesHandling.Objects">
            <summary>
            Preserve references when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.PreserveReferencesHandling.Arrays">
            <summary>
            Preserve references when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.PreserveReferencesHandling.All">
            <summary>
            Preserve references when serializing.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonTextWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Creates an instance of the <c>JsonWriter</c> class using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="textWriter">The <c>TextWriter</c> to write to.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteEnd(KudyStudio.Utility.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text. 
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextWriter.Indentation">
            <summary>
            Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="T:Formatting"/> is set to <c>Formatting.Indented</c>.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextWriter.QuoteChar">
            <summary>
            Gets or sets which character to use to quote attribute values.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextWriter.IndentChar">
            <summary>
            Gets or sets which character to use for indenting when <see cref="T:Formatting"/> is set to <c>Formatting.Indented</c>.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextWriter.QuoteName">
            <summary>
            Gets or sets a value indicating whether object names will be surrounded with quotes.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonTextReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonReader"/> class with the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="reader">The <c>TextReader</c> containing the XML data to read.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextReader.Close">
            <summary>
            Changes the state to closed. 
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonTextReader.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if LineNumber and LinePosition can be provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextReader.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>
            The current line number or 0 if no line information is available (for example, HasLineInfo returns false).
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonTextReader.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>
            The current line position or 0 if no line information is available (for example, HasLineInfo returns false).
            </value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.DataTableConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataTable"/> to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataTableConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataTableConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataTableConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.ChineseUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.ChineseUtil.IsChineseChar(System.Char)">
            <summary>
            Indicates whether the specified char is chinese char.
            </summary>
            <param name="ch">The char to check</param>
            <returns>true if the char is chinese char, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ChineseUtil.ConvertToSimplifiedChinese(System.String)">
            <summary>
            Converts a string to simplified chinese.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted simplified chinese string.</returns>
        </member>
        <member name="M:KudyStudio.ChineseUtil.ConvertToTraditionalChinese(System.String)">
            <summary>
            Converts a string to traditional chinese.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted traditional chinese string.</returns>
        </member>
        <member name="M:KudyStudio.ChineseUtil.ConvertToChineseSpelling(System.String)">
            <summary>
            Converts a chinese string to spell string.
            </summary>
            <param name="chinese">The chinese string to convert.</param>
            <returns>The converted spell string.</returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Load">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.GetChannelContextTypesForRoutingService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.IsLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.RoutingEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.ModuleDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.TokenResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.PortConfigManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.WorkingModules">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Loading">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Loaded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Unloading">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.Unloaded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.ModuleLoadFailed">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.ModuleStateChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.WorkingModuleAdded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.IModuleHost.WorkingModuleRemoved">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleClient.CreateChannel``2(System.String,System.Int32,System.Action{``1},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="TModule"></typeparam>
            <typeparam name="TChannel"></typeparam>
            <param name="server"></param>
            <param name="port"></param>
            <param name="action"></param>
            <param name="routingServers"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleClient.CreateChannel``3(System.String,System.Int32,System.Func{``1,``2},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="TModule"></typeparam>
            <typeparam name="TChannel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="server"></param>
            <param name="port"></param>
            <param name="action"></param>
            <param name="routingServers"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleClient.CreateChannel``2(System.String,System.Int32,System.ServiceModel.NetTcpBinding,System.Action{``1},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="TModule"></typeparam>
            <typeparam name="TChannel"></typeparam>
            <param name="server"></param>
            <param name="port"></param>
            <param name="binding"></param>
            <param name="action"></param>
            <param name="routingServers"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleClient.CreateChannel``3(System.String,System.Int32,System.ServiceModel.NetTcpBinding,System.Func{``1,``2},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="TModule"></typeparam>
            <typeparam name="TChannel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="server"></param>
            <param name="port"></param>
            <param name="binding"></param>
            <param name="action"></param>
            <param name="routingServers"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.NullChannelVerifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.NullChannelVerifier.VerifyChannel(System.Object,System.ServiceModel.Channels.Message)">
            <summary>
            
            </summary>
            <param name="contextState"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleStateChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleStateChangedEventArgs.#ctor(KudyStudio.Frameworks.WcfModuleFramework.IModule)">
            <summary>
            
            </summary>
            <param name="module"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleStateChangedEventArgs.Module">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextHttpModuleBase`1">
            <summary>
            
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextHttpModuleBase`1.Init(System.Web.HttpApplication)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ChannelContextHttpModuleBase`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.ObjectBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.ObjectBuilder.Create``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.ObjectBuilder.CreateCallHandlerPipeline``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.InvocationContext">
            <summary>
            InvocationContext represents the context of a method invocation.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InvocationContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.InvocationContext.Request">
            <summary>
            A <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage"/> object represents the method call.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.InvocationContext.Reply">
            <summary>
            A <see cref="T:System.Runtime.Remoting.Messaging.ReturnMessage"/> object represents the return of the method call.
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.AopFramework.InvocationContext.ExtraData">
            <summary>
            A IDictionary object used to set extra contextual information.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.CacheEntity">
            <summary>
            Represents an object either being sent to the cache or being retrieved from the cache.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.CacheEntity.Empty">
            <summary>
            An empty <see cref="T:KudyStudio.Caching.Memcached.CacheEntity"/> object. This field is a read-only.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.CacheEntity.#ctor(System.ArraySegment{System.Byte},KudyStudio.Caching.Memcached.CacheFlags)">
            <summary>
            Creates a new instance of <see cref="T:KudyStudio.Caching.Memcached.CacheEntity"/>.
            </summary>
            <param name="data">The serialized data.</param>
            <param name="flags">Flags of data.</param>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.CacheEntity.Data">
            <summary>
            The data representing the item being stored/retireved.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.CacheEntity.Flags">
            <summary>
            Flags of data in this instance.
            </summary>
        </member>
        <member name="T:KudyStudio.WatermarkImageHelper">
            <summary>
            A helper class to create or save watermark images.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="originalImagePath">The path of the original image.This is also the path to save the water.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.String,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImagePath">The path of the original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.IO.Stream,System.String,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.Drawing.Image,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImage">The original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.String,KudyStudio.WatermarkPosition,System.Single,System.Int32)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="originalImagePath">The path of the original image.This is also the path to save the water.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <param name="quality">The quality must in range [1, 100].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.String,System.String,KudyStudio.WatermarkPosition,System.Single,System.Int32)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImagePath">The path of the original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <param name="quality">The quality must in range [1, 100].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.IO.Stream,System.String,System.String,KudyStudio.WatermarkPosition,System.Single,System.Int32)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <param name="quality">The quality must in range [1, 100].</param>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.SaveIconWatermarkImage(System.String,System.Drawing.Image,System.String,KudyStudio.WatermarkPosition,System.Single,System.Int32)">
            <summary>
            Saves a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="savePath">The path to save the watermark image.</param>
            <param name="originalImage">The original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <param name="quality">The quality must in range [1, 100].</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.CreateIconWatermarkImage(System.IO.Stream,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Generates a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <returns>The water image.</returns>
        </member>
        <member name="M:KudyStudio.WatermarkImageHelper.CreateIconWatermarkImage(System.Drawing.Image,System.String,KudyStudio.WatermarkPosition,System.Single)">
            <summary>
            Generates a water image by the specified opacity and <see cref="T:KudyStudio.WatermarkPosition"/>.
            </summary>
            <param name="originalImage">The original image.</param>
            <param name="iconPath">The path of the icon.</param>
            <param name="position">The <see cref="T:KudyStudio.WatermarkPosition"/> to make water image by.</param>
            <param name="opacity">The opacity of the water image, the value is in range [0,1].</param>
            <returns>The water image.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ActionAttribute">
            <summary>
            This class provides an attribute for action methods in registered modes.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActionAttribute"/> for 
            a specified action method to handle a specified action.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionAttribute"/> for 
            a specified action method to handle a specified action.
            </summary>
            <param name="name">The name of the action attribute.</param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActionAttribute"/> for 
            a specified action method to handle a specified action.
            </summary>
            <param name="name">The name of the action attribute.</param>
            <param name="virtualUrl">The verbs of the action attribute.</param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionAttribute.VirtualUrl">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.SmtpMail">
            <summary>
            Smtp邮件发送类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.from">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.fromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.to">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.cc">
            <summary>
            抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.bcc">
            <summary>
            密送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.attachments">
            <summary>
            邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.isBodyHtml">
            <summary>
            邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.priority">
            <summary>
            邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.smtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.smtpPort">
            <summary>
            SMTP服务器端口(默认为 25)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.smtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.smtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpMail.smtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.#ctor(System.String,System.String,System.String[],System.String,System.String,System.String[],System.String,System.String,System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="from">发件人地址</param>
            <param name="fromName">发件人名称</param>
            <param name="to">收件人地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="attachments">邮件附件</param>
            <param name="smtpHost">SMTP服务器</param>
            <param name="username">SMTP用户名</param>
            <param name="password">SMTP登录密码</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.#ctor(System.String,System.String,System.String[],System.String[],System.String[],System.String,System.String,System.String[],System.Boolean,System.Net.Mail.MailPriority,System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            构造函数。
            </summary>
            <param name="from">发件人地址</param>
            <param name="fromName">发件人名称</param>
            <param name="to">收件人地址</param>
            <param name="cc">抄送地址</param>
            <param name="bcc">密送地址</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <param name="attachments">邮件附件</param>
            <param name="isBodyHtml">邮件正文是否为Html格式</param>
            <param name="priority">邮件优先级</param>
            <param name="smtpHost">SMTP服务器</param>
            <param name="smtpPort">SMTP服务器端口</param>
            <param name="username">SMTP用户名</param>
            <param name="password">SMTP登录密码</param>
            <param name="smtpSsl">是否使用安全套接字层 (SSL) 加密连接</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.Send">
            <summary>
            同步发送邮件。
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.SendAsync">
            <summary>
            异步发送邮件。
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.SendAsync(System.Object)">
            <summary>
            异步发送邮件。
            </summary>
            <param name="userToken">异步任务的唯一标识符</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.SendAsync(System.Object,System.Net.Mail.SendCompletedEventHandler)">
            <summary>
            异步发送邮件。
            </summary>
            <param name="userToken">异步任务的唯一标识符</param>
            <param name="callback">异步任务的回调函数，可设置为 null</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.SmtpMail.SendMail(System.Boolean,System.Object,System.Net.Mail.SendCompletedEventHandler)">
            <summary>
            发送邮件。
            </summary>
            <param name="isAsync">是否异步发送邮件</param>
            <param name="userToken">异步任务的唯一标识符，当 isAsync 为 True 时必须设置该属性， 当 isAsync 为 False 时可设置为 null</param>
            <param name="callback">异步任务的回调函数，当 isAsync 为 True 时才有效， 可设置为 null</param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.From">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.FromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.To">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Cc">
            <summary>
            抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Bcc">
            <summary>
            密送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Attachments">
            <summary>
            邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.IsBodyHtml">
            <summary>
            邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.Priority">
            <summary>
            邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.SmtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.SmtpPort">
            <summary>
            SMTP服务器端口(默认为 25，gmail：587)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.SmtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.SmtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpMail.SmtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.MailPool">
            <summary>
            发送邮件池。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.allCount">
            <summary>
            发送邮件总数。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.successCount">
            <summary>
            成功发送邮件总数。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.failingCount">
            <summary>
            失败发送邮件总数。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.mailHighList">
            <summary>
            发送邮件的优先级别为的High集合。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.mailNormalList">
            <summary>
            发送邮件的优先级别为的Normal集合。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.mailLowList">
            <summary>
            发送邮件的优先级别为的Low集合。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.MailPool.errorMessageList">
            <summary>
            发送邮件的错误信息集合。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.Enqueue(KudyStudio.Utility.Net.Mail.MailInfo)">
            <summary>
            根据邮件的优先级加入队列。
            </summary>
            <param name="mail"></param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.Dequeue">
            <summary>
            根据邮件的优先级从高到底退出队列。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.SendSuccess(KudyStudio.Utility.Net.Mail.MailInfo)">
            <summary>
            邮件发送成功。
            </summary>
            <param name="mail">当前邮件</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.SendFailing(KudyStudio.Utility.Net.Mail.MailInfo,System.Exception)">
            <summary>
            邮件发送失败。
            </summary>
            <param name="mail">当前邮件</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.UnLockAllMail">
            <summary>
            给所有邮件解锁。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.CorrectAllCount">
            <summary>
            更正发送邮件总数。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.ClearErrorMessage">
            <summary>
            清空邮件的错误信息。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.ToString">
            <summary>
            获取发送邮件池情况。
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.GetMailList(KudyStudio.Utility.Net.Mail.MailInfo)">
            <summary>
            根据邮件的优先级取得相应的邮件集合。
            </summary>
            <param name="mail">邮件实体</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.GetNeedSendMail(System.Collections.Generic.List{KudyStudio.Utility.Net.Mail.MailInfo})">
            <summary>
            从邮件集合中取出一个需要发送的邮件。
            </summary>
            <param name="mailList">邮件集合</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.GetMailIndexByToken(System.Collections.Generic.List{KudyStudio.Utility.Net.Mail.MailInfo},System.Guid)">
            <summary>
            根据唯一标识获取邮件在邮件集合中的索引值。
            </summary>
            <param name="mailList">邮件集合</param>
            <param name="token">唯一标识</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.Dispose">
            <summary>
            释放资源。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.MailPool.Dispose(System.Boolean)">
            <summary>
            释放资源。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.AllCount">
            <summary>
            获取 发送邮件总数。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.SuccessCount">
            <summary>
            获取 成功发送邮件总数。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.FailingCount">
            <summary>
            获取 失败发送邮件总数。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.MailHighList">
            <summary>
            获取 发送邮件的优先级别为的High集合。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.MailNormalList">
            <summary>
            获取 发送邮件的优先级别为的Normal集合。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.MailLowList">
            <summary>
            获取 发送邮件的优先级别为的Low集合。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.MailPool.ErrorMessageList">
            <summary>
            获取 发送邮件的错误信息集合。
            </summary>
        </member>
        <member name="T:KudyStudio.ThrowExceptionExtensions">
            <summary>
            Provides a set of static methods for throw exceptions.
            </summary>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNull``1(``0,System.String)">
            <summary>
            Validates that an <see cref="T:Object"/> is not null.
            </summary>
            <remarks>
            Validates that an <see cref="T:Object"/> is not null. If the <see cref="T:Object"/> is null,
            <see cref="T:ArgumentNullException"/> will be thrown.
            </remarks>
            <typeparam name="T">The type of value.</typeparam>
            <param name="value">The <see cref="T:Object"/> being extended.</param>
            <param name="paramName">The name of the parameter that caused the exception.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNull``1(``0,System.String,System.String)">
            <summary>
            Validates that an <see cref="T:Object"/> is not null.
            </summary>
            <remarks>
            Validates that an <see cref="T:Object"/> is not null. If the <see cref="T:Object"/> is null,
            <see cref="T:ArgumentNullException"/> will be thrown.
            </remarks>
            <typeparam name="T">The type of value.</typeparam>
            <param name="value">The <see cref="T:Object"/> being extended.</param>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty(System.String,System.String)">
            <summary>
            Validates that a string is not null and empty.
            </summary>
            <remarks>
            Validates that a string is not null and empty. If the string is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The string being extended.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty(System.String,System.String,System.String)">
            <summary>
            Validates that a string is not null and empty.
            </summary>
            <remarks>
            Validates that a string is not null and empty. If the string is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The string being extended.</param>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty``1(``0[],System.String)">
            <summary>
            Validates that an array is not null and empty.
            </summary>
            <typeparam name="T">The type of items in array.</typeparam>
            <remarks>
            Validates that an array is not null and empty. If the array is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The array being extended.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty``1(``0[],System.String,System.String)">
            <summary>
            Validates that an array is not null and empty.
            </summary>
            <typeparam name="T">The type of items in array.</typeparam>
            <remarks>
            Validates that an array is not null and empty. If the array is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The array being extended.</param>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty``1(System.Collections.Generic.ICollection{``0},System.String)">
            <summary>
            Validates that a collection is not null and empty.
            </summary>
            <typeparam name="T">The type of items in collection.</typeparam>
            <remarks>
            Validates that a collection is not null and empty. If the collection is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The collection being extended.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfNullOrEmpty``1(System.Collections.Generic.ICollection{``0},System.String,System.String)">
            <summary>
            Validates that a collection is not null and empty.
            </summary>
            <typeparam name="T">The type of items in collection.</typeparam>
            <remarks>
            Validates that a collection is not null and empty. If the collection is null or empty,
            ArgumentException will be thrown.
            </remarks>
            <param name="value">The collection being extended.</param>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">The error message that explains the reason for the required parameter.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfDisposed(KudyStudio.IDisposableObject,System.String)">
            <summary>
            Validates that a <see cref="T:IDisposableObject"/> object is not disposed.
            </summary>
            <remarks>
            Validates that a <see cref="T:IDisposableObject"/> object is not disposed. If the object is disposed,
            <see cref="T:ObjectDisposedException"/> will be thrown.
            </remarks>
            <param name="value">The <see cref="T:IDisposableObject"/> object.</param>
            <param name="objectName">The type of the object that caused the exception.</param>
        </member>
        <member name="M:KudyStudio.ThrowExceptionExtensions.ThrowsIfDisposed(KudyStudio.IDisposableObject,System.String,System.String)">
            <summary>
            Validates that a <see cref="T:IDisposableObject"/> object is not disposed.
            </summary>
            <remarks>
            Validates that a <see cref="T:IDisposableObject"/> object is not disposed. If the object is disposed,
            <see cref="T:ObjectDisposedException"/> will be thrown.
            </remarks>
            <param name="value">The <see cref="T:IDisposableObject"/> object.</param>
            <param name="objectName">The name of the object that caused the exception.</param>
            <param name="message">The error message that explains the reason for the disposed object.</param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.AuthorizationContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.AuthorizationContext.#ctor(KudyStudio.Web.Mtv.ModeContext)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.AuthorizationContext.FilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.BodyFormat">
            <summary>
            Available message body formats.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.BodyFormat.Text">
            <summary>
            A plain text message body.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.BodyFormat.Html">
            <summary>
            A HTML based message body.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskServerStartedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskServerStoppedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskExecutingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskExecutedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.TaskFailedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Data.SQLiteHelper">
            <summary>
            SQLiteHelper
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Required">
            <summary>
            Indicating whether a property is required.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Required.Default">
            <summary>
            The property is not required. The default state.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Required.AllowNull">
            <summary>
            The property must be defined in JSON but can be a null value.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Required.Always">
            <summary>
            The property must be defined in JSON and cannot be a null value.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonConverterAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> to use the specified <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> when serializing the member or class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonConverterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonConverterAttribute"/> class.
            </summary>
            <param name="converterType">Type of the converter.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonConverterAttribute.ConverterType">
            <summary>
            Gets the type of the converter.
            </summary>
            <value>The type of the converter.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.XmlNodeConverter">
            <summary>
            Converts an <see cref="T:System.Xml.XmlNode"/> to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.XmlNodeConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="serializer">The calling serializer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.XmlNodeConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(System.String,System.String@)">
            <summary>
            Checks if the attributeName is a namespace attribute.
            </summary>
            <param name="attributeName">Attribute name to test.</param>
            <param name="prefix">The attribute name prefix if it has one, otherwise an empty string.</param>
            <returns>True if attribute name is for a namespace attribute, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.XmlNodeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Converters.XmlNodeConverter.DeserializeRootElementName">
            <summary>
            Gets or sets the name of the root element to insert when deserializing to XML if the JSON structure has produces multiple root elements.
            </summary>
            <value>The name of the deserialize root element.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.DataSetConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataSet"/> to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataSetConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataSetConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.DataSetConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Load">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.LoadCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.UnloadCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.GetChannelContextTypesForRoutingService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnLoading(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnUnloading(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnUnloaded(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnModuleLoadFailed(System.Object,KudyStudio.Frameworks.WcfModuleFramework.ModuleLoadFailedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnModuleStateChanged(System.Object,KudyStudio.Frameworks.WcfModuleFramework.ModuleStateChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnWorkingModuleAdded(System.Object,KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleAddedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.OnWorkingModuleRemoved(System.Object,KudyStudio.Frameworks.WcfModuleFramework.WorkingModuleRemovedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.IsLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.RoutingEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.ModuleDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.TokenResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.PortConfigManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.WorkingModules">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Loading">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Loaded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Unloading">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.Unloaded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.ModuleLoadFailed">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.ModuleStateChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.WorkingModuleAdded">
            <summary>
            
            </summary>
        </member>
        <member name="E:KudyStudio.Frameworks.WcfModuleFramework.ModuleHost.WorkingModuleRemoved">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.HighlightFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.HighlightFormatter.Html">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.HighlightFormatter.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="prefix"></param>
            <param name="postfix"></param>
        </member>
        <member name="M:KudyStudio.HighlightFormatter.Format(System.String)">
            <summary>
            
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HighlightFormatter.Create(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="prefix"></param>
            <param name="postfix"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.HighlightFormatter.Prefix">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.HighlightFormatter.Postfix">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvHelper">
            <summary>
            The MtvHelper.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.IniFile">
            <summary>
            Helper class to access ini config files.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:IniFile"/> instance using Encoding.ASCII.
            </summary>
            <param name="path">The path of the ini file to access.</param>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes an <see cref="T:IniFile"/> instance.
            </summary>
            <param name="path">The path of the ini file to access.</param>
            <param name="encoding">The encoding of the ini file.</param>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.ReadSections">
            <summary>
            Reads all sections.
            </summary>
            <returns>The sections in the ini file.</returns>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.ReadKeys(System.String)">
            <summary>
            Reads all keys in a section.
            </summary>
            <param name="section">The section to read from.</param>
            <returns>The keys of the specified section in the ini file.</returns>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.ReadValue(System.String,System.String)">
            <summary>
            Reads a string value by the specified section and key.
            </summary>
            <param name="section">The section to read from.</param>
            <param name="key">The key to read from.</param>
            <returns>The string value by the specified section and key.</returns>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.ReadValues(System.String,System.String)">
            <summary>
            Reads a byte array value by the specified section and key.
            </summary>
            <param name="section">The section to read from.</param>
            <param name="key">The key to read from.</param>
            <returns>The byte array value by the specified section and key.</returns>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.Clear">
            <summary>
            Clears the ini file.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.ClearSection(System.String)">
            <summary>
            Clears the specified section.
            </summary>
            <param name="section">The section to clear.</param>
        </member>
        <member name="M:KudyStudio.Utility.IniFile.WriteValue(System.String,System.String,System.String)">
            <summary>
            Writes a value by the specified section, key and value.
            </summary>
            <param name="section">The section name.</param>
            <param name="key">The key name.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="T:KudyStudio.Utility.Algorithms.CRC32">
            <summary>
            Implements a 32-bits cyclic redundancy check (CRC) hash algorithm.
            </summary>
            <remarks>
            This class is not intended to be used for security purposes. For security applications use MD5, SHA1, SHA256, SHA384, 
            or SHA512 in the System.Security.Cryptography namespace.
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.#ctor">
            <summary>Creates a CRC32 object using the <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.#ctor(System.UInt32)">
            <summary>Creates a CRC32 object using the specified polynomial.</summary>
            <remarks>The polynomical should be supplied in its bit-reflected form. <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</remarks>
        </member>
        <member name="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial">
            <summary>Gets the default polynomial (used in WinZip, Ethernet, etc.)</summary>
            <remarks>The default polynomial is a bit-reflected version of the standard polynomial 0x04C11DB7 used by WinZip, Ethernet, etc.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.Initialize">
            <summary>Initializes an implementation of HashAlgorithm.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>Routes data written to the object into the hash algorithm for computing the hash.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.HashFinal">
            <summary>Finalizes the hash computation after the last data is processed by the cryptographic stream object.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.Compute(System.String)">
            <summary>Computes the CRC32 value for the given ASCII string using the <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.Compute(System.IO.Stream)">
            <summary>Computes the CRC32 value for the given input stream using the <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.Compute(System.Byte[])">
            <summary>Computes the CRC32 value for the input data using the <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.Compute(System.Byte[],System.Int32,System.Int32)">
            <summary>Computes the hash value for the input data using the <see cref="F:KudyStudio.Utility.Algorithms.CRC32.DefaultPolynomial"/>.</summary>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.ComputeHash(System.String)">
            <summary>Computes the hash value for the given ASCII string.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.ComputeHash(System.IO.Stream)">
            <summary>Computes the hash value for the given input stream.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.ComputeHash(System.Byte[])">
            <summary>Computes the hash value for the input data.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.Algorithms.CRC32.ComputeHash(System.Byte[],System.Int32,System.Int32)">
            <summary>Computes the hash value for the input data.</summary>
            <remarks>The computation preserves the internal state between the calls, so it can be used for computation of a stream data.</remarks>
        </member>
        <member name="T:KudyStudio.ValidationUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsEmail(System.String)">
            <summary>
            Indicates whether the specified string is email.
            </summary>
            <param name="str">The string to check.</param>
            <returns>true if the string is email, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsEmailDomain(System.String)">
            <summary>
            Indicates whether the specified string is email domain.
            </summary>
            <param name="str">The string to check.</param>
            <returns>true if the string is email domain, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsTransactSql(System.String)">
            <summary>
            Indicates whether the specified string is transact-sql.
            </summary>
            <param name="str">The string to check.</param>
            <returns>true if the string is transact-sql, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsColor(System.String)">
            <summary>
            Indicates whether the specified string is 3/6 bit color.
            </summary>
            <param name="str">The string to check, #ffff00, fff e.g.</param>
            <returns>true if the string is 3/6 bit color, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsUrl(System.String)">
            <summary>
            Indicates whether the specified string is in url format.
            </summary>
            <param name="str">A url string.</param>
            <returns>True if in url format, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsIpAddress(System.String)">
            <summary>
            Indicates whether the specified string is in ip format.
            </summary>
            <param name="str">An ip string.</param>
            <returns>True if in ip format, false otherwise.</returns>
        </member>
        <member name="M:KudyStudio.ValidationUtil.IsBase64String(System.String)">
            <summary>
            Indicates whether the specified string is a base64-encode string.
            </summary>
            <param name="str">The string to check.</param>
            <returns>true if the string is a base64-encode string, false otherwise.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewDataDictionaryExtensions">
            <summary>
            Provides a set of static methods for extensions.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.SelectListItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectListItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectListItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.SelectListItem.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="value"></param>
            <param name="selected"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.SelectListItem.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.SelectListItem.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Html.SelectListItem.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.OutputCacheAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ActionFilterAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.IActionFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.IActionFilter.OnActionExecuting(KudyStudio.Web.Mtv.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.IActionFilter.OnActionExecuted(KudyStudio.Web.Mtv.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionFilterAttribute.OnActionExecuting(KudyStudio.Web.Mtv.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionFilterAttribute.OnActionExecuted(KudyStudio.Web.Mtv.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.OutputCacheAttribute.OnActionExecuting(KudyStudio.Web.Mtv.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.CacheProfile">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.Duration">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.NoStore">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.SqlDependency">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.VaryByCustom">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.VaryByHeader">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.VaryByParam">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.OutputCacheAttribute.VaryByContentEncoding">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.HttpVerbs">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.HttpVerbs.Get">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.HttpVerbs.Post">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.HttpVerbs.Put">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.HttpVerbs.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.HttpVerbs.Head">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.NameValueCollectionExtensions">
            <summary>
            Provides a set of static methods for extensions.
            </summary>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.Get``1(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="collection"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.Get``1(System.Collections.Specialized.NameValueCollection,System.String,``0)">
            <summary>
            Gets the collection value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="collection"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetString(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection string value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetString(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Gets the collection string value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetByte(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection byte value by the specified name. 
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetByte(System.Collections.Specialized.NameValueCollection,System.String,System.Byte)">
            <summary>
            Gets the collection byte value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToSByte(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection sbyte value by the specified name. 
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToSByte(System.Collections.Specialized.NameValueCollection,System.String,System.SByte)">
            <summary>
            Gets the collection sbyte value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt16(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection short value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt16(System.Collections.Specialized.NameValueCollection,System.String,System.Int16)">
            <summary>
            Gets the collection short value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt16(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection ushort value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt16(System.Collections.Specialized.NameValueCollection,System.String,System.UInt16)">
            <summary>
            Gets the collection ushort value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt32(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection int value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt32(System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            Gets the collection int value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt32(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection uint value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt32(System.Collections.Specialized.NameValueCollection,System.String,System.UInt32)">
            <summary>
            Gets the collection uint value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt64(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection long value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetInt64(System.Collections.Specialized.NameValueCollection,System.String,System.Int64)">
            <summary>
            Gets the collection long value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt64(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection ulong value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetUInt64(System.Collections.Specialized.NameValueCollection,System.String,System.UInt64)">
            <summary>
            Gets the collection ulong value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetFloat(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection float value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetFloat(System.Collections.Specialized.NameValueCollection,System.String,System.Single)">
            <summary>
            Gets the collection float value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDouble(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection double value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDouble(System.Collections.Specialized.NameValueCollection,System.String,System.Double)">
            <summary>
            Gets the collection double value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDecimal(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection decimal value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDecimal(System.Collections.Specialized.NameValueCollection,System.String,System.Decimal)">
            <summary>
            Gets the collection decimal value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetBool(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection bool value by the specified name.
            If the request name does not exist, false will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetBool(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean)">
            <summary>
            Gets the collection bool value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection DateTime value by the specified name.
            If the request name does not exist, DateTime.MinValue will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String,System.DateTime)">
            <summary>
            Gets the collection DateTime value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetTimeSpan(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection TimeSpan value by the specified name.
            If the request name does not exist, TimeSpan.Zero will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetTimeSpan(System.Collections.Specialized.NameValueCollection,System.String,System.TimeSpan)">
            <summary>
            Gets the collection TimeSpan value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetGuid(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection Guid value by the specified name.
            If the request name does not exist, Guid.Empty will be returned.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetGuid(System.Collections.Specialized.NameValueCollection,System.String,System.Guid)">
            <summary>
            Gets the collection Guid value by the specified name.
            </summary>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetEnum``1(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Gets the collection enum value by the specified name, ignore case.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.GetEnum``1(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean)">
            <summary>
            Gets the collection enum value by the specified name.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="collection"></param>
            <param name="name">The name to search.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToDictionary(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToDictionary(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToStringObjectDictionary(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.NameValueCollectionExtensions.ToStringObjectDictionary(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.ReadFreeCache`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.ReadFreeCache`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.ReadFreeCache`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:KudyStudio.ReadFreeCache`2.Get(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadFreeCache`2.Create(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadFreeCache`2.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.ReadFreeCache`2.Cache">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.ReadWriteCache`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.ReadWriteCache`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.ReadWriteCache`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:KudyStudio.ReadWriteCache`2.Get(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadWriteCache`2.Create(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadWriteCache`2.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.ReadWriteCache`2.Cache">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.OnLogonTrigger">
            <summary>
            Trigger that fires when a user logs on.
            </summary>
            <remarks>Triggers of this type fire when any user logs on, not just the
            user identified in the account information.</remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnLogonTrigger.#ctor">
            <summary>
            Creates an OnLogonTrigger.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnLogonTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from system Task Scheduler.</param>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.MonthlyTrigger">
            <summary>
            Trigger that fires at a specified time, on specified days of themonth,
            on specified months of the year.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.#ctor(System.Int16,System.Int16,System.Int32[],KudyStudio.Utility.TaskScheduler.MonthsOfTheYear)">
            <summary>
            Creates a MonthlyTrigger that fires only during specified months of the year.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of hour (specified in "hour") trigger will fire.</param>
            <param name="daysOfMonth">Days of the month trigger will fire.  (See <see cref="P:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.Days"/> property.</param>
            <param name="months">Months of the year trigger will fire.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.#ctor(System.Int16,System.Int16,System.Int32[])">
            <summary>
            Creates a MonthlyTrigger that fires during any month.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of hour (specified in "hour") trigger will fire.</param>
            <param name="daysOfMonth">Days of the month trigger will fire.  (See <see cref="P:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.Days"/> property.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from system Task Scheduler.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.MaskToIndices(System.Int32)">
            <summary>
            Convert an integer representing a mask to an array where each element contains the index
            of a bit that is ON in the mask.  Bits are considered to number from 1 to 32.
            </summary>
            <param name="mask">An interger to be interpreted as a mask.</param>
            <returns>An array with an element for each bit of the mask which is ON.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.IndicesToMask(System.Int32[])">
            <summary>
            Converts an array of bit indices into a mask with bits  turned ON at every index
            contained in the array.  Indices must be from 1 to 32 and bits are numbered the same.
            </summary>
            <param name="indices">An array with an element for each bit of the mask which is ON.</param>
            <returns>An interger to be interpreted as a mask.</returns>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.Days">
            <summary>
            Gets or sets days of the month trigger will fire.
            </summary>
            <value>An array with one element for each day that the trigger will fire.
            The value of the element is the number of the day, in the range 1..31.</value>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.MonthlyTrigger.Months">
            <summary>
            Gets or sets months of the year trigger will fire.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.JsonSchemaType">
            <summary>
            The value types allowed by the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.None">
            <summary>
            No type specified.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Float">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Array">
            <summary>
            Array type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Schema.JsonSchemaType.Any">
            <summary>
            Any type.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> objects.
            </summary>
            <typeparam name="T">The type of token</typeparam>
        </member>
        <member name="F:KudyStudio.Utility.Json.Linq.JEnumerable`1.Empty">
            <summary>
            An empty collection of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> objects.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JEnumerable`1"/> struct.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JEnumerable`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JEnumerable`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.IJEnumerable`1"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonPropertyAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> to always serialize the member with the specified name.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonPropertyAttribute"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonPropertyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonPropertyAttribute"/> class with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.NullValueHandling">
            <summary>
            Gets or sets the null value handling used when serializing this property.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.DefaultValueHandling">
            <summary>
            Gets or sets the default value handling used when serializing this property.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.ReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing this property.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.ObjectCreationHandling">
            <summary>
            Gets or sets the object creation handling used when deserializing this property.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.TypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing this property.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.IsReference">
            <summary>
            Gets or sets whether this property's value is serialized as a reference.
            </summary>
            <value>Whether this property's value is serialized as a reference.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonPropertyAttribute.Required">
            <summary>
            Gets or sets a value indicating whether this property is required.
            </summary>
            <value>
            	A value indicating whether this property is required.
            </value>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonArrayAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> how to serialize the collection.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonArrayAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonArrayAttribute"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonArrayAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonObjectAttribute"/> class with a flag indicating whether the array can contain null items
            </summary>
            <param name="allowNullItems">A flag indicating whether the array can contain null items.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.JsonArrayAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.JsonArrayAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.JsonArrayAttribute.AllowNullItems">
            <summary>
            Gets or sets a value indicating whether null items are allowed in the collection.
            </summary>
            <value><c>true</c> if null items are allowed in the collection; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.InstanceBuilder">
            <summary>
            InstanceBuidler is used to create the object which can be intercepted.
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InstanceBuilder.Create``1">
            <summary>
            Create an object which can be intercepted. 
            </summary>
            <typeparam name="T">The type of target instance.</typeparam>
            <returns>The created object which can be intercepted. </returns>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InstanceBuilder.Create``2">
            <summary>
            Create an object which can be intercepted.
            </summary>
            <typeparam name="TObject">The type of the target object.</typeparam>
            <typeparam name="TInterface">The interface which the target type implements.</typeparam>
            <returns>The created object of the interface type.</returns>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InstanceBuilder.CreateCallHandlerPipeline``2(``0)">
            <summary>
            Create a <see cref="T:KudyStudio.Frameworks.AopFramework.CallHandlerPipeline"/> collection based on the target instance.
            </summary>
            <typeparam name="TObject">The type of target instance.</typeparam>
            <typeparam name="TInterfce">The inteface which the target type implements.</typeparam>
            <param name="target">The target instance.</param>
            <returns>A IDictionary representing the created call handler pipeline collection.</returns>
        </member>
        <member name="T:KudyStudio.ComparerFactory`1">
            <summary>
            Factory class to create comparers and equality comparers using Func delegates.
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateComparer(System.Func{`0,`0,System.Int32})">
            <summary>
            Create a new comparer.
            </summary>
            <param name="comparer">The compare function.</param>
            <returns>The comparer</returns>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateEqualityComparer(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            Creates a new equality comparer.
            </summary>
            <param name="equals">The equals function.</param>
            <param name="getHashCode">The getHashCode function.</param>
            <returns>The equality comparer.</returns>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateComparer``1(System.Func{`0,``0})">
            <summary>
            Creates a new equality comparer.
            </summary>
            <typeparam name="TProperty">The type of property to compare.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>The equality comparer.</returns>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Creates a new equality comparer.
            </summary>
            <typeparam name="TProperty">The type of property to compare.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <param name="comparer">The comparer for property.</param>
            <returns>The equality comparer.</returns>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateEqualityComparer``1(System.Func{`0,``0})">
            <summary>
            Creates a new equality comparer.
            </summary>
            <typeparam name="TProperty">The type of property to compare.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <returns>The equality comparer.</returns>
        </member>
        <member name="M:KudyStudio.ComparerFactory`1.CreateEqualityComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a new equality comparer.
            </summary>
            <typeparam name="TProperty">The type of property to compare.</typeparam>
            <param name="propertySelector">The property selector.</param>
            <param name="comparer">The comparer for property.</param>
            <returns>The equality comparer.</returns>
        </member>
        <member name="T:KudyStudio.CaptchaText">
            <summary>
            Specifies the text type for generating captcha images.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaText.Custom">
            <summary>
            Use custom text.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaText.Number">
            <summary>
            Use decimal numbers in captcha text.
            </summary>
        </member>
        <member name="F:KudyStudio.CaptchaText.Letter">
            <summary>
            Use alphabetic letters in captcha text.
            </summary>
        </member>
        <member name="T:KudyStudio.Highlighter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.HighlightFormatter)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.HighlightFormatter)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.HighlightFormatter,KudyStudio.KeywordOrder)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.HighlightFormatter,KudyStudio.KeywordOrder)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.HighlightFormatter,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.HighlightFormatter,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.HighlightFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Highlighter.Highlight(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.HighlightFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvFramework">
            <summary>
            The main job of this <see cref="T:MtvFramework"/> class is to register modes 
            in Global.asax and process request in the default page of web application.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvFramework.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvFramework.RegisterModeAssemblies">
            <summary>
            Registers all modes which extends <see cref="T:Mode" /> and filter which 
            extends <see cref="T:GlobalFilterAttribute" /> to MTV framework for url mapping.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.MtvFramework.Config">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.SerializationUtil">
            <summary>
            A common object serializer that provides static methods to serialize or deserialize data.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="F:KudyStudio.SerializationUtil.CanBinarySerialize">
            <summary>
            Readonly value indicating whether if binary serialization is allowed.
            </summary>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToJsonStringEx(System.Object)">
            <summary>
            Converts a .NET object to a Json string.
            </summary>
            <param name="obj">Object to convert.</param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToJsonStringEx(System.Object,System.Boolean)">
            <summary>
            Converts a .NET object to a Json string.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="formatDate"></param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonStringEx``1(System.String)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonStringEx``1(System.String,System.Boolean)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <param name="formatDate"></param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.GetSerializeKnownTypes(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.GetJsonSerializer(System.Type)">
            <summary>
            Gets the cached <see cref="T:DataContractJsonSerializer"/>.
            </summary>
            <param name="type">A .NET object type.</param>
            <returns>An instance of <see cref="T:DataContractJsonSerializer"/></returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.GetJsonSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Gets the cached <see cref="T:DataContractJsonSerializer"/>.
            </summary>
            <param name="type">A .NET object type.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>An instance of <see cref="T:DataContractJsonSerializer"/></returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToJsonString(System.Object)">
            <summary>
            Converts a .NET object to a Json string.
            </summary>
            <param name="obj">Object to convert.</param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToJsonString(System.Object,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a .NET object to a string of Json.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>A json string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonString(System.String,System.Type)">
            <summary>
            Converts a string of Json to the supplied object type. 
            You will need to cast this object back to its expected type. 
            </summary>
            <param name="json">Json representing a .NET object.</param>
            <param name="type">The type of object which the Json represents.</param>
            <returns>An instance of object or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonString(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a string of Json to the supplied object type. 
            You will need to cast this object back to its expected type. 
            </summary>
            <param name="json">Json representing a .NET object.</param>
            <param name="type">The type of object which the Json represents.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>An instance of object or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonString``1(System.String)">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromJsonString``1(System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Converts a string of Json to the supplied object type.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="json">Json representing a .NET object.</param>
            <param name="knownTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of json is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.GetXmlSerializer(System.Type)">
            <summary>
            Gets the cached <see cref="T:XmlSerializer"/>.
            </summary>
            <param name="type">A .NET object type.</param>
            <returns>An instance of <see cref="T:XmlSerializer"/></returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.GetXmlSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Gets the cached <see cref="T:XmlSerializer"/>.
            </summary>
            <param name="type">A .NET object type.</param>
            <param name="extraTypes">
            An <see cref="T:IEnumerable`1"/> of <see cref="T:System.Type"/> that contains 
            the types that may be present in the object graph.
            </param>
            <returns>An instance of <see cref="T:XmlSerializer"/>.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToXmlString(System.Object)">
            <summary>
            Converts a .NET object to a string of XML.
            </summary>
            <remarks>The object must be serializable.</remarks>
            <param name="obj">Object to convert.</param>
            <returns>A xml string represting the object parameter. The returned value will be null of the object is null.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromXmlString(System.String,System.Type)">
            <summary>
            Converts a string of xml to the supplied object type. 
            You will need to cast this object back to its expected type. 
            </summary>
            <remarks>The object must be serializable.</remarks>
            <param name="xml">Xml representing a .NET object.</param>
            <param name="type">The type of object which the xml represents.</param>
            <returns>An instance of object or null if the value of xml is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromXmlString``1(System.String)">
            <summary>
            Converts a string of xml to the supplied object type.
            </summary>
            <remarks>The object must be serializable.</remarks>
            <typeparam name="T">The type to return.</typeparam>
            <param name="xml">Xml representing a .NET object.</param>
            <returns>An instance of <typeparamref name="T"/> or null if the value of xml is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToXmlFile(System.String,System.Object)">
            <summary>
            Converts a .NET object to a XML file.
            </summary>
            <remarks>The object must be serializable.</remarks>
            <param name="path">Location of the XML file.</param>
            <param name="obj">Object to convert.</param>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromXmlFile(System.String,System.Type)">
            <summary>
            Converts a XML file from disk to a .NET object. You will need to cast this object back 
            to its expected type. 
            </summary>
            <remarks>The object must be serializable.</remarks>
            <param name="path">Location of the XML file.</param>
            <param name="type">The type of object which the file represents.</param>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromXmlFile``1(System.String)">
            <summary>
            Converts a XML file from disk to a .NET object.
            </summary>
            <remarks>The object must be serializable.</remarks>
            <typeparam name="T">The type to return.</typeparam>
            <param name="path">Location of the XML file.</param>
            <returns>An instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.CloneObject(System.Object)">
            <summary>
            Clones an object. You will need to cast this object back to its expected type. 
            before the clone happens, a check with Serializer.CanBinarySerialize will be made.
            </summary>
            <param name="obj">The object to clone.</param>
            <remarks>
            The object to be cloned must be serializable. 
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 
            provided as part of WCF.
            </remarks>
            <returns>A new object. Null will be return if obj is null or CanBinarySerialize is false.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.CloneObject``1(System.Object)">
            <summary>
            Clones an object. before the clone happens, a check with Serializer.CanBinarySerialize will be made.
            </summary>
            <remarks>
            The T to be cloned must be serializable. 
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 
            provided as part of WCF.
            </remarks>
            <typeparam name="T">The type of obj.</typeparam>
            <param name="obj">The object to clone.</param>
            <returns>A new <typeparamref name="T"/> object. Null will be return if obj is null or CanBinarySerialize is false.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToBinary(System.Object)">
            <summary>
            Converts a .NET object to a byte array. before the conversion happens, a check with 
            Serializer.CanBinarySerialize will be made.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 
            provided as part of WCF.
            </remarks>
            <param name="obj">Object to convert.</param>
            <returns>A byte arry representing the object paramter. Null will be return if obj is null or CanBinarySerialize is false.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromBinary(System.Byte[])">
            <summary>
            Converts a byte array to a .NET object. You will need to cast this object back to its expected type. 
            If the array is null or empty, it will return null.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 
            provided as part of WCF.
            </remarks>
            <param name="bytes">An array of bytes represeting a .NET object</param>
            <returns>The byte array converted to an object or null if the value of byteArray is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromBinary``1(System.Byte[])">
            <summary>
            Converts a byte array to a .NET object. If the array is null or empty, it will return null.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 
            provided as part of WCF.
            </remarks>
            <typeparam name="T">The Type to return.</typeparam>
            <param name="bytes">An array of bytes represeting a .NET object</param>
            <returns>The byte array converted to a <typeparamref name="T"/> or null if the value of byteArray is null or empty.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.SerializeToBinaryFile(System.String,System.Object)">
            <summary>
            Saves an object to disk as a binary file.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer"/> 
            provided as part of WCF.
            </remarks>
            <param name="path">Location of the binary file.</param>
            <param name="obj">Object to Save.</param>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromBinaryFile(System.String)">
            <summary>
            Converts a binary file from disk to a .NET object. You will need to cast this object back to its expected type. 
            If the binary file is not exist or empty, it will return null.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer"/> 
            provided as part of WCF.
            </remarks>
            <param name="path">Location of the binary file.</param>
            <returns>An instance of object.</returns>
        </member>
        <member name="M:KudyStudio.SerializationUtil.DeserializeFromBinaryFile``1(System.String)">
            <summary>
            Converts a binary file from disk to a .NET object. If the binary file is not exist or empty, it will return null.
            </summary>
            <remarks>
            The default is to use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>. 
            You may also choose to use the Microsoft .NET 3.0 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer"/> 
            provided as part of WCF.
            </remarks>
            <typeparam name="T">The Type to return.</typeparam>
            <param name="path">Location of the binary file.</param>
            <returns>An instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Mode">
            <summary>
            This abstract class provides a basic framework for processing from
            a default page, the subclasses should use the <see cref="T:ModeAttribute" /> 
            custom attribute. The name of subclasses must end with "Mode" or specify 
            a name in <see cref="T:ModeAttribute"/>)
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.OnActionExecuting(KudyStudio.Web.Mtv.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.OnActionExecuted(KudyStudio.Web.Mtv.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.OnAuthorization(KudyStudio.Web.Mtv.AuthorizationContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.OnException(KudyStudio.Web.Mtv.ExceptionContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.Initialize(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.InitializeInternal(System.String,System.String,System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="area"></param>
            <param name="httpContext"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.SetTitle(System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.SetContentType(System.String)">
            <summary>
            
            </summary>
            <param name="contentType"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.SetKeywords(System.String)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.SetDescription(System.String)">
            <summary>
            
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.SetRefresh(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="seconds"></param>
            <param name="url"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.AddMeta(System.Object)">
            <summary>
            
            </summary>
            <param name="metaAttributes"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.AddMeta(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="metaAttributes"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult">
            <summary>
            
            </summary>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult(System.Object)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult(System.String)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="model"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="masterName"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ViewResult(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="masterName"></param>
            <param name="model"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.PartialViewResult">
            <summary>
            
            </summary>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.PartialViewResult(System.Object)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.PartialViewResult(System.String)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.PartialViewResult(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="viewName"></param>
            <param name="model"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileResult(System.String,System.String)">
            <summary>
            Responses a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileResult(System.String,System.String,System.String)">
            <summary>
            Responses a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="fileDownloadName">The output file name to client.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileStreamResult(System.IO.Stream,System.String)">
            <summary>
            Responses a file stream to the client.
            </summary>
            <param name="fileStream">The stream of a file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileStreamResult(System.IO.Stream,System.String,System.String)">
            <summary>
            Responses a file stream to the client.
            </summary>
            <param name="fileStream">The stream of a file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="fileDownloadName">The output file name to client.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileContentResult(System.Byte[],System.String)">
            <summary>
            
            </summary>
            <param name="fileContents"></param>
            <param name="contentType"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FileContentResult(System.Byte[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileContents"></param>
            <param name="contentType"></param>
            <param name="fileDownloadName"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.TransmitFileResult(System.String,System.String)">
            <summary>
            Transmits a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.TransmitFileResult(System.String,System.String,System.String)">
            <summary>
            Transmits a file to the client.
            </summary>
            <param name="filePath">The path of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="fileDownloadName">The output file name to client.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.TextResult(System.String)">
            <summary>
            Responses text string and clears flush content.
            </summary>
            <param name="text">The text string to response.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.TextResult(System.String,System.Boolean)">
            <summary>
            Responses text string.
            </summary>
            <param name="text">The text string to response.</param>
            <param name="clearContent"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JavaScriptResult(System.String)">
            <summary>
            Responses script string.
            </summary>
            <param name="script">The script string to response.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.XmlResult(System.String)">
            <summary>
            Responses xml string.
            </summary>
            <param name="xml">The xml string to response.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonResult(System.String)">
            <summary>
            Responses json string.
            </summary>
            <param name="jsonString">The json string to response, e.g. {"field": "value"}.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonResult(System.Object)">
            <summary>
            Responses complex json object.
            </summary>
            <param name="jsonObject">The complex json object that is serializable to response.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonResult(System.Object,System.Boolean)">
            <summary>
            Responses complex json object.
            </summary>
            <param name="jsonObject">The complex json object that is serializable to response.</param>
            <param name="formatDate"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }.
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32,System.Object)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }. 
            But the value of "message" is always "".
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <param name="data">The extra data that is serializable, e.g. new MySerializableClass(), string, true...</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32,System.Object,System.Boolean)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }. 
            But the value of "message" is always "".
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <param name="data">The extra data that is serializable, e.g. new MySerializableClass(), string, true...</param>
            <param name="formatDate"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32,System.String)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }. 
            But the value of "data" is always "".
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <param name="message">A string message which will be converted to Json value with quotes.</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32,System.String,System.Object)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }.
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <param name="message">A string message which will be converted to Json value with quotes.</param>
            <param name="data">The extra data that is serializable, e.g. new MySerializableClass(), string, true...</param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.JsonCallbackResult(System.Int32,System.String,System.Object,System.Boolean)">
            <summary>
            Clears flush content and responses Json result in format like : 
            {"code": number, "message":"message string", "data": any data }.
            </summary>
            <param name="code">An int value indicating the callback status.</param>
            <param name="message">A string message which will be converted to Json value with quotes.</param>
            <param name="data">The extra data that is serializable, e.g. new MySerializableClass(), string, true...</param>
            <param name="formatDate"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="target"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="methodName"></param>
            <param name="target"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="target"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.FormResult(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="actionUrl"></param>
            <param name="methodName"></param>
            <param name="target"></param>
            <param name="formInputs"></param>
            <returns>Returns <c>null</c> that references to nothing.</returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.GetContentType(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Mode.ExecutePerSession(System.Action,System.String,System.Object[])">
            <summary>
            Executes an action once only in per session cycle.
            </summary>
            <param name="action">The action to be executed.</param>
            <param name="uniqueId">The unique id references the action in the cache(e.g. user ID).</param>
            <param name="references">The an object array to reference the action.</param>
            <returns>true if action executed, false otherwise.</returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Area">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Theme">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.MtvParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.ModeContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.HttpContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Resource">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.IsGet">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.IsPost">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.IsBrowserRequest">
            <summary>
            Determines whether the specified HTTP request was sent by a Browser.
            A request is considered to be from the browser if:
            it's a GET or POST
            and does not have a non-HTML entity format (XML/JSON)
            and has a known User-Agent header (as determined by the request's BrowserCapabilities property),
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.ValidateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Request">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Session">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Server">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.Mode.Application">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.ThreadRunnable">
            <summary>
            Supports class used to handle threads and implements interface <see cref="T:KudyStudio.Utility.Threading.IThreadRunnable"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.IThreadRunnable">
            <summary>
            This interface should be implemented by any class whose instances are intended 
            to be executed by a thread.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.IThreadRunnable.Run">
            <summary>
            This method has to be implemented in order that starting of the thread causes the object's 
            run method to be called in that separately executing thread.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> class
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Thread class.
            </summary>
            <param name="name">The name of the thread</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.#ctor(System.Threading.ThreadStart)">
            <summary>
            Initializes a new instance of the Thread class.
            </summary>
            <param name="start">A ThreadStart delegate that references the methods to be invoked when this thread begins executing</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.#ctor(System.Threading.ThreadStart,System.String)">
            <summary>
            Initializes a new instance of the Thread class.
            </summary>
            <param name="start">
            A ThreadStart delegate that references the methods to be 
            invoked when this thread begins executing
            </param>
            <param name="name">The name of the thread</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Run">
            <summary>
            This method has no functionality unless the method is overridden.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Start">
            <summary>
            Causes the operating system to change the state of the current thread instance to ThreadState.Running.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Interrupt">
            <summary>
            Interrupts a thread that is in the WaitSleepJoin thread state.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Join">
            <summary>
            Blocks the calling thread until a thread terminates.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Join(System.Int64)">
            <summary>
            Blocks the calling thread until a thread terminates or the specified time elapses.
            </summary>
            <param name="MiliSeconds">Time of wait in milliseconds</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Join(System.Int64,System.Int32)">
            <summary>
            Blocks the calling thread until a thread terminates or the specified time elapses.
            </summary>
            <param name="milliseconds">Time of wait in milliseconds</param>
            <param name="nanoseconds">Time of wait in nanoseconds</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Resume">
            <summary>
            Resumes a thread that has been suspended.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Abort">
            <summary>
            Raises a ThreadAbortException in the thread on which it is invoked, 
            to begin the process of terminating the thread. Calling this method 
            usually terminates the thread.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Abort(System.Object)">
            <summary>
            Raises a ThreadAbortException in the thread on which it is invoked, 
            to begin the process of terminating the thread while also providing
            exception information about the thread termination. 
            Calling this method usually terminates the thread.
            </summary>
            <param name="stateInfo">
            An object that contains application-specific information, such as state, 
            which can be used by the thread being aborted.
            </param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Suspend">
            <summary>
            Suspends the thread, if the thread is already suspended it has no effect.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.ToString">
            <summary>
            Obtain a String that represents the current object.
            </summary>
            <returns>A String that represents the current object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Sleep(System.Int32)">
            <summary>
            Suspends the current thread for a specified time.
            </summary>
            <param name="millisecondsTimeout">
            The number of milliseconds for which the thread is blocked. Specify zero 
            (0) to indicate that this thread should be suspended to allow other waiting 
            threads to execute. Specify System.Threading.Timeout.Infinite to block the 
            thread indefinitely.
            </param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.op_Equality(KudyStudio.Utility.Threading.ThreadRunnable,System.Object)">
            <summary>
            Determines whether two specified <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> objects have same values.
            </summary>
            <param name="a">A <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> or null.</param>
            <param name="b">A <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> or null.</param>
            <returns>true if the value of a is the same as the value of b; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.op_Inequality(KudyStudio.Utility.Threading.ThreadRunnable,System.Object)">
            <summary>
            Determines whether two specified <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> objects have different values.
            </summary>
            <param name="a">A <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> or null.</param>
            <param name="b">A <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> or null.</param>
            <returns>true if the value of a is different from the value of b; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.GetHashCode">
            <summary>
            Returns a hash code for the current thread.
            </summary>
            <returns>An integer hash code value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.ThreadRunnable.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/> is
            equal to the current <see cref="T:KudyStudio.Utility.Threading.ThreadRunnable"/>.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the specified System.Object is equal to the current System.Object; otherwise, false.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.Instance">
            <summary>
            Gets or sets the current thread instance.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.Name">
            <summary>
            Gets or sets the name of the thread.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.IsAlive">
            <summary>
            Gets a value indicating the execution status of the current thread.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.IsBackground">
            <summary>
            Gets or sets a value indicating whether or not a thread is a background thread.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.Priority">
            <summary>
            Gets or sets a value indicating the scheduling priority of a thread.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.ThreadRunnable.CurrentThread">
            <summary>
            Gets the currently running thread.
            </summary>
            <returns>The currently running thread</returns>
        </member>
        <member name="T:KudyStudio.Logging.LogLevel">
            <summary>
            The available log levels for LogManager.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Debug">
            <summary>
            The Debug level.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Info">
            <summary>
            The Info level.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Warn">
            <summary>
            The Warn level.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Error">
            <summary>
            The Error level.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Fatal">
            <summary>
            The Fatal level.
            </summary>
        </member>
        <member name="F:KudyStudio.Logging.LogLevel.Off">
            <summary>
            The Off level.
            </summary>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.FromOrdinal(System.Int32)">
            <summary>
            Gets the <see cref="T:KudyStudio.Logging.LogLevel"/> that corresponds to the specified ordinal.
            </summary>
            <param name="ordinal">The ordinal.</param>
            <returns>The <see cref="T:KudyStudio.Logging.LogLevel"/> instance. For 0 it returns <see cref="F:KudyStudio.Logging.LogLevel.Debug"/>, 1 gives <see cref="F:KudyStudio.Logging.LogLevel.Info"/> and so on</returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.FromString(System.String)">
            <summary>
            Returns the <see cref="T:NLog.LogLevel"/> that corresponds to the supplied <see langword="string" />.
            </summary>
            <param name="s">the texual representation of the log level</param>
            <returns>the enumeration value.</returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.TryFromString(System.String,KudyStudio.Logging.LogLevel)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.ToString">
            <summary>
            Returns a string representation of the log level.
            </summary>
            <returns>Log level name.</returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.CompareTo(System.Object)">
            <summary>
            Compares the level to the other <see cref="T:KudyStudio.Logging.LogLevel"/> object.
            </summary>
            <param name="obj">the object object</param>
            <returns>
            a value less than zero when this logger's <see cref="P:KudyStudio.Logging.LogLevel.Ordinal"/> is 
            less than the other logger's ordinal, 0 when they are equal and 
            greater than zero when this ordinal is greater than the
            other ordinal.
            </returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.op_LessThanOrEqual(KudyStudio.Logging.LogLevel,KudyStudio.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:KudyStudio.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is less than or equal to the second one.
            </summary>
            <param name="a">The first level.</param>
            <param name="b">The second level.</param>
            <returns>The value of <c>a.Ordinal &lt;= b.Ordinal</c></returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.op_GreaterThanOrEqual(KudyStudio.Logging.LogLevel,KudyStudio.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:KudyStudio.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is greater than or equal to the second one.
            </summary>
            <param name="a">The first level.</param>
            <param name="b">The second level.</param>
            <returns>The value of <c>a.Ordinal &gt;= b.Ordinal</c></returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.op_LessThan(KudyStudio.Logging.LogLevel,KudyStudio.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:KudyStudio.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is less than the second one.
            </summary>
            <param name="a">The first level.</param>
            <param name="b">The second level.</param>
            <returns>The value of <c>a.Ordinal &lt; b.Ordinal</c></returns>
        </member>
        <member name="M:KudyStudio.Logging.LogLevel.op_GreaterThan(KudyStudio.Logging.LogLevel,KudyStudio.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:KudyStudio.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is greater than the second one.
            </summary>
            <param name="a">The first level.</param>
            <param name="b">The second level.</param>
            <returns>The value of <c>a.Ordinal &gt; b.Ordinal</c></returns>
        </member>
        <member name="P:KudyStudio.Logging.LogLevel.Name">
            <summary>
            Gets the name of the log level.
            </summary>
        </member>
        <member name="P:KudyStudio.Logging.LogLevel.UppercaseName">
            <summary>
            Gets the name of the logger in upper case.
            </summary>
        </member>
        <member name="P:KudyStudio.Logging.LogLevel.LowercaseName">
            <summary>
            Gets the name of the logger in lower case.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ResourceXmlFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ResourceXmlFile.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ResourceXmlFile.ToDictionary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ResourceXmlFile.Resources">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.QueueTaskServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTaskServer.OnQueueTaskExecuting(KudyStudio.Utility.Tasking.QueueTaskServer.QueueTaskExecutingEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTaskServer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTaskServer.AddTask(KudyStudio.Utility.Tasking.QueueTask)">
            <summary>
            
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTaskServer.Flush">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueTaskServer.RunNextTask">
            <summary>
            Runs the next task in the task queue. If no tasks are available, 
            nothing will be done.
            </summary>
            <returns>true if a task was run, false if no task was available.</returns>
            <seealso cref="P:KudyStudio.Utility.Tasking.QueueTaskServer.TasksPending"/>
        </member>
        <member name="E:KudyStudio.Utility.Tasking.QueueTaskServer.QueueTaskExecuting">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.QueueTaskServer.TasksPending">
            <summary>
            Gets whether there are any tasks pending to be run in this task queue.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.QueueTaskServer.QueueTaskExecutingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.QueueTaskServer.QueueTaskExecutingEventArgs.Task">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.CollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.CollectionExtensions.ToUrlQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CollectionExtensions.ToUrlQueryString(System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="encodeValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CollectionExtensions.ToUrlQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            
            </summary>
            <param name="keyValuePairs"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.CollectionExtensions.ToUrlQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)">
            <summary>
            
            </summary>
            <param name="keyValuePairs"></param>
            <param name="encodeValue"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.LazyField`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KudyStudio.LazyField`1.SetLoader(System.Func{`0})">
            <summary>
            
            </summary>
            <param name="loader"></param>
        </member>
        <member name="M:KudyStudio.LazyField`1.SetSetter(System.Func{`0,`0})">
            <summary>
            
            </summary>
            <param name="setter"></param>
        </member>
        <member name="M:KudyStudio.LazyField`1.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.LazyField`1.SetValue(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:KudyStudio.LazyField`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.PriorityQueue">
            <summary>
            PriorityQueue class
            This class is not thread safe because we use external lock
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.PriorityQueue._queuesCount">
            <summary>
            The number of queues, there is one for each type of priority
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.PriorityQueue._queues">
            <summary>
            Work items queues. There is one for each type of priority
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.PriorityQueue._workItemsCount">
            <summary>
            The total number of work items within the queues 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Threading.Internal.PriorityQueue._version">
            <summary>
            Use with IEnumerable interface
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.Enqueue(KudyStudio.Utility.Threading.Internal.IHasWorkItemPriority)">
            <summary>
            Enqueue a work item.
            </summary>
            <param name="workItem">A work item</param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.Dequeue">
            <summary>
            Dequeque a work item.
            </summary>
            <returns>Returns the next work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.GetNextNonEmptyQueue(System.Int32)">
            <summary>
            Find the next non empty queue starting at queue queueIndex+1
            </summary>
            <param name="queueIndex">The index-1 to start from</param>
            <returns>
            The index of the next non empty queue or -1 if all the queues are empty
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.Clear">
            <summary>
            Clear all the work items 
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.PriorityQueue.GetEnumerator">
            <summary>
            Returns an enumerator to iterate over the work items
            </summary>
            <returns>Returns an enumerator</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.Internal.PriorityQueue.Count">
            <summary>
            The number of work items 
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.PriorityQueue.PriorityQueueEnumerator">
            <summary>
            The class the implements the enumerator
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.Task">
            <summary>
            Represents an item in the Scheduled Tasks folder.  There are no public constructors for Task.
            New instances are generated by a <see cref="T:KudyStudio.Utility.TaskScheduler.ScheduledTasks"/> object using Open or Create methods.
            A task object holds COM interfaces;  call its <see cref="M:KudyStudio.Utility.TaskScheduler.Task.Close"/> method to release them.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.Task.task">
            <summary>
            Internal COM interface
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.Task.triggers">
            <summary>
            List of triggers for this task
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITask,System.String)">
            <summary>
            Internal constructor for a task, used by <see cref="T:KudyStudio.Utility.TaskScheduler.ScheduledTasks"/>.
            </summary>
            <param name="task">Instance of an ITask.</param>
            <param name="taskName">Name of the task.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.SetHiddenFileAttr(System.Boolean)">
            <summary>
            Set the hidden attribute on the file corresponding to this task.
            </summary>
            <param name="set">Set the attribute accordingly.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.GetHiddenFileAttribute">
            <summary>
            Get the hidden attribute from the file corresponding to this task.
            </summary>
            <returns>The value of the attribute.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.NextRunTimeAfter(System.DateTime)">
            <summary>
            Calculate the next time the task would be scheduled
            to run after a given arbitrary time.  If the task will not run
            (perhaps disabled) then returns <see cref="F:System.DateTime.MinValue"/>.
            </summary>
            <param name="after">The time to calculate from.</param>
            <returns>The next time the task would run.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Run">
            <summary>
            Schedules the task for immediate execution.  
            The system works from the saved version of the task, so call <see cref="M:KudyStudio.Utility.TaskScheduler.Task.Save"/> before running.
            If the task has never been saved, it throws an argument exception.  Problems starting
            the task are reported by the <see cref="P:KudyStudio.Utility.TaskScheduler.Task.ExitCode"/> property, not by exceptions on Run.
            </summary>
            <remarks>The system never updates an open task, so you don't get current results for
            the <see cref="P:KudyStudio.Utility.TaskScheduler.Task.Status"/> or the <see cref="P:KudyStudio.Utility.TaskScheduler.Task.ExitCode"/> properties until you close
            and reopen the task.
            </remarks>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Save">
            <summary>
            Saves changes to the established task name.
            </summary>
            <overloads>Saves changes that have been made to this Task.</overloads>
            <remarks>The account name is checked for validity
            when a Task is saved.  The password is not checked, but the account name
            must be valid (or empty).
            </remarks>
            <exception cref="T:System.Runtime.InteropServices.COMException">Unable to establish existence of the account specified.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Save(System.String)">
            <summary>
            Saves the Task with a new name.  The task with the old name continues to 
            exist in whatever state it was last saved.  It is no longer open, because.  
            the Task object is associated with the new name from now on. 
            If there is already a task using the new name, it is overwritten.
            </summary>
            <remarks>See the <see cref="M:KudyStudio.Utility.TaskScheduler.Task.Save"/>() overload.</remarks>
            <param name="name">The new name to be used for this task.</param>
            <exception cref="T:System.Runtime.InteropServices.COMException">Unable to establish existence of the account specified.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Close">
            <summary>
            Release COM interfaces for this Task.  After a Task is closed, accessing its
            members throws a null reference exception.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.DisplayForEdit">
            <summary>
            For compatibility with earlier versions.  New clients should use <see cref="M:KudyStudio.Utility.TaskScheduler.Task.DisplayPropertySheet"/>.
            </summary>
            <remarks>
            Display the property pages of this task for user editing.  If the user clicks OK, the
            task's properties are updated and the task is also automatically saved.
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.DisplayPropertySheet">
            
            <summary>
            Display all property pages.
            </summary>
            <remarks>  
            The method does not return until the user has dismissed the dialog box.
            If the dialog box is dismissed with the OK button, returns true and
            updates properties in the task.
            The changes are not made permanent, however, until the task is saved.  (Save() method.)
            </remarks>
            <returns><c>true</c> if dialog box was dismissed with OK, otherwise <c>false</c>.</returns>
            <overloads>Display the property pages of this task for user editing.</overloads>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.DisplayPropertySheet(KudyStudio.Utility.TaskScheduler.Task.PropPages)">
            <summary>
            Display only the specified property pages.  
            </summary>
            <remarks>  
            See the <see cref="M:KudyStudio.Utility.TaskScheduler.Task.DisplayPropertySheet"/>() overload.
            </remarks>
            <param name="pages">Controls which pages are presented</param>
            <returns><c>true</c> if dialog box was dismissed with OK, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.SetAccountInformation(System.String,System.String)">
            <summary>
            Sets the account under which the task will run.  Supply the account name and 
            password as parameters.  For the localsystem account, pass an empty string for
            the account name and null for the password.  See Remarks.
            </summary>
            <param name="accountName">Full account name.</param>
            <param name="password">Password for the account.</param>
            <remarks>
            <p>To have the task to run under the local system account, pass the empty string ("")
            as accountName and null as the password.  The caller must be running in
            an administrator account or in the local system account.
            </p> 
            <p>
            You can also specify a null password if the task has the flag RunOnlyIfLoggedOn set.
            This allows you to schedule a task for an account for which you don't know the password,
            but the account must be logged on interactively at the time the task runs.</p>
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.SetAccountInformation(System.String,System.Security.SecureString)">
            <summary>
            Overload for SetAccountInformation which permits use of a SecureString for the
            password parameter.  The decoded password will remain in memory only as long as
            needed to be passed to the TaskScheduler service.
            </summary>
            <param name="accountName">Full account name.</param>
            <param name="password">Password for the account.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Terminate">
            <summary>
            Request that the task be terminated if it is currently running.  The call returns
            immediately, although the task may continue briefly.  For Windows programs, a WM_CLOSE
            message is sent first and the task is given three minutes to shut down voluntarily.
            Should it not, or if the task is not a Windows program, TerminateProcess is used.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">The task is not running.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.ToString">
            <summary>
            Overridden. Outputs the name of the task, the application and parameters.
            </summary>
            <returns>String representing task.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.Task.Dispose">
            <summary>
            A synonym for Close.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Name">
            <summary>
            Gets the name of the task.  The name is also the filename (plus a .job extension)
            the Task Scheduler uses to store the task information.  To change the name of a
            task, use <see cref="M:KudyStudio.Utility.TaskScheduler.Task.Save"/> to save it as a new name and then delete
            the old task.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Triggers">
            <summary>
            Gets the list of triggers associated with the task.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.ApplicationName">
            <summary>
            Gets or sets the application filename that task is to run.  Get returns 
            an absolute pathname.  A name searched with the PATH environment variable can
            be assigned, and the path search is done when the task is saved.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.AccountName">
            <summary>
            Gets the name of the account under which the task process will run.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Comment">
            <summary>
            Gets or sets the comment associated with the task.  The comment appears in the 
            Scheduled Tasks user interface.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Creator">
            <summary>
            Gets or sets the creator of the task.  If no value is supplied, the system
            fills in the account name of the caller when the task is saved.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.ErrorRetryCount">
            <summary>
            Gets or sets the number of times to retry task execution after failure. (Not implemented.)
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.ErrorRetryInterval">
            <summary>
            Gets or sets the time interval, in minutes, to delay between error retries. (Not implemented.)
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.ExitCode">
            <summary>
            Gets the Win32 exit code from the last execution of the task.  If the task failed
            to start on its last run, the reason is returned as an exception.  Not updated while
            in an open task;  the property does not change unless the task is closed and re-opened.
            <exception>Various exceptions for a task that couldn't be run.</exception>
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Flags">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.TaskScheduler.TaskFlags"/> associated with the current task. 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.IdleWaitMinutes">
            <summary>
            Gets or sets how long the system must remain idle, even after the trigger
            would normally fire, before the task will run. 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.IdleWaitDeadlineMinutes">
            <summary>
            Gets or sets the maximum number of minutes that Task Scheduler will wait for a 
            required idle period to occur. 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.MaxRunTime">
            <summary>
            <p>Gets or sets the maximum length of time the task is permitted to run.
            Setting MaxRunTime also affects the value of <see cref="P:KudyStudio.Utility.TaskScheduler.Task.MaxRunTimeLimited"/>.
            </p>
            <p>The longest MaxRunTime implemented is 0xFFFFFFFE milliseconds, or 
            about 50 days.  If you set a TimeSpan longer than that, the
            MaxRunTime will be unlimited.</p>
            </summary>
            <Remarks>
            </Remarks>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.MaxRunTimeLimited">
            <summary>
            <p>If the maximum run time is limited, the task will be terminated after 
            <see cref="P:KudyStudio.Utility.TaskScheduler.Task.MaxRunTime"/> expires.  Setting the value to FALSE, i.e. unlimited,
            invalidates MaxRunTime.</p> 
            <p>The Task Scheduler service will try to send a WM_CLOSE message when it needs to terminate
            a task.  If the message can't be sent, or the task does not respond with three minutes,
            the task will be terminated using TerminateProcess.</p> 
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.MostRecentRunTime">
            <summary>
            Gets the most recent time the task began running.  <see cref="F:System.DateTime.MinValue"/> 
            returned if the task has not run.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.NextRunTime">
            <summary>
            Gets the next time the task will run. Returns <see cref="F:System.DateTime.MinValue"/> 
            if the task is not scheduled to run.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Parameters">
            <summary>
            Gets or sets the command-line parameters for the task.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Priority">
            <summary>
            Gets or sets the priority for the task process.  
            Note:  ProcessPriorityClass defines two levels (AboveNormal and BelowNormal) that are
            not documented in the task scheduler interface and can't be use on Win 98 platforms.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Status">
            <summary>
            Gets the status of the task.  Returns <see cref="T:KudyStudio.Utility.TaskScheduler.TaskStatus"/>.
            Not updated while a task is open.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.FlagsEx">
            <summary>
            Extended Flags associated with a task. These are associated with the ITask com interface
            and none are currently defined.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.WorkingDirectory">
            <summary>
            Gets or sets the initial working directory for the task.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Hidden">
            <summary>
            Hidden tasks are stored in files with
            the hidden file attribute so they don't appear in the Explorer user interface.
            Because there is a special interface for Scheduled Tasks, they don't appear
            even if Explorer is set to show hidden files.
            Functionally equivalent to TaskFlags.Hidden.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.Task.Tag">
            <summary>
            Gets or sets arbitrary data associated with the task.  The tag can be used for any purpose
            by the client, and is not used by the Task Scheduler.  Known as WorkItemData in the
            IWorkItem com interface.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.Task.PropPages">
            <summary>
            Argument for DisplayForEdit to determine which property pages to display.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.Task.PropPages.Task">
            <summary>
            The task property page
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.Task.PropPages.Schedule">
            <summary>
            The schedule property page
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.Task.PropPages.Settings">
            <summary>
            The setting property page
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedNodePool">
            <summary>
            The <see cref="T:MemcachedNodePool"/> encapsulates a collection of memcached server nodes.
            This class contains the server-selection logic.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNodePool.Dispose(System.Boolean)">
            <summary>
            Releases all resources allocated by this instance
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedNodePool.NodeLocator">
            <summary>
            The consistent hashing node locator.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNodePool.NodeLocator.#ctor(System.Collections.Generic.IList{KudyStudio.Caching.Memcached.MemcachedNode})">
            <summary>
            Initializes a node locator.
            </summary>
            <param name="nodes">The memcached nodes in the <see cref="T:MemcachedNodePool"/>.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNodePool.NodeLocator.Locate(System.String)">
            <summary>
            Gets the memcached node the specified key belongs to.
            </summary>
            <param name="key">The key of the item to be located.</param>
            <returns>The <see cref="T:MemcachedNode"/> the specifed item belongs to</returns>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedServerException">
            <summary>
            The exception that is thrown when a client error occures 
            during communicating with the memcached servers.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedServerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedServerException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedServerException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedServerException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.MemcachedServerException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInSetting">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInSetting.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInSetting.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInHost">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.IPlugInHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.IPlugInHost.Load">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.IPlugInHost.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugInHost.IsLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugInHost.PlugIns">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.IPlugInHost.PlugInDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHost.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHost.Load">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHost.LoadCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHost.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHost.UnloadCore">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInHost.IsLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInHost.PlugIns">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInHost.PlugInDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.AssemblyPart">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.AssemblyPart.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.AssemblyPart.Source">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear">
            <summary>
            Values for months of the year (January, February, etc.)  These carry the Flags
            attribute so DaysOfTheWeek and be combined with | (or).
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.January">
            <summary>
            January
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.February">
            <summary>
            February
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.March">
            <summary>
            March
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.April">
            <summary>
            April
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.May">
             <summary>
            May 
             </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.June">
            <summary>
            June
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.July">
            <summary>
            July
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.August">
            <summary>
            August
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.September">
            <summary>
            September
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.October">
            <summary>
            October
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.November">
            <summary>
            November
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.MonthsOfTheYear.December">
            <summary>
            December
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonStringContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonStringContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonStringContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonObjectContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonObjectContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonObjectContract.MemberSerialization">
            <summary>
            Gets or sets the object member serialization.
            </summary>
            <value>The member object serialization.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonObjectContract.Properties">
            <summary>
            Gets the object's properties.
            </summary>
            <value>The object's properties.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonObjectContract.ParametrizedConstructor">
            <summary>
            Gets or sets the parametrized constructor used to create the object.
            </summary>
            <value>The parametrized constructor.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JTokenEqualityComparer">
            <summary>
            Compares tokens to determine whether they are equal.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenEqualityComparer.Equals(KudyStudio.Utility.Json.Linq.JToken,KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:JToken"/> to compare.</param>
            <param name="y">The second object of type <see cref="T:JToken"/> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JTokenEqualityComparer.GetHashCode(KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:KudyStudio.Utility.Json.JsonIgnoreAttribute">
            <summary>
            Instructs the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> not to serialize the public field or public read/write property value.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1">
            <summary>
            Create a custom object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Converters.CustomCreationConverter`1.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Bson.BsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Bson.BsonWriter"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteEnd(KudyStudio.Utility.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteObjectId(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value that represents a BSON object id.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonWriter.WriteRegex(System.String,System.String)">
            <summary>
            Writes a BSON regex.
            </summary>
            <param name="pattern">The regex pattern.</param>
            <param name="options">The regex options.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Bson.BsonWriter.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind"/> used when writing <see cref="T:System.DateTime"/> values to BSON.
            When set to <see cref="F:System.DateTimeKind.Unspecified"/> no conversion will occur.
            </summary>
            <value>The <see cref="T:System.DateTimeKind"/> used when writing <see cref="T:System.DateTime"/> values to BSON.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Bson.BsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonReader.#ctor(System.IO.Stream,System.Boolean,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="readRootValueAsArray">if set to <c>true</c> the root object will be read as a JSON array.</param>
            <param name="dateTimeKindHandling">The <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Bson.BsonReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Bson.BsonReader.ReadRootValueAsArray">
            <summary>
            Gets or sets a value indicating whether the root object will be read as a JSON array.
            </summary>
            <value>
            	<c>true</c> if the root object will be read as a JSON array; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Bson.BsonReader.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.
            </summary>
            <value>The <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.</value>
        </member>
        <member name="T:KudyStudio.EnumUtil">
            <summary>
            Provides convenient functionalities for <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.EnumUtil.GetEnumValues``1">
            <summary>
            Gets the enum values as a strong typed enumeration.
            </summary>
            <typeparam name="T">The enum type.</typeparam>
            <returns>A strong typed enumeration.</returns>
        </member>
        <member name="T:KudyStudio.Data.PagedDataTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Data.PagedDataTable.#ctor(System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the PaginatedDataSet object to use data from the provided DataSet object.
            </summary>
            <param name="dataTable">The source DataTable object containing the data.</param>
            <param name="pageSize">The size of page.</param>
            <param name="pageIndex">The index of page.</param>
            <param name="recordCount">The record count of all data.</param>
        </member>
        <member name="M:KudyStudio.Data.PagedDataTable.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataTable.Table">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataTable.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataTable.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataTable.RecordCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Data.PagedDataTable.PageCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.CacheServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.CacheServiceProvider.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.CacheServiceProvider.WebCache">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.CacheServiceProvider.MemcachedCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.HtmlRegexHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.HtmlRegexHelper.DefaultRegexOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagNames(System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTag(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTag(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="selfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagList(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="selfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagByAttribute(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagSelfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagByAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagByAttribute(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <param name="tagSelfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagListByAttribute(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagSelfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagListByAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchTagListByAttribute(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <param name="tagSelfClosing"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtml(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtmlList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtmlByAttribute(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtmlByAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtmlListByAttribute(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchInnerHtmlListByAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="attributeName"></param>
            <param name="attributeValue"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchAttributeValue(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchAttributeValueList(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="tagName"></param>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchContent(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="prefix"></param>
            <param name="postfix"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchContent(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="prefix"></param>
            <param name="postfix"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchContentByPattern(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.MatchContentByPattern(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="prefixPattern"></param>
            <param name="postfixPattern"></param>
            <param name="regexOptions"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.ExtractAttributes(System.String)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.StripAllTags(System.String)">
            <summary>
            Strips all html tags.
            </summary>
            <param name="html">The string to strip.</param>
            <returns>The striped string.</returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.StripTags(System.String,System.String[])">
            <summary>
            Strips the specified html tags.
            </summary>
            <param name="html">The string to strip.</param>
            <param name="tagNames">The tag names string array to match.</param>
            <returns>The striped string.</returns>
        </member>
        <member name="M:KudyStudio.HtmlRegexHelper.StripTagsAndInnerHtml(System.String,System.String[])">
            <summary>
            Strips the specified html tags and their inner Html.
            </summary>
            <param name="html">The string to strip.</param>
            <param name="tagNames">The tag names string array to match.</param>
            <returns>The striped string.</returns>
        </member>
        <member name="T:KudyStudio.ThumbnailImageHelper">
            <summary>
            A helper class to create or save thumbnail images.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.String,System.Int32,System.Int32,KudyStudio.ThumbnailMode)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImagePath">The path of the original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.IO.Stream,System.Int32,System.Int32,KudyStudio.ThumbnailMode)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.Drawing.Image,System.Int32,System.Int32,KudyStudio.ThumbnailMode)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImage">The original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.String,System.Int32,System.Int32,KudyStudio.ThumbnailMode,System.Int32)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImagePath">The path of the original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <param name="quality">The quality must in range [1, 100].</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.IO.Stream,System.Int32,System.Int32,KudyStudio.ThumbnailMode,System.Int32)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <param name="quality">The quality must in range [1, 100].</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.SaveThumbnailImage(System.String,System.Drawing.Image,System.Int32,System.Int32,KudyStudio.ThumbnailMode,System.Int32)">
            <summary>
            Saves a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="savePath">The path to save the thumbnail image.</param>
            <param name="originalImage">The original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <param name="quality">The quality must in range [1, 100].</param>
            <returns>True if the save was succesful.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.CreateThumbnailImage(System.IO.Stream,System.Int32,System.Int32,KudyStudio.ThumbnailMode)">
            <summary>
            Makes a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="originalImageStream">The <see cref="T:System.IO.Stream"/> of the original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <returns>The thumbnail image.</returns>
        </member>
        <member name="M:KudyStudio.ThumbnailImageHelper.CreateThumbnailImage(System.Drawing.Image,System.Int32,System.Int32,KudyStudio.ThumbnailMode)">
            <summary>
            Makes a thumbnail by the specified <see cref="T:KudyStudio.ThumbnailMode"/>.
            </summary>
            <param name="originalImage">The original image.</param>
            <param name="maxWidth">The max width of the thumbnail.</param>
            <param name="maxHeight">The max height of the thumbnail.</param>
            <param name="mode">The <see cref="T:KudyStudio.ThumbnailMode"/> to make thumbnail by.</param>
            <returns>The thumbnail image.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.Pop3Client">
            <summary>
            Pop3Client.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.FormExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.AsString(KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.EndForm(KudyStudio.Web.Mtv.HtmlHelper)">
            <summary>
            
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],KudyStudio.Web.Mtv.Html.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="method"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            /
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Object,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.FormExtensions.BeginActionForm(KudyStudio.Web.Mtv.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="action"></param>
            <param name="mode"></param>
            <param name="area"></param>
            <param name="otherParameters"></param>
            <param name="queryParameters"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvClientMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvClientMode.UrlMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvClientMode.ScriptResource">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvClientMode.ScriptCompressor(System.String[],System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvClientMode.Initialize(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.PagingRenderOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingRenderOption.MiddleIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingRenderOption.PrevNextButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingRenderOption.FirstLastButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.PagingRenderOption.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.RequestExtensions">
            <summary>
            Provides a set of static methods for extensions.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormValue``1(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormValue``1(System.Web.HttpRequest,System.String,``0)">
            <summary>
            Gets the request form value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="request"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormString(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form string value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormString(System.Web.HttpRequest,System.String,System.String)">
            <summary>
            Gets the request form string value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormByte(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form byte value by the specified name. 
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormByte(System.Web.HttpRequest,System.String,System.Byte)">
            <summary>
            Gets the request form byte value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormInt32(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form int value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormInt32(System.Web.HttpRequest,System.String,System.Int32)">
            <summary>
            Gets the request form int value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormInt64(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form long value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormInt64(System.Web.HttpRequest,System.String,System.Int64)">
            <summary>
            Gets the request form long value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormFloat(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form float value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormFloat(System.Web.HttpRequest,System.String,System.Single)">
            <summary>
            Gets the request form float value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDouble(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form double value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDouble(System.Web.HttpRequest,System.String,System.Double)">
            <summary>
            Gets the request form double value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDecimal(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form decimal value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDecimal(System.Web.HttpRequest,System.String,System.Decimal)">
            <summary>
            Gets the request form decimal value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormBool(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form bool value by the specified name.
            If the request name does not exist, false will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormBool(System.Web.HttpRequest,System.String,System.Boolean)">
            <summary>
            Gets the request form bool value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDateTime(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form DateTime value by the specified name.
            If the request name does not exist, DateTime.MinValue will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormDateTime(System.Web.HttpRequest,System.String,System.DateTime)">
            <summary>
            Gets the request form DateTime value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormGuid(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form Guid value by the specified name.
            If the request name does not exist, Guid.Empty will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormGuid(System.Web.HttpRequest,System.String,System.Guid)">
            <summary>
            Gets the request form Guid value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormEnum``1(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request form enum value by the specified name, ignore case.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetFormEnum``1(System.Web.HttpRequest,System.String,System.Boolean)">
            <summary>
            Gets the request form enum value by the specified name.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryValue``1(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryValue``1(System.Web.HttpRequest,System.String,``0)">
            <summary>
            Gets the request query value by the specified name.
            </summary>
            <typeparam name="T">must be basic type</typeparam>
            <param name="request"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryString(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query string value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryString(System.Web.HttpRequest,System.String,System.String)">
            <summary>
            Gets the request query string value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryByte(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query byte value by the specified name. 
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryByte(System.Web.HttpRequest,System.String,System.Byte)">
            <summary>
            Gets the request query byte value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryInt32(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query int value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryInt32(System.Web.HttpRequest,System.String,System.Int32)">
            <summary>
            Gets the request query int value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryInt64(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query long value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryInt64(System.Web.HttpRequest,System.String,System.Int64)">
            <summary>
            Gets the request query long value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryFloat(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query float value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryFloat(System.Web.HttpRequest,System.String,System.Single)">
            <summary>
            Gets the request query float value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDouble(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query double value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDouble(System.Web.HttpRequest,System.String,System.Double)">
            <summary>
            Gets the request query double value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDecimal(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query decimal value by the specified name.
            If the request name does not exist, 0 will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDecimal(System.Web.HttpRequest,System.String,System.Decimal)">
            <summary>
            Gets the request query decimal value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryBool(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query bool value by the specified name.
            If the request name does not exist, false will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryBool(System.Web.HttpRequest,System.String,System.Boolean)">
            <summary>
            Gets the request query bool value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDateTime(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query DateTime value by the specified name.
            If the request name does not exist, DateTime.MinValue will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryDateTime(System.Web.HttpRequest,System.String,System.DateTime)">
            <summary>
            Gets the request query DateTime value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryGuid(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query Guid value by the specified name.
            If the request name does not exist, Guid.Empty will be returned.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryGuid(System.Web.HttpRequest,System.String,System.Guid)">
            <summary>
            Gets the request query Guid value by the specified name.
            </summary>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="defaultValue">If the request name does not exist, defaultValue will be returned.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryEnum``1(System.Web.HttpRequest,System.String)">
            <summary>
            Gets the request query enum value by the specified name, ignore case.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:KudyStudio.Web.RequestExtensions.GetQueryEnum``1(System.Web.HttpRequest,System.String,System.Boolean)">
            <summary>
            Gets the request query enum value by the specified name.
            </summary>
            <typeparam name="T">An enum type.</typeparam>
            <param name="request"></param>
            <param name="name">The name to search.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>The request value.</returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.ResourceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.ResourceExtensions.ResourceScript(KudyStudio.Web.Mtv.HtmlHelper,System.String[])">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="resourceKeys"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.Tasking.QueueAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Tasking.QueueAction.ExecuteCore(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:KudyStudio.Utility.Tasking.QueueAction.Action">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemStateCallback">
            <summary>
            An internal delegate to call when the WorkItem starts or completes
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TriggerList">
            <summary>
            TriggerList is a collection of Triggers.  Every Task has a TriggerList that is
            created and destroyed automatically along with the Task.  There are no public constructors. 
            </summary>
            <remarks>
            <para>
            A TriggerList can be empty, and indeed a newly created Task has an empty list. 
            It's not clear how the system handles a task with no triggers, however.</para>
            <para>
            TriggerList implements IList and behaves like other indexable collections with one limitation:   
            You can't insert a Trigger at a position.  <c>Insert()</c> throws NotImplementedException.  This
            restriction is based on the underlying API. </para>
            </remarks>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITask)">
            <summary>
            Internal constructor creates TriggerList using an ITask interface to initialize.
            </summary>
            <param name="task">Instance of an ITask.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.RemoveAt(System.Int32)">
            <summary>
            Removes the trigger at a specified index.
            </summary>
            <param name="index">Index of trigger to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Index out of range.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Not implemented; throws NotImplementedException.
            If implemented, would insert a trigger at a specified index. 
            </summary>
            <param name="index">Index to insert trigger.</param>
            <param name="value">Value of trigger to insert.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Remove(KudyStudio.Utility.TaskScheduler.Trigger)">
            <summary>
            Removes the trigger from the collection.  If the trigger is not in
            the collection, nothing happens.  (No exception.)
            </summary>
            <param name="trigger">Trigger to remove.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#Remove(System.Object)">
            <summary>
            IList.Remove implementation.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Contains(KudyStudio.Utility.TaskScheduler.Trigger)">
            <summary>
            Test to see if trigger is part of the collection.
            </summary>
            <param name="trigger">Trigger to find.</param>
            <returns>true if trigger found in collection.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#Contains(System.Object)">
            <summary>
            IList.Contains implementation.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Clear">
            <summary>
            Remove all triggers from collection.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.IndexOf(KudyStudio.Utility.TaskScheduler.Trigger)">
            <summary>
            Returns the index of the supplied Trigger.
            </summary>
            <param name="trigger">Trigger to find.</param>
            <returns>Zero based index in collection, -1 if not a member.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            IList.IndexOf implementation.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Add(KudyStudio.Utility.TaskScheduler.Trigger)">
            <summary>
            Add the supplied Trigger to the collection.  The Trigger to be added must be unbound,
            i.e. it must not be a current member of a TriggerList--this or any other.
            </summary>
            <param name="trigger">Trigger to add.</param>
            <returns>Index of added trigger.</returns>
            <exception cref="T:System.ArgumentException">Trigger being added is already bound.</exception>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#Add(System.Object)">
            <summary>
            IList.Add implementation.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the Triggers in the collection to an array, beginning at the given index. 
            The Triggers assigned to the array are cloned from the originals, implying they are
            unbound copies.  (Can't tell if cloning is the intended semantics for this ICollection method,
            but it seems a good choice for TriggerLists.) 
            </summary>
            <param name="array">Array to copy triggers into.</param>
            <param name="index">Index at which to start copying.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.GetEnumerator">
            <summary>
            Gets a TriggerList enumerator.
            </summary>
            <returns>Enumerator for TriggerList.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Dispose">
            <summary>
            Unbinds and Disposes all the Triggers in the collection, releasing the com interfaces they hold.
            Destroys the internal private pointer to the ITask com interface, but does not 
            specifically release the interface because it is also in the containing task.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.IsReadOnly">
            <summary>
            Gets read-only state of collection. Always false for TriggerLists.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.Item(System.Int32)">
            <summary>
            Access the Trigger at a specified index.  Assigning to a TriggerList element requires
            the value to unbound.  The previous list element becomes unbound and lost,
            while the newly assigned Trigger becomes bound in its place.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Collection index out of range.</exception>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList.this[int] implementation.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.IsFixedSize">
            <summary>
            Returns whether collection is a fixed size. Always returns false for TriggerLists.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.Count">
            <summary>
            Gets the number of Triggers in the collection.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.IsSynchronized">
            <summary>
            Returns synchronizable state. Always false since the Task Scheduler is not
            thread safe.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.SyncRoot">
            <summary>
            Gets the root object for synchronization. Always null since TriggerLists aren't synchronized.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TriggerList.Enumerator">
            <summary>
            Enumerator for TriggerList; implements IEnumerator interface.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Enumerator.#ctor(KudyStudio.Utility.TaskScheduler.TriggerList)">
            <summary>
            Internal constructor - Only accessible through <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>.
            </summary>
            <param name="outer">Instance of a TriggerList.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Enumerator.MoveNext">
            <summary>
            Moves to the next trigger. See <see cref="M:System.Collections.IEnumerator.MoveNext"/> for more information.
            </summary>
            <returns>False if there is no next trigger.</returns>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.TriggerList.Enumerator.Reset">
            <summary>
            Reset trigger enumeration. See <see cref="M:System.Collections.IEnumerator.Reset"/> for more information.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.TriggerList.Enumerator.Current">
            <summary>
            Retrieves the current trigger.  See <see cref="P:System.Collections.IEnumerator.Current"/> for more information.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement">
            <summary>
            Represents a configuration element for <see cref="T:ConnectSocketPool"/> used in <see cref="T:MemcachedNode"/>. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.MinPoolSize">
            <summary>
            Gets the MinPoolSize of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>10</c> by default and must in range [0, 1000].
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.MaxPoolSize">
            <summary>
            Gets the MinPoolSize of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>10</c> by default and must in range [<see cref="F:MinPoolSize"/>, 1000].
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.ConnectTimeout">
            <summary>
            Gets the ConnectTimeout of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>00:00:10</c>(10 seconds) by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.SendTimeout">
            <summary>
            Gets the SendTimeout of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>00:00:10</c>(10 seconds) by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.ReceiveTimeout">
            <summary>
            Gets the ReceiveTimeout of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>00:00:10</c>(10 seconds) by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement.DeadTimeout">
            <summary>
            Gets the DeadTimeout of <see cref="T:ConnectSocketPool"/> configuration.
            The value is <c>00:05:00</c>(5 minutes) by default.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException">
            <summary>
            The exception that is thrown when <see cref="T:KudyStudio.Caching.Memcached.CacheFlags"/> of a <see cref="T:KudyStudio.Caching.Memcached.CacheEntity"/> 
            is not supported by current version.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCacheFlagsException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.NotSupportCommandException">
            <summary>
            The exception that is thrown when a command is not supported by the Memcached server.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCommandException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCommandException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCommandException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCommandException"/> class with 
            a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCommandException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCommandException"/> class with 
            a specified error message and a reference to the inner exception that is 
            the cause of this exception.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException 
            parameter is not a null reference, the current exception is raised in a catch 
            block that handles the inner exception.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.NotSupportCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Caching.Memcached.NotSupportCommandException"/> class with 
            serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PluginManifest">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PluginManifest.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Assembly">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Author">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.PublisherUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PluginManifest.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Config.KudyConfigElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.WhichWeek">
            <summary>
            Values for week of month (first, second, ..., last)
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.WhichWeek.FirstWeek">
            <summary>
            First week of the month
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.WhichWeek.SecondWeek">
            <summary>
            Second week of the month
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.WhichWeek.ThirdWeek">
            <summary>
            Third week of the month
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.WhichWeek.FourthWeek">
            <summary>
            Fourth week of the month
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.WhichWeek.LastWeek">
            <summary>
            Last week of the month
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.OnIdleTrigger">
            <summary>
            Trigger that fires when the system is idle for a period of time.
            Length of period set by <see cref="P:KudyStudio.Utility.TaskScheduler.Task.IdleWaitMinutes"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnIdleTrigger.#ctor">
            <summary>
            Creates an OnIdleTrigger.  Idle period set separately.
            See <see cref="P:KudyStudio.Utility.TaskScheduler.Task.IdleWaitMinutes"/> inherited property.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.OnIdleTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">Current base Trigger.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.ObjectConstructor`1">
            <summary>
            Represents a method that constructs an object.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator">
            <summary>
            Generates a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from a specified <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.Generate(System.Type)">
            <summary>
            Generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.Generate(System.Type,KudyStudio.Utility.Json.Schema.JsonSchemaResolver)">
            <summary>
            Generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from.</param>
            <param name="resolver">The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver"/> used to resolve schema references.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.Generate(System.Type,System.Boolean)">
            <summary>
            Generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> will be nullable.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.Generate(System.Type,KudyStudio.Utility.Json.Schema.JsonSchemaResolver,System.Boolean)">
            <summary>
            Generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> from.</param>
            <param name="resolver">The <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaResolver"/> used to resolve schema references.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> will be nullable.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.UndefinedSchemaIdHandling">
            <summary>
            Gets or sets how undefined schemas are handled by the serializer.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchemaGenerator.ContractResolver">
            <summary>
            Gets or sets the contract resolver.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.JsonSchemaException">
            <summary>
            Returns detailed information about the schema exception.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaException"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Schema.JsonSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Schema.JsonSchemaException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchemaException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Schema.JsonSchemaException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="T:KudyStudio.EnvironmentUtil">
            <summary>
            Provides convenient functionalities concerned with environment.
            </summary>
        </member>
        <member name="M:KudyStudio.EnvironmentUtil.GetVariable(System.String)">
            <summary>
            Retrieves the value of an environment variable from the current process.
            </summary>
            <param name="variable">The name of the environment variable.</param>
            <returns>
            The value of the environment variable specified by variable, or string.Empty if the 
            environment variable is not found or the caller does not have the required permission 
            to perform this operation.
            </returns>
        </member>
        <member name="M:KudyStudio.EnvironmentUtil.GetFullPath(System.String)">
            <summary>
            Gets a fully qualified local file path form a path.
            </summary>
            <param name="path">The path to get form.</param>
            <returns>The fully qualified path.</returns>
            <remarks>
            <para>
            Converts the path specified to a fully qualified path. 
            If the path is relative it is taken as relative from the application base directory.
            </para>
            <para>
            The path specified must be a local file path, a URI is not supported.
            </para>
            </remarks>
        </member>
        <member name="M:KudyStudio.EnvironmentUtil.GetRegistryValue(System.String,System.String,System.Object)">
            <summary>
            Retrieves the value associated with the specified name, in the specified 
            registry key. If the name is not found in the specified key, returns a default 
            value that you provide, or String.Empty if the specified key does not exist.
            </summary>
            <param name="keyName">
            The full registry path of the key, beginning with a valid registry root, 
            such as "HKEY_CURRENT_USER".
            </param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="defaultValue">The value to return if name does not exist.</param>
            <returns>
            String.Empty if the subkey specified by keyName does not exist; otherwise, the value 
            associated with valueName, or defaultValue if valueName is not found.
            </returns>
        </member>
        <member name="M:KudyStudio.EnvironmentUtil.SetRegistryValue(System.String,System.String,System.Object)">
            <summary>
            Sets the specified name/value pair on the specified registry key. If the 
            specified key does not exist, it is created.
            </summary>
            <param name="keyName">
            The full registry path of the key, beginning with a valid registry root, 
            such as "HKEY_CURRENT_USER".
            </param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
        </member>
        <member name="M:KudyStudio.EnvironmentUtil.SetRegistryValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            Sets the name/value pair on the specified registry key, using the specified 
            registry data type. If the specified key does not exist, it is created.
            </summary>
            <param name="keyName">
            The full registry path of the key, beginning with a valid registry root, 
            such as "HKEY_CURRENT_USER".
            </param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
            <param name="valueKind">The registry data type to use when storing the data.</param>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.NewLine">
            <summary>
            Gets the system dependent line terminator.
            </summary>
            <value>
            The system dependent line terminator.
            </value>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.BaseDirectory">
            <summary>
            Gets the base directory for current <see cref="T:System.AppDomain"/>.
            </summary>
            <value>The base directory path for the current <see cref="T:System.AppDomain"/>.</value>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.ConfigurationFile">
            <summary>
            Gets the path to the configuration file for the current <see cref="T:System.AppDomain"/>.
            </summary>
            <value>The path to the configuration file for the current <see cref="T:System.AppDomain"/>.</value>
            <remarks>
            <para>
            The .NET Compact Framework 1.0 does not have a concept of a configuration
            file. For this runtime, we use the entry assembly location as the root for
            the configuration file name.
            </para>
            <para>
            The value returned may be either a local file path or a URI.
            </para>
            </remarks>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.EntryAssemblyLocation">
            <summary>
            Gets the path to the file that first executed in the current <see cref="T:System.AppDomain"/>.
            </summary>
            <value>The path to the entry assembly.</value>
            <remarks>
            <para>
            Gets the path to the file that first executed in the current <see cref="T:System.AppDomain"/>.
            </para>
            </remarks>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.CurrentThreadId">
            <summary>
            Gets the ID of the current thread.
            </summary>
            <value>The ID of the current thread.</value>
            <remarks>
            <para>
            On the .NET framework, the <c>AppDomain.GetCurrentThreadId</c> method
            is used to obtain the thread ID for the current thread. This is the 
            operating system ID for the thread.
            </para>
            <para>
            On the .NET Compact Framework 1.0 it is not possible to get the 
            operating system thread ID for the current thread. The native method 
            <c>GetCurrentThreadId</c> is implemented inline in a header file
            and cannot be called.
            </para>
            </remarks>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.HostName">
            <summary>
            Get the host name or machine name for the current machine
            </summary>
            <value>
            The hostname or machine name
            </value>
            <remarks>
            <para>
            Get the host name or machine name for the current machine
            </para>
            <para>
            The host name (<see cref="M:System.Net.Dns.GetHostName"/>) or
            the machine name (<c>Environment.MachineName</c>) for
            the current machine, or if neither of these are available
            then <c>NOT AVAILABLE</c> is returned.
            </para>
            </remarks>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.FriendlyName">
            <summary>
            Get this application's friendly name
            </summary>
            <value>
            The friendly name of this application as a string
            </value>
            <remarks>
            <para>
            If available the name of the application is retrieved from
            the <c>AppDomain</c> using <c>AppDomain.CurrentDomain.FriendlyName</c>.
            </para>
            <para>
            Otherwise the file name of the entry assembly is used.
            </para>
            </remarks>
        </member>
        <member name="P:KudyStudio.EnvironmentUtil.ProcessStartTime">
            <summary>
            Get the start time for the current process.
            </summary>
            <remarks>
            <para>
            Tries to get the start time for the current process.
            Failing that it returns the time of the first call to
            this property.
            </para>
            <para>
            Note that AppDomains may be loaded and unloaded within the
            same process without the process terminating and therefore
            without the process start time being reset.
            </para>
            </remarks>
        </member>
        <member name="T:KudyStudio.AssemblyUtil">
            <summary>
            Provides convenient functionalities for <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.AssemblyUtil.KudyStudioAssembly">
            <summary>
            The KudyStudio assembly.
            </summary>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetAssemblyLocation(System.Reflection.Assembly)">
            <summary>
            Gets the assembly location path for the specified assembly.
            </summary>
            <param name="assembly">The assembly to get the location for.</param>
            <returns>The location of the assembly.</returns>
            <remarks>
            This method does not guarantee to return the correct path
            to the assembly. If only tries to give an indication as to
            where the assembly was loaded from.
            </remarks>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetAssemblyShortName(System.Reflection.Assembly)">
            <summary>
            Gets the short name of the <see cref="T:System.Reflection.Assembly"/>.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> to get the name for.</param>
            <returns>The short name of the <see cref="T:System.Reflection.Assembly"/>.</returns>
            <remarks>
            <para>
            The short name of the assembly is the <see cref="P:System.Reflection.Assembly.FullName"/> 
            without the version, culture, or public key. i.e. it is just the 
            assembly's file name without the extension.
            </para>
            <para>
            Use this rather than <c>Assembly.GetName().Name</c> because that
            is not available on the Compact Framework.
            </para>
            <para>
            Because of a FileIOPermission security demand we cannot do
            the obvious Assembly.GetName().Name. We are allowed to get
            the <see cref="P:System.Reflection.Assembly.FullName"/> of the assembly so we 
            start from there and strip out just the assembly name.
            </para>
            </remarks>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetAssemblyFileName(System.Reflection.Assembly)">
            <summary>
            Gets the file name portion of the <see cref="T:System.Reflection.Assembly"/>, including the extension.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> to get the file name for.</param>
            <returns>The file name of the assembly.</returns>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetTypeFromString(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads the type specified in the type string.
            </summary>
            <param name="typeName">The name of the type to load.</param>
            <param name="throwOnError">Flag set to <c>true</c> to throw an exception if the type cannot be loaded.</param>
            <param name="ignoreCase"><c>true</c> to ignore the case of the type name; otherwise, <c>false</c></param>
            <returns>The type loaded or <c>null</c> if it could not be loaded.</returns>		
            <remarks>
            <para>
            If the type name is fully qualified, i.e. if contains an assembly name in 
            the type name, the type will be loaded from the system using 
            <see cref="M:System.Type.GetType(System.String,System.Boolean)"/>.
            </para>
            <para>
            If the type name is not fully qualified it will be loaded from the
            assembly that is directly calling this method. If the type is not found 
            in the assembly then all the loaded assemblies will be searched for the type.
            </para>
            </remarks>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetTypeFromString(System.Type,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads the type specified in the type string.
            </summary>
            <param name="relativeType">A sibling type to use to load the type.</param>
            <param name="typeName">The name of the type to load.</param>
            <param name="throwOnError">Flag set to <c>true</c> to throw an exception if the type cannot be loaded.</param>
            <param name="ignoreCase"><c>true</c> to ignore the case of the type name; otherwise, <c>false</c></param>
            <returns>The type loaded or <c>null</c> if it could not be loaded.</returns>
            <remarks>
            <para>
            If the type name is fully qualified, i.e. if contains an assembly name in 
            the type name, the type will be loaded from the system using 
            <see cref="M:System.Type.GetType(System.String,System.Boolean)"/>.
            </para>
            <para>
            If the type name is not fully qualified, it will be loaded from the assembly
            containing the specified relative type. If the type is not found in the assembly 
            then all the loaded assemblies will be searched for the type.
            </para>
            </remarks>
        </member>
        <member name="M:KudyStudio.AssemblyUtil.GetTypeFromString(System.Reflection.Assembly,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads the type specified in the type string.
            </summary>
            <param name="relativeAssembly">An assembly to load the type from.</param>
            <param name="typeName">The name of the type to load.</param>
            <param name="throwOnError">Flag set to <c>true</c> to throw an exception if the type cannot be loaded.</param>
            <param name="ignoreCase"><c>true</c> to ignore the case of the type name; otherwise, <c>false</c></param>
            <returns>The type loaded or <c>null</c> if it could not be loaded.</returns>
            <remarks>
            <para>
            If the type name is fully qualified, i.e. if contains an assembly name in 
            the type name, the type will be loaded from the system using <see cref="M:System.Type.GetType(System.String,System.Boolean)"/>.
            </para>
            <para>
            If the type name is not fully qualified it will be loaded from the specified
            assembly. If the type is not found in the assembly then all the loaded assemblies 
            will be searched for the type.
            </para>
            </remarks>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.Shutdown">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.ModuleExists(System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.GetModule(System.String)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.GetModuleList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.SetModuleHostFactory(KudyStudio.Frameworks.WcfModuleFramework.IModuleHostFactory)">
            <summary>
            
            </summary>
            <param name="factory"></param>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.ModuleHostCreated">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.WcfModuleFramework.ModuleServer.ModuleHost">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.WcfModuleFramework.ModuleState">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Created">
            <summary>
            Indicates that the communication object has been instantiated and is configurable, 
            but not yet open or ready for use.
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Opening">
            <summary>
            Indicates that the communication object is being transitioned from the System.ServiceModel.CommunicationState.Created
            state to the System.ServiceModel.CommunicationState.Opened state.
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Opened">
            <summary>
            Indicates that the communication object is now open and ready to be used.
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Closing">
            <summary>
            Indicates that the communication object is transitioning to the System.ServiceModel.CommunicationState.Closed
            state.
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Closed">
            <summary>
            Indicates that the communication object has been closed and is no longer
            usable.
            </summary>
        </member>
        <member name="F:KudyStudio.Frameworks.WcfModuleFramework.ModuleState.Faulted">
            <summary>
            Indicates that the communication object has encountered an error or fault
            from which it cannot recover and from which it is no longer usable.
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.AopFramework.InterceptingRealProxy`1">
            <summary>
            The InterceptingRealProxy is a custom <see cref="T:System.Runtime.Remoting.Proxies.RealProxy"/> used to perform method interception.
            </summary>
            <typeparam name="T">The type representing the declaration type of the transparent proxy.</typeparam>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InterceptingRealProxy`1.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Reflection.MemberInfo,KudyStudio.Frameworks.AopFramework.CallHandlerPipeline})">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="callHandlerPipelines"></param>
        </member>
        <member name="M:KudyStudio.Frameworks.AopFramework.InterceptingRealProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            The method invocaiton is intercepted and all of the related call handlers is invoked.
            </summary>
            <param name="message">A <see cref="T:System.Runtime.Remoting.Messaging.IMessage"/>  representing method call.</param>
            <returns>A <see cref="T:System.Runtime.Remoting.Messaging.IMessage"/>representig the return of method invocation.</returns>
        </member>
        <member name="T:KudyStudio.FileConfigManager">
            <summary>
            The factory class helps to creates and fetchs the config file 
            manager for the specified config type. 
            </summary>
        </member>
        <member name="M:KudyStudio.FileConfigManager.Create``1(System.Func{System.String},KudyStudio.FileConfigMonitor)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pathCreator"></param>
            <param name="monitor"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.FileConfigManager.Create``1(System.Func{System.String},KudyStudio.FileConfigSerializer{``0},KudyStudio.FileConfigMonitor)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pathCreator"></param>
            <param name="serializer"></param>
            <param name="monitor"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.TagRenderMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.TagRenderMode.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.TagRenderMode.StartTag">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.TagRenderMode.EndTag">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.TagRenderMode.SelfClosing">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ViewPage`1">
            <summary>
            Provides base page for a web application using Mtc web framework. If you use 
            this class, <c>AutoEventWireup</c> must set to false in the page directive to 
            prevent calling Page_Init/Page_Load twice. If enables Mtc web framework in KudyStudio 
            config file, the file name of default page must be "index.aspx" for url rewriting.
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ViewPage`1.SetViewData(KudyStudio.Web.Mtv.ViewDataDictionary)">
            <summary>
            
            </summary>
            <param name="viewData"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage`1.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage`1.Html">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ViewPage`1.ViewData">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.SmtpSettingInfo">
            <summary>
            Smtp设置信息类。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.from">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.fromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.smtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.smtpPort">
            <summary>
            SMTP服务器端口(默认为 25)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.smtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.smtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.smtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.From">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.FromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.SmtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.SmtpPort">
            <summary>
            SMTP服务器端口(默认为 25，gmail：587)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.SmtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.SmtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.SmtpSettingInfo.SmtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.LanguageLoader">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.LanguageLoader.Load(KudyStudio.Web.Mtv.ModeContext)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.Web.Mtv.LanguageLoader.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Threading.Internal.WorkItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:KudyStudio.Utility.Threading.Internal.WorkItemFactory.CreateWorkItem(KudyStudio.Utility.Threading.IWorkItemsGroup,KudyStudio.Utility.Threading.WIGStartInfo,KudyStudio.Utility.Threading.WorkItemCallback,System.Object,KudyStudio.Utility.Threading.PostExecuteWorkItemCallback,KudyStudio.Utility.Threading.CallToPostExecute,KudyStudio.Utility.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="T:KudyStudio.Utility.Threading.STPStartInfo">
            <summary>
            Summary description for STPStartInfo.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.STPStartInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Threading.STPStartInfo.#ctor(KudyStudio.Utility.Threading.STPStartInfo)">
            <summary>
            
            </summary>
            <param name="stpStartInfo"></param>
        </member>
        <member name="M:KudyStudio.Utility.Threading.STPStartInfo.AsReadOnly">
            <summary>
            Get a readonly version of this STPStartInfo.
            </summary>
            <returns>Returns a readonly reference to this STPStartInfo</returns>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.IdleTimeout">
            <summary>
            Get/Set the idle timeout in milliseconds.
            If a thread is idle (starved) longer than IdleTimeout then it may quit.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.MinWorkerThreads">
            <summary>
            Get/Set the lower limit of threads in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.MaxWorkerThreads">
            <summary>
            Get/Set the upper limit of threads in the pool.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.ThreadPriority">
            <summary>
            Get/Set the scheduling priority of the threads in the pool.
            The Os handles the scheduling.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.PerformanceCounterInstanceName">
            <summary>
            Get/Set the performance counter instance name of this SmartThreadPool
            The default is null which indicate not to use performance counters at all.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Threading.STPStartInfo.EnableLocalPerformanceCounters">
            <summary>
            Enable/Disable the local performance counter.
            This enables the user to get some performance information about the SmartThreadPool 
            without using Windows performance counters. (Useful on WindowsCE, Silverlight, etc.)
            The default is false.
            </summary>
        </member>
        <member name="T:KudyStudio.Data.MySqlHelper">
            <summary>
            MySqlHelper
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.ConnectSocket">
            <summary>
            The <see cref="T:ConnectSocket"/> class encapsulates a socket connection to a specified memcached server.
            It contains a buffered stream for communication, and methods for sending and retrieving
            data from the memcached server, as well as general memcached error checking.
            </summary>
        </member>
        <member name="F:KudyStudio.Caching.Memcached.ConnectSocket.Id">
            <summary>
            The unique ID of this instance Used by the <see cref="T:MemcachedNode"/> to identify 
            the instance in its inner lists. This field is read-only.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.#ctor(System.Net.IPEndPoint,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Action{KudyStudio.Caching.Memcached.ConnectSocket})">
            <summary>
            Creates an instance of <see cref="T:ConnectSocket"/>.
            </summary>
            <param name="endpoint">An <see cref="T:System.Net.IPEndPoint"/> the socket establishes a connection to.</param>
            <param name="connectTimeout">The timeout time span for initial connection.</param>
            <param name="sendTimeout">The send timeout time span.</param>
            <param name="receiveTimeout">The receive timeout time span.</param>
            <param name="returnCallback">An action called when the socket is to be return to it's <see cref="T:ConnectSocketPool"/>.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Read(System.Byte[])">
            <summary>
            Fills the given byte array with data from the connected <see cref="T:ConnectSocket"/>.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Fills the given byte array with data from the connected <see cref="T:ConnectSocket"/>,
            starting at the specified offset.
            </summary>
            <param name="buffer">An array of <see cref="T:byte"/> that is the storage location for the received data.</param>
            <param name="offset">The location in buffer to store the received data.</param>
            <param name="count">The number of bytes to read.</param>
            <remarks>This method blocks and will not return until the specified amount of bytes are read.</remarks>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.ReadLine">
            <summary>
            Reads from the socket until the sequence '\r\n' is encountered, 
            and returns everything up to but not including that sequence as a UTF8-encoded string
            </summary>
            <returns>A line from the socket.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.ReadResponse">
            <summary>
            Reads a response line from the socket, checks for general memcached errors, and returns the line.
            </summary>
            <returns>The data sent by the memcached server.</returns>
            <exception cref="T:System.InvalidOperationException">The server did not sent a response or an empty line was returned.</exception>
            <exception cref="T:KudyStudio.Caching.Memcached.MemcachedClientException">The server did not recognize the request sent by the client. The Message of the exception is the message returned by the server.</exception>
            <exception cref="T:KudyStudio.Caching.Memcached.MemcachedServerException">The server did not specified any reason just returned the string ERROR. - or - The server returned a SERVER_ERROR, in this case the Message of the exception is the message returned by the server.</exception>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Write(System.Byte[])">
            <summary>
            Writes an array of <see cref="T:byte"/> to the connected <see cref="T:ConnectSocket"/>.
            </summary>
            <param name="buffer">An array of type byte that contains the data to be sent.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the specified number of bytes to a connected <see cref="T:ConnectSocket"/>, 
            starting at the specified offset.
            </summary>
            <param name="buffer">An array of type byte that contains the data to be sent.</param>
            <param name="offset">The position in the data buffer at which to begin sending data.</param>
            <param name="count">The number of bytes to send.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.WriteCommand(System.String)">
            <summary>
            Writes a string command to the socket encoded in UTF8 format.
            </summary>
            <param name="value">The command string to be sent to the socket.</param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Reset">
            <summary>
            Resets this PooledSocket by making sure the incoming buffer of the socket is empty.
            If there was any leftover data, this method return true.
            </summary>
            <returns>True if there was any leftover data, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Return">
            <summary>
            Returns current socket to the pool.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.ToString">
            <summary>
            returns the string representation of this socket.
            </summary>
            <returns>A string representation of this socket</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.ConnectSocket.Dispose(System.Boolean)">
            <summary>
            Dispose resources. This method closes the underlying stream and socket.
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.ConnectSocket.Connected">
            <summary>
            Gets whether or not the socket is connected.
            </summary>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.ConnectSocket.CreateDate">
            <summary>
            Gets the create date of the socket.
            </summary>
        </member>
        <member name="T:KudyStudio.Caching.Memcached.MemcachedNode">
            <summary>
            Represents a memcached server node in a <see cref="T:MemcachedNodePool"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNode.#ctor(System.Net.IPEndPoint,KudyStudio.Caching.Memcached.Config.SocketPoolConfigElement)">
            <summary>
            Creates an instance of <see cref="T:MemcachedNode"/>.
            </summary>
            <param name="endpoint">An <see cref="T:System.Net.IPEndPoint"/> the socket establishes a connection to.</param>
            <param name="poolConfig">The configuration for <see cref="T:ConnectSocketPool"/> used in <see cref="T:MemcachedNode"/></param>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNode.Ping">
            <summary>
            Gets a value indicating whether the server is working or not.
            If the server is not working, and the "being dead" timeout has been expired it will reinitialize itself.
            </summary>
            <remarks>It's possible that the server is still not up &amp; running so the next call to <see cref="M:Acquire"/> could mark the instance as dead again.</remarks>
            <returns>true if the server is working, otherwise false.</returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNode.Acquire">
            <summary>
            Acquires a new item from the pool
            </summary>
            <returns>
            An <see cref="T:ConnectSocket"/> instance which is connected to the memcached server, 
            or <c>null</c> if the server is dead.
            </returns>
        </member>
        <member name="M:KudyStudio.Caching.Memcached.MemcachedNode.Dispose(System.Boolean)">
            <summary>
            Releases all resources allocated by this instance
            </summary>
            <param name="disposing">A value which indicates whether managed resources may be disposed of.</param>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedNode.IsAlive">
            <summary>
            <para>Gets a value indicating whether the server is working or not. Returns a <b>cached</b> state.</para>
            <para>To get real-time information and update the cached state, use the <see cref="M:Ping"/> method.</para>
            </summary>
            <remarks>Used by the <see cref="T:MemcachedNodePool"/> to quickly check if the server's state is valid.</remarks>
        </member>
        <member name="P:KudyStudio.Caching.Memcached.MemcachedNode.EndPoint">
            <summary>
            Gets the <see cref="T:System.Net.IPEndPoint"/> of this instance
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.TaskStatus">
            <summary>
            Status values returned for a task.  Some values have been determined to occur although
            they do no appear in the Task Scheduler system documentation.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.Ready">
            <summary>
            The task is ready to run at its next scheduled time.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.Running">
            <summary>
            The task is currently running.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.NotScheduled">
            <summary>
            One or more of the properties that are needed to run this task on a schedule have not been set. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.NeverRun">
            <summary>
            The task has not yet run.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.Disabled">
            <summary>
            The task will not run at the scheduled times because it has been disabled.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.NoMoreRuns">
            <summary>
            There are no more runs scheduled for this task.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.Terminated">
            <summary>
            The last run of the task was terminated by the user.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.NoValidTriggers">
            <summary>
            Either the task has no triggers or the existing triggers are disabled or not set.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.TaskScheduler.TaskStatus.EventTrigger">
            <summary>
            Event triggers don't have set run times.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.WeeklyTrigger">
            <summary>
            Trigger that fires at a specified time, on specified days of the week,
            every so many weeks.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.WeeklyTrigger.#ctor(System.Int16,System.Int16,KudyStudio.Utility.TaskScheduler.DaysOfTheWeek,System.Int16)">
            <summary>
            Creates a WeeklyTrigger that is eligible to fire only during certain weeks.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of hour (specified in "hour") trigger will fire.</param>
            <param name="daysOfTheWeek">Days of the week task will run.</param>
            <param name="weeksInterval">Number of weeks between task runs.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.WeeklyTrigger.#ctor(System.Int16,System.Int16,KudyStudio.Utility.TaskScheduler.DaysOfTheWeek)">
            <summary>
            Creates a WeeklyTrigger that is eligible to fire during any week.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of hour (specified in "hour") trigger will fire.</param>
            <param name="daysOfTheWeek">Days of the week task will run.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.WeeklyTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger interface from system Task Scheduler.</param>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.WeeklyTrigger.WeeksInterval">
            <summary>
            Gets or sets number of weeks from one eligible week to the next.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.WeeklyTrigger.WeekDays">
            <summary>
            Gets or sets the days of the week on which the trigger fires.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonISerializableContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonISerializableContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonISerializableContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:KudyStudio.Utility.Json.Serialization.JsonISerializableContract.ISerializableCreator">
            <summary>
            Gets or sets the ISerializable object constructor.
            </summary>
            <value>The ISerializable object constructor.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.DefaultSerializationBinder">
            <summary>
            The default serialization binder used when resolving and loading classes from type names.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.DefaultSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly"/> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type"/> name of the serialized object.</param>
            <returns>
            The type of the object the formatter creates a new instance of.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.ReferenceLoopHandling">
            <summary>
            Specifies reference loop handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ReferenceLoopHandling.Error">
            <summary>
            Throw a <see cref="T:KudyStudio.Utility.Json.JsonSerializationException"/> when a loop is encountered.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ReferenceLoopHandling.Ignore">
            <summary>
            Ignore loop references and do not serialize.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ReferenceLoopHandling.Serialize">
            <summary>
            Serialize loop references.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.NullValueHandling">
            <summary>
            Specifies null value handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.NullValueHandling.Include">
            <summary>
            Include null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.NullValueHandling.Ignore">
            <summary>
            Ignore null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.MissingMemberHandling">
            <summary>
            Specifies missing member handling options for the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.MissingMemberHandling.Ignore">
            <summary>
            Ignore a missing member and do not attempt to deserialize it.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.MissingMemberHandling.Error">
            <summary>
            Throw a <see cref="T:KudyStudio.Utility.Json.JsonSerializationException"/> when a missing member is encountered during deserialization.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.WriteState">
            <summary>
            Specifies the state of the <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Error">
            <summary>
            An exception has been thrown, which has left the <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> in an invalid state.
            You may call the <see cref="M:KudyStudio.Utility.Json.JsonWriter.Close"/> method to put the <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> in the <c>Closed</c> state.
            Any other <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> method calls results in an <see cref="T:System.InvalidOperationException"/> being thrown. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Closed">
            <summary>
            The <see cref="M:KudyStudio.Utility.Json.JsonWriter.Close"/> method has been called. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Object">
            <summary>
            An object is being written. 
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Array">
            <summary>
            A array is being written.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Constructor">
            <summary>
            A constructor is being written.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Property">
            <summary>
            A property is being written.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.WriteState.Start">
            <summary>
            A write method has not been called.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Formatting">
            <summary>
            Specifies formatting options for the <see cref="T:KudyStudio.Utility.Json.JsonTextWriter"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Formatting.None">
            <summary>
            No special formatting is applied. This is the default.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.Formatting.Indented">
            <summary>
            Causes child objects to be indented according to the <see cref="P:KudyStudio.Utility.Json.JsonTextWriter.Indentation"/> and <see cref="P:KudyStudio.Utility.Json.JsonTextWriter.IndentChar"/> settings.
            </summary>
        </member>
        <member name="T:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement">
            <summary>
            Represents a configuration element for UrlRewriting. 
            This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement.Mode">
            <summary>
            Gets the Mode of a rule in UrlRewriting configuration.
            The value is <c>RewriteMode.Normal</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement.IgnoreCase">
            <summary>
            Gets the Mode of a rule in UrlRewriting configuration.
            The value is <c>true</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement.VirtualUrl">
            <summary>
            Gets the VirtualUrl of a rule in UrlRewriting configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="P:KudyStudio.Web.UrlRewriting.Config.RuleConfigElement.DestinationUrl">
            <summary>
            Gets the DestinationUrl of a rule in UrlRewriting configuration.
            The value is <c>string.Empty</c> by default.
            </summary>
        </member>
        <member name="T:KudyStudio.StringExtensions">
            <summary>
            Provides a set of static method extensions for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            Indicates whether the specified <see cref="T:System.String"/> object is null or 
             an empty string ("").
            </summary>
            <param name="s">A <see cref="T:System.String"/> reference.</param>
            <returns>true if the value parameter is null or an empty string (""); otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.IsNullOrTrimedEmpty(System.String)">
            <summary>
            Indicates whether the specified <see cref="T:System.String"/> object is null or 
             an empty string ("") after trimed.
            </summary>
            <param name="s">A <see cref="T:System.String"/> reference.</param>
            <returns>true if the value parameter is null or an empty string ("") after trimed; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.Reverse(System.String)">
            <summary>
            Gets reverse string of a specified string.
            </summary>
            <param name="s">The string to reverse.</param>
            <returns>The reversed string.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.To``1(System.String)">
            <summary>
            Convert string to a specified type.
            </summary>
            <typeparam key="T"></typeparam>
            <param key="s"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.To``1(System.String,``0)">
            <summary>
            Convert string to a specified type.
            </summary>
            <typeparam key="T"></typeparam>
            <param key="s"></param>
            <param key="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToBool(System.String)">
            <summary>
            Convert string to bool. If fail to convert, false will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted bool value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToBool(System.String,System.Boolean)">
            <summary>
            Convert string to bool.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted bool value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToByte(System.String)">
            <summary>
            Convert string to byte. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted byte value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToByte(System.String,System.Byte)">
            <summary>
            Convert string to byte.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted byte value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToSByte(System.String)">
            <summary>
            Convert string to byte. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted byte value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToSByte(System.String,System.SByte)">
            <summary>
            Convert string to sbyte.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted sbyte value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt16(System.String)">
            <summary>
            Convert string to short. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted short value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt16(System.String,System.Int16)">
            <summary>
            Convert string to short.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted short value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt16(System.String)">
            <summary>
            Convert string to ushort. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted ushort value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt16(System.String,System.UInt16)">
            <summary>
            Convert string to ushort.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted ushort value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt32(System.String)">
            <summary>
            Convert string to int. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted int value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt32(System.String,System.Int32)">
            <summary>
            Convert string to int.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted int value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt32(System.String)">
            <summary>
            Convert string to uint. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted uint value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt32(System.String,System.UInt32)">
            <summary>
            Convert string to uint.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted uint value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt64(System.String)">
            <summary>
            Convert string to long. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted long value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToInt64(System.String,System.Int64)">
            <summary>
            Convert string to long.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted long value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt64(System.String)">
            <summary>
            Convert string to ulong. If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted ulong value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToUInt64(System.String,System.UInt64)">
            <summary>
            Convert string to ulong.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted ulong value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToFloat(System.String)">
            <summary>
            Convert string to float.
            If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted float value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToFloat(System.String,System.Single)">
            <summary>
            Convert string to float.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted float value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDouble(System.String)">
            <summary>
            Convert string to double.
            If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted double value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDouble(System.String,System.Double)">
            <summary>
            Convert string to double.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted double value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDecimal(System.String)">
            <summary>
            Convert string to decimal.
            If fail to convert, 0 will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted decimal value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDecimal(System.String,System.Decimal)">
            <summary>
            Convert string to decimal.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted decimal value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDateTime(System.String)">
            <summary>
            Convert string to DateTime.
            If fail to convert, DateTime.MinValue will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted DateTime value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToDateTime(System.String,System.DateTime)">
            <summary>
            Convert string to DateTime.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted DateTime value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToTimeSpan(System.String)">
            <summary>
            Convert string to TimeSpan.
            If fail to convert, TimeSpan.Zero will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted TimeSpan value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToTimeSpan(System.String,System.TimeSpan)">
            <summary>
            Convert string to TimeSpan.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted TimeSpan value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToGuid(System.String)">
            <summary>
            Convert string to DateTime.
            If fail to convert, <seealso cref="F:Guid.Empty"/> will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>The converted Guid value.</returns>
        </member>
        <member name="M:KudyStudio.StringExtensions.ToGuid(System.String,System.Guid)">
            <summary>
            Convert string to DateTime.
            If fail to convert, <paramref name="defaultValue"/> will be returned.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="defaultValue">If fail to convert, defaultValue will be returned.</param>
            <returns>The converted Guid value.</returns>
        </member>
        <member name="T:KudyStudio.Data.OracleHelper">
            <summary>
            OracleHelper
            </summary>
        </member>
        <member name="T:KudyStudio.FileWatcher">
            <summary>
            A simple file watcher for internal use.
            </summary>
        </member>
        <member name="P:KudyStudio.FileWatcher.FilePath">
            <summary>
            Gets or sets the path of the file to watch.
            </summary>
        </member>
        <member name="T:KudyStudio.InterlockedQueue`1">
            <summary>
            An thread-safe non blocking queue(a first-in, first-out collection of objects), 
            implemented using interlocked operations.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
        </member>
        <member name="M:KudyStudio.InterlockedQueue`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterlockedQueue`1"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.InterlockedQueue`1.Peek">
            <summary>
            Returns the item at the beginning of the <see cref="T:InterlockedQueue`1"/>.
            </summary>
            <returns>
            The item at the beginning of the <see cref="T:InterlockedQueue`1"/> or 
            <c>null</c> if no items in the <see cref="T:InterlockedQueue`1"/>.
            </returns>
        </member>
        <member name="M:KudyStudio.InterlockedQueue`1.Dequeue">
            <summary>
            Removes and returns the item at the beginning of the <see cref="T:InterlockedQueue`1"/>.
            </summary>
            <returns>
            The object that is removed from the beginning of the <see cref="T:InterlockedQueue`1"/> 
            if an item was successfully dequeued; otherwise <c>null</c>.
            </returns>
        </member>
        <member name="M:KudyStudio.InterlockedQueue`1.Enqueue(`0)">
            <summary>
            Adds an object to the end of the <see cref="T:InterlockedQueue`1"/>.
            </summary>
            <param name="value">The item to be added to the <see cref="T:InterlockedQueue`1"/>. The value can not be <c>null</c>.</param>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,KudyStudio.Web.Mtv.Html.HeadIncludeOptions,System.String)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="options"></param>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,KudyStudio.Web.Mtv.Html.HeadIncludeOptions,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="options"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Web.Mtv.Html.HeadIncludeExtensions.HeadInclude(KudyStudio.Web.Mtv.HtmlHelper,KudyStudio.Web.Mtv.Html.HeadIncludeType,KudyStudio.Web.Mtv.Html.HeadIncludeOptions,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="type"></param>
            <param name="options"></param>
            <param name="src"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.HeadIncludeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HeadIncludeType.Css">
            <summary>
            Css
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HeadIncludeType.Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.Html.HeadIncludeOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HeadIncludeOptions.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HeadIncludeOptions.Cache">
            <summary>
            Cache
            </summary>
        </member>
        <member name="F:KudyStudio.Web.Mtv.Html.HeadIncludeOptions.Compress">
            <summary>
            Compress
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.ActionExecutedContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.ActionExecutedContext.#ctor(KudyStudio.Web.Mtv.ModeContext,System.Reflection.MethodInfo,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception)">
            <summary>
            
            </summary>
            <param name="modeContext"></param>
            <param name="actionMethod"></param>
            <param name="actionParameters"></param>
            <param name="exception"></param>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionExecutedContext.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionExecutedContext.ExceptionHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Web.Mtv.ActionExecutedContext.FilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Web.Mtv.MtvDrivePage">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Web.Mtv.MtvDrivePage.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:KudyStudio.AssemblyExtensions">
            <summary>
            Provides a set of static methods for <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.AssemblyExtensions.GetResourceStreamByFileName(System.Reflection.Assembly,System.String)">
            <summary>
            Loads the specified manifest resource from assembly.
            </summary>
            <param name="assembly">The assembly to get stream from.</param>
            <param name="fileName">The case-sensitive file name(with extension) of the manifest resource being requested.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> representing the manifest resource; null if no resources 
            were specified during compilation, or if the resource is not visible to the caller.
            </returns>
        </member>
        <member name="T:KudyStudio.ReadOnlyDictionary`2">
            <summary>
            
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            
            </summary>
            <param name="dictionary"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:KudyStudio.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.ReadOnlyDictionary`2.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:KudyStudio.ReadOnlyDictionary`2.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.ReadOnlyDictionary`2.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient">
            <summary>
            Allows applications to send e-mail by using the Simple Mail Transfer Protocol 
            (SMTP) under class <see cref="T:System.Net.Mail.SmtpClient"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient"/> class by using 
            configuration file settings.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient"/> class that sends 
            e-mail by using the specified SMTP server and <c>SmtpClient.DefaultPort</c>.
            </summary>
            <param name="host">A string that contains the name or IP address of the host used for SMTP transactions.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient"/> class that sends 
            e-mail by using the specified SMTP server and port.
            </summary>
            <param name="host">A string that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="port">An int greater than zero that contains the port to be used on host.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient"/> class that sends 
            e-mail by using the specified SMTP server, <c>SmtpClient.DefaultPort</c>, username and password.
            </summary>
            <param name="host">A string that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient"/> class that sends 
            e-mail by using the specified SMTP server, port, username and password.
            </summary>
            <param name="host">A string that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="port">An int greater than zero that contains the port to be used on host.</param>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SetCredentials(System.String,System.String)">
            <summary>
            Sets the credentials used to authenticate the sender.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SetCredentials(System.String,System.String,System.String)">
            <summary>
            Sets the credentials used to authenticate the sender.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
            <param name="domain">The domain or computer name that verifies the credentials.</param>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Send2">
            <summary>
            同步发送邮件。
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.from">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.fromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.to">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.cc">
            <summary>
            抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.bcc">
            <summary>
            密送地址(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.attachments">
            <summary>
            邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.isBodyHtml">
            <summary>
            邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.priority">
            <summary>
            邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.smtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.smtpPort">
            <summary>
            SMTP服务器端口(默认为 25)。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.smtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.smtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.smtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Send">
            <summary>
            同步发送邮件。
            </summary>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SendAsync">
            <summary>
            异步发送邮件。
            </summary>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SendAsync(System.Object)">
            <summary>
            异步发送邮件。
            </summary>
            <param name="userToken">异步任务的唯一标识符</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SendAsync(System.Object,System.Net.Mail.SendCompletedEventHandler)">
            <summary>
            异步发送邮件。
            </summary>
            <param name="userToken">异步任务的唯一标识符</param>
            <param name="callback">异步任务的回调函数，可设置为 null</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SendMail(System.Boolean,System.Object,System.Net.Mail.SendCompletedEventHandler)">
            <summary>
            发送邮件。
            </summary>
            <param name="isAsync">是否异步发送邮件</param>
            <param name="userToken">异步任务的唯一标识符，当 isAsync 为 True 时必须设置该属性， 当 isAsync 为 False 时可设置为 null</param>
            <param name="callback">异步任务的回调函数，当 isAsync 为 True 时才有效， 可设置为 null</param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or 
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Finalize">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Host">
            <summary>
            Gets or sets the name or IP address of the host used for SMTP transactions.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Port">
            <summary>
            Gets or sets the port used for SMTP transactions. The default value is 25.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Timeout">
            <summary>
            Gets or sets a value that specifies the amount of time after which a synchronous 
            Overload:SmtpClient.Send call times out. The default value is 100,000 (100 seconds).
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.EnableSsl">
            <summary>
            Specify whether the System.Net.Mail.SmtpClient uses Secure Sockets Layer 
            (SSL) to encrypt the connection. The default is false.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SendCompleted">
            <summary>
            Occurs when an asynchronous e-mail send operation completes.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.From">
            <summary>
            发件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.FromName">
            <summary>
            发件人名称。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.To">
            <summary>
            收件人地址。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Cc">
            <summary>
            抄送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Bcc">
            <summary>
            密送地址(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Subject">
            <summary>
            邮件主题。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Body">
            <summary>
            邮件正文。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Attachments">
            <summary>
            邮件附件(默认为 null)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.IsBodyHtml">
            <summary>
            邮件正文是否为Html格式（默认为 false）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.Priority">
            <summary>
            邮件优先级（默认为Normal）。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SmtpHost">
            <summary>
            SMTP服务器。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SmtpPort">
            <summary>
            SMTP服务器端口(默认为 25，gmail：587)。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SmtpUsername">
            <summary>
            SMTP用户名。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SmtpPassword">
            <summary>
            SMTP登录密码。
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Net.Mail.Smtp.SmtpClient.SmtpSsl">
            <summary>
            是否使用安全套接字层（SSL）加密连接（默认为 false）。
            </summary>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInSettingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.Frameworks.PlugInFramework.PlugInSettingCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Frameworks.PlugInFramework.PlugInHostFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.Frameworks.PlugInFramework.PlugInHostFactory.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:KudyStudio.Utility.TaskScheduler.DailyTrigger">
            <summary>
            Trigger that fires at a specified time, every so many days.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.DailyTrigger.#ctor(System.Int16,System.Int16,System.Int16)">
            <summary>
            Creates a DailyTrigger that fires only at an interval of so many days.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of the hour trigger will fire.</param>
            <param name="daysInterval">Number of days between task runs.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.DailyTrigger.#ctor(System.Int16,System.Int16)">
            <summary>
            Creates DailyTrigger that fires every day.
            </summary>
            <param name="hour">Hour of day trigger will fire.</param>
            <param name="minutes">Minutes of hour (specified in "hour") trigger will fire.</param>
        </member>
        <member name="M:KudyStudio.Utility.TaskScheduler.DailyTrigger.#ctor(KudyStudio.Utility.TaskScheduler.Interop.ITaskTrigger)">
            <summary>
            Internal constructor to create from existing ITaskTrigger interface.
            </summary>
            <param name="iTrigger">ITaskTrigger from system Task Scheduler.</param>
        </member>
        <member name="P:KudyStudio.Utility.TaskScheduler.DailyTrigger.DaysInterval">
            <summary>
            Gets or sets the number of days between successive firings.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Utilities.StringBuffer">
            <summary>
            Builds a string. Unlike StringBuilder this class lets you reuse it's internal buffer.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Serialization.JsonDictionaryContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Serialization.JsonDictionaryContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Serialization.JsonDictionaryContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:KudyStudio.Utility.Json.Schema.ValidationEventHandler">
            <summary>
            Represents the callback method that will handle JSON schema validation events and the <see cref="T:KudyStudio.Utility.Json.Schema.ValidationEventArgs"/>.
            </summary>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JProperty">
            <summary>
            Represents a JSON property.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.#ctor(KudyStudio.Utility.Json.Linq.JProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> containing the child tokens of this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>, in document order.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JProperty.Load(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> from a <see cref="T:KudyStudio.Utility.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that will be read for the content of the <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> that contains the JSON that was read from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JProperty.Name">
            <summary>
            Gets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JProperty.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JProperty.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JObject">
            <summary>
            Represents a JSON object.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.#ctor(KudyStudio.Utility.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Properties">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of this object's properties.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of this object's properties.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Property(System.String)">
            <summary>
            Gets a <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> the specified name.
            </summary>
            <param name="name">The property name.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JProperty"/> with the specified name or null.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.PropertyValues">
            <summary>
            Gets an <see cref="T:KudyStudio.Utility.Json.Linq.JEnumerable`1"/> of this object's property values.
            </summary>
            <returns>An <see cref="T:KudyStudio.Utility.Json.Linq.JEnumerable`1"/> of this object's property values.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Load(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> from a <see cref="T:KudyStudio.Utility.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that will be read for the content of the <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> that contains the JSON that was read from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Parse(System.String)">
            <summary>
            Load a <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JObject"/> with the values of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.FromObject(System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/>.</param>
            <param name="jsonSerializer">The <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/> that will be used to read the object.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Add(System.String,KudyStudio.Utility.Json.Linq.JToken)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.Remove(System.String)">
            <summary>
            Removes the property with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>true if item was successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.TryGetValue(System.String,KudyStudio.Utility.Json.Linq.JToken@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <returns>true if a value was successfully retrieved; otherwise, false.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:KudyStudio.Utility.Json.Linq.JObject.PropertyChanged"/> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JObject.OnPropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:KudyStudio.Utility.Json.Linq.JObject.PropertyChanging"/> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="E:KudyStudio.Utility.Json.Linq.JObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:KudyStudio.Utility.Json.Linq.JObject.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JObject.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JObject.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified property name.
            </summary>
            <value></value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JObject.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Linq.JConstructor">
            <summary>
            Represents a JSON constructor.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> class.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.#ctor(KudyStudio.Utility.Json.Linq.JConstructor)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> class from another <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> object.
            </summary>
            <param name="other">A <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> object to copy from.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> class with the specified name.
            </summary>
            <param name="name">The constructor name.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.WriteTo(KudyStudio.Utility.Json.JsonWriter,KudyStudio.Utility.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:KudyStudio.Utility.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:KudyStudio.Utility.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Linq.JConstructor.Load(KudyStudio.Utility.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> from a <see cref="T:KudyStudio.Utility.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:KudyStudio.Utility.Json.JsonReader"/> that will be read for the content of the <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/>.</param>
            <returns>A <see cref="T:KudyStudio.Utility.Json.Linq.JConstructor"/> that contains the JSON that was read from the specified <see cref="T:KudyStudio.Utility.Json.JsonReader"/>.</returns>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JConstructor.Name">
            <summary>
            Gets or sets the name of this constructor.
            </summary>
            <value>The constructor name.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JConstructor.Type">
            <summary>
            Gets the node type for this <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:KudyStudio.Utility.Json.Linq.JConstructor.Item(System.Object)">
            <summary>
            Gets the <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:KudyStudio.Utility.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.StringEnumConverter">
            <summary>
            Converts an <see cref="T:System.Enum"/> to and from its name string value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.StringEnumConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.StringEnumConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.StringEnumConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.EntityKeyMemberConverter">
            <summary>
            Converts an Entity Framework EntityKey to and from JSON.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.EntityKeyMemberConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.EntityKeyMemberConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.Converters.BinaryConverter">
            <summary>
            Converts a binary value to and from a base 64 string value.
            </summary>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BinaryConverter.WriteJson(KudyStudio.Utility.Json.JsonWriter,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:KudyStudio.Utility.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BinaryConverter.ReadJson(KudyStudio.Utility.Json.JsonReader,System.Type,System.Object,KudyStudio.Utility.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:KudyStudio.Utility.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:KudyStudio.Utility.Json.Converters.BinaryConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KudyStudio.Utility.Json.ConstructorHandling">
            <summary>
            Specifies how constructors are used when initializing objects during deserialization by the <see cref="T:KudyStudio.Utility.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ConstructorHandling.Default">
            <summary>
            First attempt to use the public default constructor then fall back to single paramatized constructor.
            </summary>
        </member>
        <member name="F:KudyStudio.Utility.Json.ConstructorHandling.AllowNonPublicDefaultConstructor">
            <summary>
            Allow Json.NET to use a non-public default constructor.
            </summary>
        </member>
        <member name="T:KudyStudio.StreamExtensions">
            <summary>
            Provides a set of static method extensions for <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:KudyStudio.StreamExtensions.AsString(System.IO.Stream)">
            <summary>
            Reads the stream from the current position to the end of the stream.
            </summary>
            <param name="stream">The stream to be read.</param>
            <returns>
            The rest of the stream as a string, from the current position to the end. 
            If the current position is at the end of the stream, returns the empty string("").
            </returns>
        </member>
        <member name="M:KudyStudio.StreamExtensions.AsString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads the stream from the current position to the end of the stream.
            </summary>
            <param name="stream">The stream to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            The rest of the stream as a string, from the current position to the end. 
            If the current position is at the end of the stream, returns the empty string("").
            </returns>
        </member>
        <member name="M:KudyStudio.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies a stream to another stream.
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="T:KudyStudio.GZipCompressor">
            <summary>
            Provides methods for compressing and decompressing bytes using the GZip algorithm.
            </summary>
        </member>
        <member name="M:KudyStudio.GZipCompressor.Compress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Compresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array compressed.</returns>
        </member>
        <member name="M:KudyStudio.GZipCompressor.Decompress(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decompresses a byte array data.
            </summary>
            <param name="input">The input which contains the data</param>
            <param name="offset">The offset in the input where the data starts</param>
            <param name="count">The number of data bytes to compress with.</param>
            <returns>A byte array decompressed.</returns>
        </member>
        <member name="T:KudyStudio.RegexAssertionParts">
            <summary>
             Provides enumerated values to use to set Lookahead and Lookbehind Zero-Width Assertions 
             parts for regular expression to reserve.
            </summary>
        </member>
        <member name="F:KudyStudio.RegexAssertionParts.WithNone">
            <summary>
            Specifies that only middle part should be reserved.
            </summary>
        </member>
        <member name="F:KudyStudio.RegexAssertionParts.WithPrefix">
            <summary>
            Specifies that the prefix should also be reserved.
            </summary>
        </member>
        <member name="F:KudyStudio.RegexAssertionParts.WithPostfix">
            <summary>
            Specifies that the postfix should also be reserved.
            </summary>
        </member>
        <member name="T:KudyStudio.KeywordFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KudyStudio.KeywordFilter.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="keywords"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.#ctor(System.Collections.Generic.IEnumerable{KudyStudio.Keyword})">
            <summary>
            
            </summary>
            <param name="keywords"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="skipChars"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.#ctor(System.Collections.Generic.IEnumerable{KudyStudio.Keyword},System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="skipChars"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,KudyStudio.KeywordFormatter)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,KudyStudio.KeywordFormatter,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="formatter"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            Replaces all occurrences of the specified keysords in original, 
            with the specified value in the keywords.
            </summary>
            <param name="original">The string to be filter.</param>
            <param name="formatter">The formatter to be used for formating the keywords.</param>
            <param name="order">The order to be used for matching the keywords.</param>
            <param name="ignoreCase">A bool value indicating whether ignore cases or not when matching the keywords.</param>
            <returns>A filtered string.</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.ContainsAny(System.String)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="original"></param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.ContainsAny(System.String,KudyStudio.KeywordOrder)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="original"></param>
            <param name="order"></param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.ContainsAny(System.String,System.Boolean)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="original"></param>
            <param name="ignoreCase"></param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.ContainsAny(System.String,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            Searches passed text and returns true if text contains any keyword
            </summary>
            <param name="original"></param>
            <param name="order"></param>
            <param name="ignoreCase"></param>
            <returns>True when text contains any keyword</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword})">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.KeywordFormatter)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.KeywordFormatter)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.KeywordFormatter,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.KeywordFormatter,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="keywords"></param>
            <param name="formatter"></param>
            <param name="order"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Char},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            Replaces all occurrences of the specified keysords in original, 
            with the specified value in the keywords.
            </summary>
            <param name="original">The string to be filter.</param>
            <param name="keywords"></param>
            <param name="skipChars"></param>
            <param name="formatter">The formatter to be used for formating the keywords.</param>
            <param name="order">The order to be used for matching the keywords.</param>
            <param name="ignoreCase">A bool value indicating whether ignore cases or not when matching the keywords.</param>
            <returns>A filtered string.</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.Filter(System.String,System.Collections.Generic.IEnumerable{KudyStudio.Keyword},System.Collections.Generic.IEnumerable{System.Char},KudyStudio.KeywordFormatter,KudyStudio.KeywordOrder,System.Boolean)">
            <summary>
            Replaces all occurrences of the specified keysords in original, 
            with the specified value in the keywords.
            </summary>
            <param name="original">The string to be filter.</param>
            <param name="keywords"></param>
            <param name="skipChars"></param>
            <param name="formatter">The formatter to be used for formating the keywords.</param>
            <param name="order">The order to be used for matching the keywords.</param>
            <param name="ignoreCase">A bool value indicating whether ignore cases or not when matching the keywords.</param>
            <returns>A filtered string.</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.ParseKeywords(System.String)">
            <summary>
            
            </summary>
            <param name="keywordsText"></param>
            <returns></returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.LoadKeywords(System.String)">
            <summary>
            Loads a keyword file for <see cref="T:KudyStudio.KeywordFilter"/>.
            </summary>
            <param name="filePath">
            The file path to load keywords from. 
            Each item in the file is separated with new lines, formated as "keyword" or  "keyword|frequency".
            </param>
            <returns>A list of keywords.</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.LoadKeywords(System.String,System.Text.Encoding)">
            <summary>
            Loads a keyword file for <see cref="T:KudyStudio.KeywordFilter"/>.
            </summary>
            <param name="filePath">
            The file path to load keywords from. 
            Each item in the file is separated with new lines, formated as "keyword" or  "keyword|frequency".
            </param>
            <param name="encoding">The encoding for reading the file.</param>
            <returns>A list of keywords.</returns>
        </member>
        <member name="M:KudyStudio.KeywordFilter.SaveKeywords(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.SaveKeywords(System.Collections.Generic.IEnumerable{System.String},System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="filePath"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.SaveKeywords(System.Collections.Generic.IEnumerable{KudyStudio.Keyword},System.String)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:KudyStudio.KeywordFilter.SaveKeywords(System.Collections.Generic.IEnumerable{KudyStudio.Keyword},System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="keywords"></param>
            <param name="filePath"></param>
            <param name="encoding"></param>
        </member>
        <member name="P:KudyStudio.KeywordFilter.SkipChars">
            <summary>
            
            </summary>
        </member>
        <member name="P:KudyStudio.KeywordFilter.Keywords">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
